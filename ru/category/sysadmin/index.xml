<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysadmin | Д. С. Кулябов</title>
    <link>https://yamadharma.github.io/ru/category/sysadmin/</link>
      <atom:link href="https://yamadharma.github.io/ru/category/sysadmin/index.xml" rel="self" type="application/rss+xml" />
    <description>sysadmin</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><copyright>© 2021 Dmitry S. Kulyabov</copyright><lastBuildDate>Sun, 18 Apr 2021 20:16:00 +0300</lastBuildDate>
    <image>
      <url>https://yamadharma.github.io/media/icon_hu0a661dd90139895e92e2f18ae9404407_611148_512x512_fill_lanczos_center_2.png</url>
      <title>sysadmin</title>
      <link>https://yamadharma.github.io/ru/category/sysadmin/</link>
    </image>
    
    <item>
      <title>Варианты Git Workflow</title>
      <link>https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/</link>
      <pubDate>Sun, 18 Apr 2021 20:16:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/</guid>
      <description>&lt;p&gt;Варианты построения рабочего процесса на базе git.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#github-flow&#34;&gt;Github flow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#git-flow&#34;&gt;Git flow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;github-flow&#34;&gt;Github flow&lt;/h2&gt;
&lt;p&gt;Есть мастер. Когда необходимо что-то добавить, делается новая ветка: `feature branch`, `bugfix branch` etc.&lt;/p&gt;
&lt;h2 id=&#34;git-flow&#34;&gt;Git flow&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/04/18/gitflow-workflow/&#34;&gt;Рабочий процесс Gitflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Верификация коммитов git с помощью GPG</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/</link>
      <pubDate>Thu, 28 Jan 2021 18:47:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/</guid>
      <description>&lt;p&gt;Настроим верификацию коммитов git с помощью GPG.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#верификация-коммитов-с-помощью-gpg&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Верификация коммитов с помощью GPG&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#добавление-gpg-ключа-в-github&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.1&lt;/span&gt; Добавление GPG ключа в GitHub&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#подписывание-коммитов-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.2&lt;/span&gt; Подписывание коммитов git&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#настройка-автоматических-подписей-коммитов-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3&lt;/span&gt; Настройка автоматических подписей коммитов git&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#использование-keybase&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Использование Keybase&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#генерация-gpg-ключа&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Генерация GPG ключа&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#добавление-gpg-ключа-в-github&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Добавление GPG ключа в GitHub&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#практический-сценарий-использования-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;верификация-коммитов-с-помощью-gpg&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Верификация коммитов с помощью GPG&lt;/h2&gt;
&lt;p&gt;Как настроить GPG-подпись коммитов с помощью &lt;code&gt;gpg&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Генерируем ключ&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --full-generate-key
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Из предложенных опций выбираем тип RSA and RSA, размер 4096 и срок
действия.&lt;/p&gt;
&lt;p&gt;При вводе email убедитесь, что он соотвествует адресу, используемому на
GitHub.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Выводим список ключей и копируем ID фингерпринта приватного ключа&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --list-secret-keys --keyid-format LONG
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Выделенная часть &amp;ndash; ID PGP-ключа, которая является окончанием его фингерпринта.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Экспортируем ключ в формате ASCII по его ID&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;добавление-gpg-ключа-в-github&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.1&lt;/span&gt; Добавление GPG ключа в GitHub&lt;/h3&gt;
&lt;p&gt;Копируем ключ и добавляем его в настройках профиля на GitHub (или GitLab).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cкопируйте ваш сгенерированный PGP ключ:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt; | xclip -sel clip
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Перейдите в настройки GitHub (&lt;a href=&#34;https://github.com/settings/keys&#34;&gt;https://github.com/settings/keys&lt;/a&gt;), нажмите на кнопку &amp;ldquo;New GPG key&amp;rdquo; и вставьте полученный ключ в поле ввода.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;подписывание-коммитов-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.2&lt;/span&gt; Подписывание коммитов git&lt;/h3&gt;
&lt;p&gt;Подпись коммитов при работе через терминал:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git commit -a -S -m &#39;your commit message&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Флаг &lt;code&gt;-S&lt;/code&gt; означает создание подписанного коммита. При этом может
потребоваться ввод кодовой фразы, заданной при генерации GPG-ключа.&lt;/p&gt;
&lt;h3 id=&#34;настройка-автоматических-подписей-коммитов-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3&lt;/span&gt; Настройка автоматических подписей коммитов git&lt;/h3&gt;
&lt;p&gt;Используя введёный email, укажите Git применять его при подписи коммитов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global user.signingkey &amp;lt;PGP Fingerprint&amp;gt;
git config --global commit.gpgsign true
git config --global gpg.program $(which gpg2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;использование-keybase&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Использование Keybase&lt;/h2&gt;
&lt;p&gt;Для генерации и хранения GPG ключей можно использовать Keybase &lt;a href=&#34;https://keybase.io/&#34;&gt;https://keybase.io/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;После того, как вы зарегистрируетесь в Keybase, зайдите в терминал и
запустите следующие команды:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;keybase login
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;генерация-gpg-ключа&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Генерация GPG ключа&lt;/h3&gt;
&lt;p&gt;Дальше создайте новый GPG ключ, используя ваше настоящее имя и email,
сохраненный в GitHub:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;keybase pgp gen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Посмотрите список ключей:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;keybase pgp list
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;добавление-gpg-ключа-в-github&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Добавление GPG ключа в GitHub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cкопируйте ваш сгенерированный PGP ключ:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;keybase pgp export | xclip -i
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Перейдите в настройки GitHub (&lt;a href=&#34;https://github.com/settings/keys&#34;&gt;https://github.com/settings/keys&lt;/a&gt;), нажмите на кнопку &amp;ldquo;New GPG key&amp;rdquo; и вставьте полученный ключ в поле ввода.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;практический-сценарий-использования-git&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Настройте верификацию коммитов git (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/&#34;&gt;Верификация коммитов git с помощью GPG&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование. Conventional Changelog</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</link>
      <pubDate>Sat, 16 Jan 2021 17:41:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</guid>
      <description>&lt;p&gt;Пакет &lt;em&gt;Conventional Changelog&lt;/em&gt; представляет собой набор утилит. Их можно использовать как вместе, так и по отдельности. Также можно задавать свой рабочий процесс.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#репозитории&#34;&gt;Репозитории&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#список-утилит&#34;&gt;Список утилит&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#основные-утилиты-проекта&#34;&gt;Основные утилиты проекта&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#дополнительные-утилиты&#34;&gt;Дополнительные утилиты&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#настройка-утилит&#34;&gt;Настройка утилит&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-commits-detector&#34;&gt;conventional-commits-detector&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-recommended-bump&#34;&gt;conventional-recommended-bump&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#standard-changelog&#34;&gt;standard-changelog&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-changelog-cli&#34;&gt;conventional-changelog-cli&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#commitizen&#34;&gt;commitizen&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-github-releaser&#34;&gt;conventional-github-releaser&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#примерный-рабочий-процесс&#34;&gt;Примерный рабочий процесс&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;репозитории&#34;&gt;Репозитории&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Основной монорепозиторий: &lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog&#34;&gt;https://github.com/conventional-changelog/conventional-changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;список-утилит&#34;&gt;Список утилит&lt;/h2&gt;
&lt;h3 id=&#34;основные-утилиты-проекта&#34;&gt;Основные утилиты проекта&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;conventional-changelog-cli&lt;/a&gt; &amp;mdash; утилита командной строки.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/standard-changelog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;standard-changelog&lt;/a&gt; &amp;mdash; утилита командной строки для формата коммитов &lt;em&gt;angular&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;conventional-github-releaser &amp;mdash; создание нового релиза на GitHub из метаданных git.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;conventional-recommended-bump&lt;/a&gt; &amp;mdash; узнать на основе коммитов, какая версия рекомендуется.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/conventional-changelog/conventional-commits-detector&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;conventional-commits-detector&lt;/a&gt; &amp;mdash; определить, какое соглашение о коммитах использует репозиторий.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/commitizen/cz-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;commitizen&lt;/a&gt; &amp;mdash; утилита, задающая интерфейс к написанию коммитов.&lt;/li&gt;
&lt;li&gt;commitlint &amp;mdash; проверка правильности текста коммита.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;дополнительные-утилиты&#34;&gt;Дополнительные утилиты&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leoforfree/cz-customizable&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cz-customizable&lt;/a&gt; &amp;mdash; плагин для &lt;code&gt;commitizen&lt;/code&gt; для конфигурации формы ввода сообщений.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/uglow/cz-customizable-ghooks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cz-customizable-ghooks&lt;/a&gt; &amp;mdash; интеграция &lt;code&gt;cz-customizable&lt;/code&gt; с &lt;code&gt;ghooks&lt;/code&gt; или &lt;code&gt;husky&lt;/code&gt;, чтобы использовать единую конфигурацию для генерации и проверки сообщений коммитов .&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;настройка-утилит&#34;&gt;Настройка утилит&lt;/h2&gt;
&lt;h3 id=&#34;conventional-commits-detector&#34;&gt;conventional-commits-detector&lt;/h3&gt;
&lt;p&gt;Определить, какое соглашение о коммитах используется в репозитории.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-commits-detector
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx conventional-commits-detector
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В результате получим возможный тип коммитов.&lt;/p&gt;
&lt;h3 id=&#34;conventional-recommended-bump&#34;&gt;conventional-recommended-bump&lt;/h3&gt;
&lt;p&gt;узнать на основе коммитов, какая версия рекомендуется.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-recommended-bump
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx conventional-recommended-bump -p angular
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Здесь &lt;code&gt;angular&lt;/code&gt; &amp;mdash; название пресета.&lt;/p&gt;
&lt;p&gt;В результате получим уровень, на который изменяется версия.&lt;/p&gt;
&lt;h3 id=&#34;standard-changelog&#34;&gt;standard-changelog&lt;/h3&gt;
&lt;p&gt;Генерация журнала изменений с использованием соглашений о коммитах &lt;em&gt;angular&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] standard-changelog
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;p&gt;Параметры запуска можно посмотреть следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Генерация файла журнала выполняется следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog -i CHANGELOG.md -s
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;conventional-changelog-cli&#34;&gt;conventional-changelog-cli&lt;/h3&gt;
&lt;p&gt;Создаёт журнал изменений из метаданных git (если соглашение о коммитах отлично от &lt;em&gt;angular&lt;/em&gt;).&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-changelog-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если инструмент используется впервые и нужно учесть все предыдущие журналы изменений, можно выполнить команду:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;commitizen&#34;&gt;commitizen&lt;/h3&gt;
&lt;p&gt;Утилита, реализующая интерактивный процесс для генерации коммита.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] commitizen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;При этом устанавливается скрипт &lt;code&gt;git-cz&lt;/code&gt;, который мы и будем использовать для коммитов.&lt;/p&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Сконфигурим формат коммитов. Для этого добавим в файл &lt;code&gt;package.json&lt;/code&gt; команду для формирования коммитов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;&amp;quot;config&amp;quot;: {
    &amp;quot;commitizen&amp;quot;: {
	&amp;quot;path&amp;quot;: &amp;quot;cz-conventional-changelog&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Выполнение коммитов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git cz
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conventional-github-releaser&#34;&gt;conventional-github-releaser&lt;/h3&gt;
&lt;p&gt;Утилита, создающая новый выпуск на GitHub на основе метаданных git.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-github-releaser
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создайте новый токен для для доступа к github&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Токен создаётся по ссылке &lt;a href=&#34;https://github.com/settings/tokens/new&#34;&gt;https://github.com/settings/tokens/new&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Права для токена: &lt;code&gt;public_repo&lt;/code&gt; или &lt;code&gt;repo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Обязательно сразу скопируйте свой новый токен личного доступа. Нет возможности получить доступ к его значению ещё раз.&lt;/li&gt;
&lt;li&gt;Установите созданный токен как значение переменной окружения &lt;code&gt;CONVENTIONAL_GITHUB_RELEASER_TOKEN&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Также можно указать свой токен аутентификации с помощью флага &lt;code&gt;-t&lt;/code&gt; или &lt;code&gt;--token&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создание релиза с определённым пресетом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conventional-github-releaser -p angular
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Здесь &lt;code&gt;angular&lt;/code&gt; &amp;mdash; один из пресетов : &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;atom&lt;/code&gt;, &lt;code&gt;codemirror&lt;/code&gt;, &lt;code&gt;ember&lt;/code&gt;, &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;express&lt;/code&gt;, &lt;code&gt;jquery&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;примерный-рабочий-процесс&#34;&gt;Примерный рабочий процесс&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Внести изменения.&lt;/li&gt;
&lt;li&gt;Зафиксировать эти изменения.&lt;/li&gt;
&lt;li&gt;Проверить состояние Travis CI.&lt;/li&gt;
&lt;li&gt;Изменить версию в &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Закоммитить файлы: &lt;code&gt;package.json&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Задать метку (tag).&lt;/li&gt;
&lt;li&gt;Выложить на удалённый репозиторий (&lt;code&gt;push&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Сделать релиз (&lt;code&gt;conventional-github-releaser&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Причина, по которой вы должны зафиксировать изменения и создать метку после
выполнения &lt;code&gt;standard-changelog&lt;/code&gt; заключается в том, что &lt;code&gt;CHANGELOG.md&lt;/code&gt; должен быть
включён в новую версию.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование. Semantic-release</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</link>
      <pubDate>Fri, 15 Jan 2021 17:33:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fully automated version management and package publishing&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/&#34;&gt;Semantic-release&lt;/a&gt; автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Диаграммы. Mermaid</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/</link>
      <pubDate>Sun, 03 Jan 2021 14:19:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/</guid>
      <description>&lt;p&gt;Материалы по языку рисования диаграмм Mermaid.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#введение&#34;&gt;Введение&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ресурсы&#34;&gt;Ресурсы&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#синтаксис&#34;&gt;Синтаксис&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#элементы-синтаксиса&#34;&gt;Элементы синтаксиса&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#типы-диаграмм&#34;&gt;Типы диаграмм&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#graph&#34;&gt;graph&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#круговая-диаграмма--pie&#34;&gt;Круговая диаграмма (pie)&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#gantt&#34;&gt;gantt&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#sequencediagram&#34;&gt;sequenceDiagram&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#statediagram&#34;&gt;stateDiagram&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#classdiagram&#34;&gt;classDiagram&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#gitgraph&#34;&gt;gitgraph&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#синтаксис-markdown-для-генератора-сайтов-hugo&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/&#34;&gt;Синтаксис Markdown для генератора сайтов Hugo&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;введение&#34;&gt;Введение&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Mermaid - язык программирования для рисования диаграмм и библиотека для визуализации.&lt;/li&gt;
&lt;li&gt;Инструментарий написан на javascript.&lt;/li&gt;
&lt;li&gt;Интегрирован в системы рендеринга языка Markdown:
&lt;ul&gt;
&lt;li&gt;Pandoc: &lt;a href=&#34;https://pandoc.org/&#34;&gt;https://pandoc.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hugo: &lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ресурсы&#34;&gt;Ресурсы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Страница Mermaid: &lt;a href=&#34;https://mermaid-js.github.io/&#34;&gt;https://mermaid-js.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Страница на github: &lt;a href=&#34;https://github.com/mermaid-js/mermaid&#34;&gt;https://github.com/mermaid-js/mermaid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Утилита командной строки: &lt;a href=&#34;https://github.com/mermaid-js/mermaid-cli&#34;&gt;https://github.com/mermaid-js/mermaid-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTTP сервер: &lt;a href=&#34;https://github.com/TomWright/mermaid-server&#34;&gt;https://github.com/TomWright/mermaid-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Онлайн редактор: &lt;a href=&#34;https://mermaid-js.github.io/mermaid-live-editor/&#34;&gt;https://mermaid-js.github.io/mermaid-live-editor/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;синтаксис&#34;&gt;Синтаксис&lt;/h2&gt;
&lt;h3 id=&#34;элементы-синтаксиса&#34;&gt;Элементы синтаксиса&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Стили фигур&lt;/li&gt;
&lt;li&gt;Стили соединителей
&lt;ul&gt;
&lt;li&gt;стрелка&lt;/li&gt;
&lt;li&gt;пунктир&lt;/li&gt;
&lt;li&gt;без стрелки&lt;/li&gt;
&lt;li&gt;стрелка с меткой&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Комментарий&lt;/li&gt;
&lt;li&gt;Ориентация
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;TB&lt;/code&gt; - сверху вниз&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TD&lt;/code&gt; - сверху вниз&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BT&lt;/code&gt; - снизу вверх&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RL&lt;/code&gt; - справа налево&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LR&lt;/code&gt; - слева направо&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;типы-диаграмм&#34;&gt;Типы диаграмм&lt;/h3&gt;
&lt;h4 id=&#34;graph&#34;&gt;graph&lt;/h4&gt;
&lt;h4 id=&#34;круговая-диаграмма--pie&#34;&gt;Круговая диаграмма (pie)&lt;/h4&gt;
&lt;h4 id=&#34;gantt&#34;&gt;gantt&lt;/h4&gt;
&lt;h4 id=&#34;sequencediagram&#34;&gt;sequenceDiagram&lt;/h4&gt;
&lt;h4 id=&#34;statediagram&#34;&gt;stateDiagram&lt;/h4&gt;
&lt;h4 id=&#34;classdiagram&#34;&gt;classDiagram&lt;/h4&gt;
&lt;h4 id=&#34;gitgraph&#34;&gt;gitgraph&lt;/h4&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;синтаксис-markdown-для-генератора-сайтов-hugo&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/&#34;&gt;Синтаксис Markdown для генератора сайтов Hugo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Как обычно для Markdown поддерживается расширение для рисования диаграмм &lt;a href=&#34;https://mermaid-js.github.io/mermaid/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mermaid&lt;/a&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/&#34;&gt;Диаграммы. Mermaid&lt;/a&gt;). Для использования нужно включить эту функцию в файле &lt;code&gt;params.toml&lt;/code&gt; или добавив &lt;code&gt;diagram: true&lt;/code&gt; в преамбуле страницы.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Соглашения о кодировании</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</link>
      <pubDate>Sun, 20 Dec 2020 16:10:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</guid>
      <description>&lt;p&gt;Общие положения соглашений о кодировании.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#цели-правил-кодирования&#34;&gt;Цели правил кодирования&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#соглашения-об-именовании&#34;&gt;Соглашения об именовании&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#именование-переменных&#34;&gt;Именование переменных&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#предикаты&#34;&gt;Предикаты&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#разное&#34;&gt;Разное&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#количество&#34;&gt;Количество&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#отступы&#34;&gt;Отступы&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#комментарии&#34;&gt;Комментарии&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#соглашение-о-кодировании-dot-emacs-lisp&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;цели-правил-кодирования&#34;&gt;Цели правил кодирования&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Единый стиль оформления кода во всем проекте.&lt;/li&gt;
&lt;li&gt;Визуальное выделение наиболее значимых частей.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;соглашения-об-именовании&#34;&gt;Соглашения об именовании&lt;/h2&gt;
&lt;h3 id=&#34;именование-переменных&#34;&gt;Именование переменных&lt;/h3&gt;
&lt;p&gt;Существует несколько популярных соглашений об именования переменных:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Верблюжья нотация (&lt;code&gt;CamelCase&lt;/code&gt;): &lt;code&gt;MyClass&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Змеиная нотация (&lt;code&gt;snake_case&lt;/code&gt;): &lt;code&gt;my_const&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Шашлычная нотация (&lt;code&gt;kebab-case&lt;/code&gt;): &lt;code&gt;my-data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BD%D0%B3%D0%B5%D1%80%D1%81%D0%BA%D0%B0%D1%8F%5F%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Венгерская нотация&lt;/a&gt; - соглашение об именовании идентификаторов (переменных и функций), которое сводится к кодированию типов данных прямо в название: &lt;code&gt;userArray&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Нотация Cobol: &lt;code&gt;COBOL-CASE&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;предикаты&#34;&gt;Предикаты&lt;/h3&gt;
&lt;p&gt;Предикат - это функция-проверка, она всегда возвращает либо &lt;code&gt;true&lt;/code&gt;, либо &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Предваряются префиксом &lt;code&gt;is&lt;/code&gt;: &lt;code&gt;isEmpty()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если предикат отвечает на вопрос &lt;em&gt;есть ли?&lt;/em&gt; (например, &lt;em&gt;есть ли в списке чисел нечётное число?&lt;/em&gt;), принято использовать слово &lt;code&gt;has&lt;/code&gt;: &lt;code&gt;hasChildren()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Используется знак &lt;code&gt;?&lt;/code&gt; в конце слова (lisp, ruby): &lt;code&gt;empty?&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Используется буква &lt;code&gt;p&lt;/code&gt; в конце слова (emacs lisp): &lt;code&gt;empty-p&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;разное&#34;&gt;Разное&lt;/h3&gt;
&lt;h4 id=&#34;количество&#34;&gt;Количество&lt;/h4&gt;
&lt;p&gt;Если нужна переменная, в которой содержится количество чего-либо, используется комбинация: сущность во множественном числе + &lt;code&gt;count&lt;/code&gt;: &lt;code&gt;symbolsCount&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;отступы&#34;&gt;Отступы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Во многих стандартах кодирования запрещается использовать табуляции - их требуют заменять пробелами.&lt;/li&gt;
&lt;li&gt;В различных редакторах может устанавливаться разная длина символа табуляции, поэтому при смешении табуляции с пробелами исходный код будет выглядеть по-разному в разных редакторах.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;комментарии&#34;&gt;Комментарии&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Комментарий - некомпилируемая часть исходного кода, поясняющая принцип работы программы.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Иногда в комментариях фиксируют информацию:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;о версии кода и, внесенных в ней, изменениях;&lt;/li&gt;
&lt;li&gt;об авторе кода или конкретных правок;&lt;/li&gt;
&lt;li&gt;о лицензии, по которой распространяется код;&lt;/li&gt;
&lt;li&gt;о неисправленных ошибках и прочих недочетах, заметки разного рода.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии должны быть коггерентны коду. При изменении кода надо менять комментарии.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии не должны пояснять очевидные моменты.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии должны быть понятны всем, а не только тем, кто их пишет.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии не должны содержать бесполезной информации.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Написание комментариев и поддержка единого стиля комментариев не должна отнимать слишком много времени.&lt;/p&gt;
&lt;p&gt;Использование современных инструментов разработки позволяют полностью исключить некоторые типы комментариев из программы:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;информацию о версии программы, авторе изменений и ее особенностях позволяют хранить системы управления версиями;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;комментарии TODO, BUG и FIXME могут быть перенесены в трекеры задач и ошибок.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;соглашение-о-кодировании-dot-emacs-lisp&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;В соглашениях об именовании emacs lisp следует обычным правилам именования (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/&#34;&gt;Соглашения о кодировании&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Соглашение о кодировании. Emacs lisp</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</link>
      <pubDate>Sun, 20 Dec 2020 15:51:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</guid>
      <description>&lt;p&gt;Соглашения о кодировании для elisp.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#соглашение-об-именовании&#34;&gt;Соглашение об именовании&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#внешние-ссылки&#34;&gt;Внешние ссылки&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#emacs&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/24/emacs/&#34;&gt;Emacs&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;соглашение-об-именовании&#34;&gt;Соглашение об именовании&lt;/h2&gt;
&lt;p&gt;В соглашениях об именовании emacs lisp следует обычным правилам именования (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/&#34;&gt;Соглашения о кодировании&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В названиях функций используются только дефисы (например, &lt;code&gt;package-prefix-function-name&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Косая черта используется для разделения имени пакета и функции (например, &lt;code&gt;package-prefix/function-name&lt;/code&gt;), является популярным нестандартным соглашением.&lt;/li&gt;
&lt;li&gt;Обычно имена предикатных функций заканчиваются на &lt;code&gt;-p&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Имена предикатных функций могут заканчиваться на &lt;code&gt;?&lt;/code&gt; (как в Scheme, Racket Lisp, ruby, clojure) вместо &lt;code&gt;p&lt;/code&gt;. Поскольку вопросительный знак более интуитивно понятен, его легче идентифицировать и его можно синтаксически проверить&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Двойное тире для внутренних методов (вспомогательных функций) является неявным соглашением.&lt;/li&gt;
&lt;li&gt;Переменная, начинающаяся с подчёркивания &lt;code&gt;_&lt;/code&gt; - неиспользуемая переменная&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; (неявное соглашение).&lt;/li&gt;
&lt;li&gt;Соглашение GNU emacs об использовании &lt;code&gt;ALLCAPS&lt;/code&gt; для параметров.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;внешние-ссылки&#34;&gt;Внешние ссылки&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/emacs-lisp-style-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A community-driven Emacs Lisp style guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;emacs&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/24/emacs/&#34;&gt;Emacs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt; нельзя, потому что не все функции, заканчивающиеся на &lt;code&gt;p&lt;/code&gt;, являются предикатом.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Это пришло из современных практик на других языках (я думаю, python ruby).&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Работа с PGP</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</link>
      <pubDate>Fri, 18 Dec 2020 12:39:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</guid>
      <description>&lt;p&gt;Использование набора программ PGP.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#экспорт-ключей-pgp&#34;&gt;Экспорт ключей PGP&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#шифрование&#34;&gt;Шифрование&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#симметричное-шифрование&#34;&gt;Симметричное шифрование&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#emacs-dot-почта-dot-gnus&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/&#34;&gt;Emacs. Почта. GNUS&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;экспорт-ключей-pgp&#34;&gt;Экспорт ключей PGP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Экспорт ключей
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Экспорт всех открытых ключей в текстовый файл в кодировке base64:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -a --export &amp;gt; mypubkeys.asc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Экспорт всех зашифрованных закрытых ключей (которые также будут включать соответствующие открытые ключи) в текстовый файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -a --export-secret-keys &amp;gt; myprivatekeys.asc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Опционально экспортируется &lt;code&gt;trustdb&lt;/code&gt; gpg в текстовый файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --export-ownertrust &amp;gt; otrust.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Импорт ключей
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Выполните команды &lt;code&gt;gpg --import&lt;/code&gt; для двух файлов &lt;code&gt;asc&lt;/code&gt;, а затем проверьте наличие новых ключей с помощью &lt;code&gt;gpg -k&lt;/code&gt; и &lt;code&gt;gpg -K&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --import myprivatekeys.asc
gpg --import mypubkeys.asc
gpg -K
gpg -k
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;При желании также импортируйте файл &lt;code&gt;trustdb&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --import-ownertrust otrust.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Проверьте шифрование и дешифрование с помощью команд &lt;code&gt;gpg -er USERID&lt;/code&gt; и &lt;code&gt;gpg -d&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;шифрование&#34;&gt;Шифрование&lt;/h2&gt;
&lt;p&gt;Шифрование может быть симметричным и ассиметричным.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Симметричное шифрование шифруется и расшифровывается приватным ключом или одной и той же парольной фразой.&lt;/li&gt;
&lt;li&gt;Ассиметричное шифрование шифруется публичным ключом, расшифровывается приватным.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;симметричное-шифрование&#34;&gt;Симметричное шифрование&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Зашифровать файл:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -c filename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --symmetric filename
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Расшифровать файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --decrypt-files filename.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Расшифровать файл с выводом на терминал:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --decrypt filename.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для подписывания коммитов используется технология PGP (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;emacs-dot-почта-dot-gnus&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/&#34;&gt;Emacs. Почта. GNUS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для безопасности следует зашифровать файл паролей (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Org-mode. Экспорт в Hugo</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/17/org-mode-export-hugo/</link>
      <pubDate>Thu, 17 Dec 2020 11:01:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/17/org-mode-export-hugo/</guid>
      <description>&lt;p&gt;Экспорт org-mode в Hugo является одной из составных частей научного рабочего процесса на основе Emacs и org-mode.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#использование-языка-markdown-внутри-org&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Использование языка Markdown внутри Org&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#настройка-экспорта&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Настройка экспорта&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#экспорт-специфических-элементов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Экспорт специфических элементов&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#экспорт-операторов-hugo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.1&lt;/span&gt; Экспорт операторов Hugo&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#отбивка-резюме--summary-splitter&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.2&lt;/span&gt; Отбивка резюме (Summary Splitter)&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#резюме-и-подробная-информация&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.3&lt;/span&gt; Резюме и подробная информация&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#свойства-экспорта&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Свойства экспорта&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#обязательные-свойства&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.1&lt;/span&gt; Обязательные свойства&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#формат-заголовка&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.2&lt;/span&gt; Формат заголовка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#свойства-экспорта-для-заголовка-hugo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.3&lt;/span&gt; Свойства экспорта для заголовка Hugo&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#сочетания-клавиш&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Сочетания клавиш&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#для-режимов-один-пост-на-файл-и-один-пост-на-поддерево&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; Для режимов &lt;em&gt;один пост на файл&lt;/em&gt; и &lt;em&gt;один пост на поддерево&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#для-режима-один-пост-на-файл&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2&lt;/span&gt; Для режима &lt;em&gt;один пост на файл&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#теги-и-категории&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4&lt;/span&gt; Теги и категории&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#экспорт-уровня-файла&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.1&lt;/span&gt; Экспорт уровня файла&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#экспорт-уровня-поддерева&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2&lt;/span&gt; Экспорт уровня поддерева&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#теги&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.1&lt;/span&gt; Теги&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#категории&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.2&lt;/span&gt; Категории&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование-filetags&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.3&lt;/span&gt; Использование filetags&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#дефисы-и-пробелы-в-тегах&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.3&lt;/span&gt; Дефисы и пробелы в тегах&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#дополнительные-поля&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5&lt;/span&gt; Дополнительные поля&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#синтаксис&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1&lt;/span&gt; Синтаксис&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#пары-ключ-значение&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.1&lt;/span&gt; Пары ключ-значение&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#списочные-значения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.2&lt;/span&gt; Списочные значения&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#многоуровневые-значения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.3&lt;/span&gt; Многоуровневые значения&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#прямая-вставка-преамбул&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.4&lt;/span&gt; Прямая вставка преамбул&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#экспорт-элементов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;6&lt;/span&gt; Экспорт элементов&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#пакет-страниц--page-bundle&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7&lt;/span&gt; Пакет страниц (page bundle)&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#общая-информация&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7.1&lt;/span&gt; Общая информация&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#читаемые-курсы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7.2&lt;/span&gt; Читаемые курсы&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;использование-языка-markdown-внутри-org&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Использование языка Markdown внутри Org&lt;/h2&gt;
&lt;p&gt;При экспорте Org преобразуется в стандартный Markdown. Однако в Hugo
используются собственные нестандартные расширения (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/&#34;&gt;Синтаксис
Markdown для генератора сайтов Hugo&lt;/a&gt;). При необходимости их можно
вставлять прямо в текст.&lt;/p&gt;
&lt;h2 id=&#34;настройка-экспорта&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Настройка экспорта&lt;/h2&gt;
&lt;p&gt;Экспорт производится в рамках общего фреймворка org-mode для экспорта (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/10/org-mode-export/&#34;&gt;Org-mode. Экспорт&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;экспорт-специфических-элементов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Экспорт специфических элементов&lt;/h3&gt;
&lt;h4 id=&#34;экспорт-операторов-hugo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.1&lt;/span&gt; Экспорт операторов Hugo&lt;/h4&gt;
&lt;p&gt;Для экспорта конкретных элементов, необходимых только для Hugo, следует использовать блок &lt;code&gt;export&lt;/code&gt;. Например, оглавление задаётся следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_export hugo
{{&amp;lt; toc &amp;gt;}}
#+end_export
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Это позволяет задавать оглавление только для Hugo.&lt;/p&gt;
&lt;h4 id=&#34;отбивка-резюме--summary-splitter&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.2&lt;/span&gt; Отбивка резюме (Summary Splitter)&lt;/h4&gt;
&lt;p&gt;Отбивка резюме задаётся конструкцией&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+hugo: more
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;резюме-и-подробная-информация&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1.3&lt;/span&gt; Резюме и подробная информация&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Специальный блок «Детали» &lt;code&gt;#+begin_details … #+end_details&lt;/code&gt;
используется для создания элемента, раскрывающего дополнительные
сведения (&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_details
#+begin_summary
Краткая информация
#+end_summary
А здесь подробная информация.
#+end_details
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Выглядить это так:&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;
Краткая информация
&lt;/summary&gt;
&lt;p class=&#34;details&#34;&gt;
&lt;p&gt;А здесь подробная информация.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если блок &lt;code&gt;summary&lt;/code&gt; отсутствует, резюме будет заменено на некоторое значение по умолчанию. Так, блок&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_details
А здесь подробная информация.
#+end_details
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;будет иметь следующий вид:&lt;/p&gt;
&lt;details&gt;
&lt;p class=&#34;details&#34;&gt;А здесь подробная информация.
&lt;/p&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Можно показывать блок открытым по умолчанию. Для этого следует добавить атрибут HTML &lt;code&gt;#+attr_html: :open t&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+attr_html: :open t
#+begin_details
#+begin_summary
Краткая информация
#+end_summary
А здесь подробная информация.
#+end_details
&lt;/code&gt;&lt;/pre&gt;
&lt;details open&gt;
&lt;summary&gt;
Краткая информация
&lt;/summary&gt;
&lt;p class=&#34;details&#34;&gt;
&lt;p&gt;А здесь подробная информация.&lt;/p&gt;
&lt;/p&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;свойства-экспорта&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Свойства экспорта&lt;/h3&gt;
&lt;h4 id=&#34;обязательные-свойства&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.1&lt;/span&gt; Обязательные свойства&lt;/h4&gt;
&lt;p&gt;Для экспорта необходимо установить следующие обязательные свойства:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HUGO_SECTION&lt;/code&gt; - название раздела Hugo по умолчанию для всех
сообщений. Обычно это свойство устанавливается для сообщений или
блога. Значение по умолчанию устанавливается с помощью
&lt;code&gt;org-hugo-default-section-directory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HUGO_BASE_DIR&lt;/code&gt; - корневой каталог сайта Hugo. Например, если
&lt;code&gt;HUGO_BASE_DIR&lt;/code&gt; установлен на &lt;code&gt;~/hugo/&lt;/code&gt;, то экспортированные файлы
Markdown будут сохранены в каталог &lt;code&gt;~/hugo/content/&amp;lt;HUGO_SECTION&amp;gt;/&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;формат-заголовка&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.2&lt;/span&gt; Формат заголовка&lt;/h4&gt;
&lt;p&gt;Поддерживаются форматы заголовка TOML (по умолчанию) и YAML.&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Экспорт для всего файла&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+hugo_front_matter_format: yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Экспорт для поддерева&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_FRONT_MATTER_FORMAT: yaml
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;свойства-экспорта-для-заголовка-hugo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.3&lt;/span&gt; Свойства экспорта для заголовка Hugo&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;table--hugo-export-properties-front-matter&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;&lt;a href=&#34;#table--hugo-export-properties-front-matter&#34;&gt;&amp;#1058;&amp;#1072;&amp;#1073;&amp;#1083;&amp;#1080;&amp;#1094;&amp;#1072; 1&lt;/a&gt;&lt;/span&gt;:
  Сводная таблица свойств экспорта для заголовка Hugo
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hugo front-matter (TOML)&lt;/th&gt;
&lt;th&gt;Уровень файла&lt;/th&gt;
&lt;th&gt;Уровень поддерева&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;title = &amp;quot;foo&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+title: foo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;* foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date = 2017-09-11T14:32:00-04:00&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;CLOSED: [2017-09-11 Mon 14:32]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date = 2017-07-24&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+date: 2017-07-24&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_DATE: 2017-07-24&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;publishDate = 2018-01-26&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_publishdate: 2018-01-26&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCHEDULED: &amp;lt;2018-01-26 Fri&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;publishDate = 2018-01-26&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_PUBLISHDATE: 2018-01-26:&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expiryDate = 2999-01-01&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_expirydate: 2999-01-01&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DEADLINE: &amp;lt;2999-01-01 Tue&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;expiryDate = 2999-01-01&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_EXPIRYDATE: 2999-01-01:&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lastmod = &amp;lt;current date&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_auto_set_lastmod: t&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_AUTO_SET_LASTMOD: t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;lastmod = &amp;lt;current date&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_auto_set_lastmod: t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags = [&amp;quot;toto&amp;quot;, &amp;quot;zulu&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_tags: toto zulu&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;* foo :toto:zulu:&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;categories = [&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_categories: x y&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;* foo :@x:@y:&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;draft = true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_draft: true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;* TODO foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;draft = false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_draft: false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;* foo&lt;/code&gt; или &lt;code&gt;* DONE foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;weight = 123&lt;/code&gt; (manual)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_weight: 123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_WEIGHT: 123&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;weight = 123&lt;/code&gt; (auto-calc)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_WEIGHT: auto&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags_weight = 123&lt;/code&gt; (manual)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_weight: :tags 123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_WEIGHT: :tags 123&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;tags_weight = 123&lt;/code&gt; (auto-calc)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_WEIGHT: :tags auto&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;weight = 123&lt;/code&gt; (in [menu.foo])&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_menu: :menu foo :weight 123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:EXPORT_HUGO_MENU: :menu foo&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;categories_weight = 123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#+hugo_weight: :categories 123&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;сочетания-клавиш&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Сочетания клавиш&lt;/h2&gt;
&lt;p&gt;Экспорт осуществляется через стандартный интерфейс экспорта в org-mode.&lt;/p&gt;
&lt;h3 id=&#34;для-режимов-один-пост-на-файл-и-один-пост-на-поддерево&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; Для режимов &lt;em&gt;один пост на файл&lt;/em&gt; и &lt;em&gt;один пост на поддерево&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-c C-e H H&lt;/code&gt; Экспорт «Что я имею в виду».
&lt;ul&gt;
&lt;li&gt;Если курсор находится в допустимом поддереве сообщения Hugo,
экспортирует это поддерево в сообщение Hugo в Markdown. Допустимое
поддерево сообщений Hugo - это поддерево, для которого установлено
свойство &lt;code&gt;EXPORT_FILE_NAME&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если файл предназначен для экспорта целиком (т.е. имеет ключевое
слово &lt;code&gt;#+title&lt;/code&gt;), экспортирует весь файл Org в сообщение Hugo в
Markdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-e H A&lt;/code&gt; Экспорт всего «Что я имею в виду».
&lt;ul&gt;
&lt;li&gt;Если в org-файле есть одно или несколько действительных
поддеревьев сообщений Hugo, экспортирует их в сообщения Hugo в
Markdown.&lt;/li&gt;
&lt;li&gt;Если файл предназначен для экспорта целиком (т. е. вообще нет
действительных поддеревьев сообщений Hugo и есть ключевое слово
&lt;code&gt;#+title&lt;/code&gt;), экспортирует весь org-файл в сообщение Hugo в
Markdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;для-режима-один-пост-на-файл&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2&lt;/span&gt; Для режима &lt;em&gt;один пост на файл&lt;/em&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-c C-e H h&lt;/code&gt; Экспорт файла Org в сообщение Hugo в Markdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;теги-и-категории&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4&lt;/span&gt; Теги и категории&lt;/h2&gt;
&lt;h3 id=&#34;экспорт-уровня-файла&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.1&lt;/span&gt; Экспорт уровня файла&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Список тегов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+hugo_tags
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Список категорий:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+hugo_categories
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;экспорт-уровня-поддерева&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2&lt;/span&gt; Экспорт уровня поддерева&lt;/h3&gt;
&lt;h4 id=&#34;теги&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.1&lt;/span&gt; Теги&lt;/h4&gt;
&lt;p&gt;Экспортируемые теги Hugo задаются как теги org-mode:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;* My post                                                         :tag1:tag2:
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;категории&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.2&lt;/span&gt; Категории&lt;/h4&gt;
&lt;p&gt;Экспортируемые категорий Hugo задаются как теги org-mode, для которых установлен префикс @:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;* My post                                                       :@cat1:@cat2:
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование-filetags&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.3&lt;/span&gt; Использование filetags&lt;/h4&gt;
&lt;p&gt;Для экспорта на уровне поддерева можно использовать оператор&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+filetags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Например:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+filetags: :@cat1:tag1:tag2:
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;дефисы-и-пробелы-в-тегах&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.3&lt;/span&gt; Дефисы и пробелы в тегах&lt;/h3&gt;
&lt;p&gt;В тегах org-mode нельзя использовать дефисы и пробелы.
Конвертер использует следующие настройки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;одиночное подчёркивание переводится в дефис (конфигурационная переменная &lt;code&gt;org-hugo-prefer-hyphen-in-tags&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;двойное подчёркивание переводится в пробел (конфигурационная переменная &lt;code&gt;org-hugo-allow-spaces-in-tags&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;дополнительные-поля&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5&lt;/span&gt; Дополнительные поля&lt;/h2&gt;
&lt;p&gt;Нестандартные дополнительные поля в основном используются для
установки пользовательских параметров оформления.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Чтобы установить настраиваемый параметр предварительной записи в поддереве, используется свойство &lt;code&gt;:EXPORT_HUGO_CUSTOM_FRONT_MATTER:&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Чтобы задать настраиваемый параметр внешнего вида глобально или для потока экспорта для каждого файла, используется ключевое слово
&lt;code&gt;#+HUGO_CUSTOM_FRONT_MATTER:&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;синтаксис&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1&lt;/span&gt; Синтаксис&lt;/h3&gt;
&lt;h4 id=&#34;пары-ключ-значение&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.1&lt;/span&gt; Пары ключ-значение&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Можно записывать в одном поле:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :key1 value1 :key2 value2
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Можно разбить на несколько полей:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :key1 value1
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :key2 value2
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;На уровне файла посредством ключевого слова:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+hugo_custom_front_matter: :key1 value1
#+hugo_custom_front_matter: :key2 value2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Например, запись&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :feature true
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;примет вид (для TOML)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf-toml&#34;&gt;feature = true
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;списочные-значения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.2&lt;/span&gt; Списочные значения&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Запись имеет следующий вид:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :key1 &#39;(elem11 elem12) :key2 &#39;(elem21 elem22)
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Например, запись&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :animals &#39;(dog cat &amp;quot;penguin&amp;quot; &amp;quot;mountain gorilla&amp;quot;)
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :integers &#39;(123 -5 17 1_234)
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :floats &#39;(12.3 -5.0 -17E-6)
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :booleans &#39;(true false)
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;примет вид (для TOML)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf-toml&#34;&gt;animals = [&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;penguin&amp;quot;, &amp;quot;mountain gorilla&amp;quot;]
integers = [123, -5, 17, 1_234]
floats = [12.3, -5.0, -1.7e-05]
booleans = [true, false]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;многоуровневые-значения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.3&lt;/span&gt; Многоуровневые значения&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Запись имеет следующий вид:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :key1 &#39;((subkey11 . subval11) (subkey12 . (subelem121 subelem122))) :key2 &#39;((subkey21 . subval21))
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Например, запись&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :versions &#39;((emacs . &amp;quot;27.0.50&amp;quot;) (hugo . &amp;quot;0.48&amp;quot;))
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :header &#39;((image . &amp;quot;projects/Readingabook.jpg&amp;quot;) (caption . &amp;quot;stay hungry, stay foolish&amp;quot;))
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :collection &#39;((animals . (dog cat &amp;quot;penguin&amp;quot; &amp;quot;mountain gorilla&amp;quot;)) (integers . (123 -5 17 1_234)) (floats . (12.3 -5.0 -17E-6)) (booleans . (true false)))
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;примет вид (для TOML)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf-toml&#34;&gt;[versions]
  emacs = &amp;quot;27.0.50&amp;quot;
  hugo = 0.48
[header]
  image = &amp;quot;projects/Readingabook.jpg&amp;quot;
  caption = &amp;quot;stay hungry, stay foolish&amp;quot;
[collection]
  animals = [&amp;quot;dog&amp;quot;, &amp;quot;cat&amp;quot;, &amp;quot;penguin&amp;quot;, &amp;quot;mountain gorilla&amp;quot;]
  integers = [123, -5, 17, 1_234]
  floats = [12.3, -5.0, -1.7e-05]
  booleans = [true, false]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;прямая-вставка-преамбул&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1.4&lt;/span&gt; Прямая вставка преамбул&lt;/h4&gt;
&lt;p&gt;Можно описать преамбулу непосредственно (если невозможно сгенерить средствами экспорта).
Для этого используется аргумент заголовка блока кода &lt;code&gt;:front_matter_extra t&lt;/code&gt;.&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Преамбула &lt;em&gt;TOML&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;По умолчанию используется преамбула в формате TOML, поэтому нет необходимости устанавливать ключевое слово &lt;code&gt;:EXPORT_HUGO_FRONT_MATTER_FORMAT: toml&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;* Post with TOML front-matter (default)
:PROPERTIES:
:EXPORT_FILE_NAME: extra-front-matter-toml
:END:
The contents of the ~#+begin_src toml :front_matter_extra t~ TOML
block here will get appended to the TOML front-matter.
#+begin_src toml :front_matter_extra t
[[foo]]
  bar = 1
  zoo = &amp;quot;abc&amp;quot;
[[foo]]
  bar = 2
  zoo = &amp;quot;def&amp;quot;
#+end_src
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Преамбула &lt;em&gt;YAML&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;* Post with YAML front-matter
:PROPERTIES:
:EXPORT_FILE_NAME: extra-front-matter-yaml
:EXPORT_HUGO_FRONT_MATTER_FORMAT: yaml
:END:
The contents of the ~#+begin_src yaml :front_matter_extra t~ YAML
block here will get appended to the YAML front-matter.
#+begin_src yaml :front_matter_extra t
foo:
  - bar: 1
    zoo: abc
  - bar: 2
    zoo: def
#+end_src
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;экспорт-элементов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;6&lt;/span&gt; Экспорт элементов&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;При экспорте элементов для &lt;em&gt;Hugo&lt;/em&gt; используется блок&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_export hugo
Текст для Hugo
#+end_export
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Возникла коллизия, когда из единого источника необходимо было вывести информацию и в &lt;em&gt;Hugo&lt;/em&gt;, и в &lt;em&gt;Markdown&lt;/em&gt;. При экспорте посредством блока&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_export markdown
Текст для Markdown
#+end_export
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;этот текст появлялся и в файле для &lt;em&gt;Hugo&lt;/em&gt;. Для обхода этой ситуации я стал задавать блок для &lt;em&gt;Markdown&lt;/em&gt; в следующем виде:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;#+begin_src markdown :exports (if (eq org-export-current-backend &#39;md) &amp;quot;&amp;quot; &amp;quot;none&amp;quot;)
Текст для Markdown
#+end_src
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;пакет-страниц--page-bundle&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7&lt;/span&gt; Пакет страниц (page bundle)&lt;/h2&gt;
&lt;h3 id=&#34;общая-информация&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7.1&lt;/span&gt; Общая информация&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Для экспорта в пакет (папку) страниц нужно установить для свойства &lt;code&gt;:EXPORT_HUGO_BUNDLE: (или =#+HUGO_BUNDLE&lt;/code&gt;) имя каталога в качестве значения.&lt;/li&gt;
&lt;li&gt;Значение &lt;code&gt;:EXPORT_FILE_NAME:&lt;/code&gt; или &lt;code&gt;#+EXPORT_FILE_NAME&lt;/code&gt; устанавливается в зависимости от вида пакетов страниц.&lt;/li&gt;
&lt;li&gt;Пакеты страниц (&lt;a href=&#34;https://gohugo.io/content-management/page-bundles/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Page Bundle&lt;/a&gt;) бывают двух видов:
&lt;ul&gt;
&lt;li&gt;пакет-страница (Leaf Bundle)
&lt;ul&gt;
&lt;li&gt;нет подстраниц,&lt;/li&gt;
&lt;li&gt;контент и вложения для отдельных страниц,&lt;/li&gt;
&lt;li&gt;индексный файл: &lt;code&gt;index.md&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;пример: &lt;code&gt;content/posts/my-post/index.md&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:EXPORT_FILE_NAME: index&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#+EXPORT_FILE_NAME: index&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;пакет веток (Branch Bundle)
&lt;ul&gt;
&lt;li&gt;содержит подстраницы,&lt;/li&gt;
&lt;li&gt;контент и вложения для страниц раздела (домашняя страница, раздел, термины таксономии, список таксономии),&lt;/li&gt;
&lt;li&gt;индексный файл: &lt;code&gt;_index.md&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;пример: &lt;code&gt;content/posts/_index.md&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:EXPORT_FILE_NAME: _index&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#+EXPORT_FILE_NAME: _index&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Пример пакет-страницы (Leaf Bundle):
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;экспорт в &lt;code&gt;content/xyz/index.md&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;​* Page title
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: xyz
:EXPORT_FILE_NAME: index
:END:
Content
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Пример пакета веток (Branch Bundle)
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;экспорт в &lt;code&gt;content/uvw/_index.md&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;​* Page title
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: uvw
:EXPORT_FILE_NAME: _index
:END:
Content
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;читаемые-курсы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;7.2&lt;/span&gt; Читаемые курсы&lt;/h3&gt;
&lt;p&gt;Чтобы сделать список и содержание читаемых курсов (или какой-либо документации).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Пусть курс называется &lt;code&gt;mathsec&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Свойства для экспорта:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-org&#34;&gt;:PROPERTIES:
:EXPORT_HUGO_SECTION: ru/courses
:EXPORT_HUGO_BUNDLE: mathsec
:EXPORT_FILE_NAME: _index
:END:
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Общепринятые коммиты</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</link>
      <pubDate>Fri, 11 Dec 2020 19:39:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</guid>
      <description>&lt;p&gt;Использование спецификации &lt;em&gt;Conventional Commits&lt;/em&gt;.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#описание&#34;&gt;Описание&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#структура-коммита&#34;&gt;Структура коммита&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#базовые-типы-коммитов&#34;&gt;Базовые типы коммитов&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#соглашения-the-angular-convention&#34;&gt;Соглашения The Angular convention&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#соглашения-commitlint-config-conventional&#34;&gt;Соглашения @commitlint/config-conventional&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#программное-обеспечение&#34;&gt;Программное обеспечение&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;описание&#34;&gt;Описание&lt;/h2&gt;
&lt;p&gt;Спецификация &lt;a href=&#34;https://www.conventionalcommits.org/ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conventional Commits&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Соглашение о том, как нужно писать сообщения commit&amp;rsquo;ов.&lt;/li&gt;
&lt;li&gt;Совместимо с &lt;a href=&#34;http://semver.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SemVer&lt;/a&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;). Даже вернее сказать, сильно связано с семантическим версионированием.&lt;/li&gt;
&lt;li&gt;Регламентирует структуру и основные типы коммитов.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;структура-коммита&#34;&gt;Структура коммита&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Заголовок является обязательным.&lt;/li&gt;
&lt;li&gt;Любая строка сообщения о фиксации не может быть длиннее 100 символов.&lt;/li&gt;
&lt;li&gt;Тема (subject) содержит краткое описание изменения.
&lt;ul&gt;
&lt;li&gt;Используйте повелительное наклонение в настоящем времени: «изменить» (&amp;ldquo;change&amp;rdquo; not &amp;ldquo;changed&amp;rdquo; nor &amp;ldquo;changes&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Не используйте заглавную первую букву.&lt;/li&gt;
&lt;li&gt;Не ставьте точку в конце.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Тело (body) должно включать мотивацию к изменению и противопоставлять это предыдущему поведению.
&lt;ul&gt;
&lt;li&gt;Как и в теме, используйте повелительное наклонение в настоящем времени.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Нижний колонтитул (footer) должен содержать любую информацию о критических изменениях.
&lt;ul&gt;
&lt;li&gt;Также содержит ссылку на issue (например, на github), который закрывает эта фиксация.&lt;/li&gt;
&lt;li&gt;Критические изменения должны начинаться со слова &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; с пробела или двух символов новой строки. Затем для этого используется остальная часть сообщения фиксации.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;базовые-типы-коммитов&#34;&gt;Базовые типы коммитов&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; коммит типа fix исправляет ошибку (bug) в вашем коде (он соответствует PATCH в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; коммит типа feat добавляет новую функцию (feature) в ваш код (он соответствует MINOR в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BREAKING CHANGE:&lt;/code&gt; &amp;mdash; коммит, который содержит текст &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; в начале своего не обязательного тела сообщения (body) или в
подвале (footer), добавляет изменения, нарушающие обратную
совместимость вашего API (он соответствует MAJOR в SemVer). BREAKING CHANGE может быть частью коммита любого типа.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revert:&lt;/code&gt; &amp;mdash; если фиксация отменяет предыдущую фиксацию. Начинается с &lt;code&gt;revert:&lt;/code&gt;, за которым следует заголовок отменённой фиксации. В теле должно быть написано: Это отменяет фиксацию &lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt; (это SHA-хэш отменяемой фиксации).&lt;/li&gt;
&lt;li&gt;Другое: коммиты с типами, которые отличаются от &lt;code&gt;fix:&lt;/code&gt; и &lt;code&gt;feat:&lt;/code&gt;,
также разрешены. Например, @commitlint/config-conventional
(основанный на The Angular convention) рекомендует: chore:, docs:,
style:, refactor:, perf:, test:, и другие.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;соглашения-the-angular-convention&#34;&gt;Соглашения The Angular convention&lt;/h4&gt;
&lt;p&gt;Одно из популярных соглашений о поддержке исходных кодов &amp;mdash; конвенция Angular (&lt;a href=&#34;https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Angular convention&lt;/a&gt;).&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Типы коммитов The Angular convention&lt;/p&gt;
&lt;p&gt;Конвенция Angular (&lt;a href=&#34;https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Angular convention&lt;/a&gt;) требует следующие типы коммитов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;build:&lt;/code&gt; &amp;mdash; изменения, влияющие на систему сборки или внешние зависимости (примеры областей (scope): gulp, broccoli, npm).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci:&lt;/code&gt; &amp;mdash; изменения в файлах конфигурации и скриптах CI (примеры областей: Travis, Circle, BrowserStack, SauceLabs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs:&lt;/code&gt; &amp;mdash; изменения только в документации.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; новая функция.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; исправление ошибок.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perf:&lt;/code&gt; &amp;mdash; изменение кода, улучшающее производительность.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor:&lt;/code&gt; &amp;mdash; Изменение кода, которое не исправляет ошибку и не добавляет функции (рефакторинг кода).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style:&lt;/code&gt; &amp;mdash; изменения, не влияющие на смысл кода (пробелы, форматирование, отсутствие точек с запятой и т. д.).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test:&lt;/code&gt; &amp;mdash; добавление недостающих тестов или исправление существующих тестов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Области действия (scope)&lt;/p&gt;
&lt;p&gt;Областью действия должно быть имя затронутого пакета npm (как его воспринимает человек, читающий журнал изменений, созданный из сообщений фиксации).&lt;/p&gt;
&lt;p&gt;Есть несколько исключений из правила «использовать имя пакета»:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;packaging&lt;/code&gt; &amp;mdash; используется для изменений, которые изменяют структуру пакета, например, изменения общедоступного пути.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;changelog&lt;/code&gt; &amp;mdash; используется для обновления примечаний к выпуску в CHANGELOG.md.&lt;/li&gt;
&lt;li&gt;отсутствует область действия &amp;mdash; полезно для изменений стиля, тестирования и рефакторинга, которые выполняются во всех пакетах (например, style: добавить отсутствующие точки с запятой).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;соглашения-commitlint-config-conventional&#34;&gt;Соглашения @commitlint/config-conventional&lt;/h4&gt;
&lt;p&gt;Соглашение &lt;a href=&#34;https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@commitlint/config-conventional&lt;/a&gt; входит в пакет &lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conventional Changelog&lt;/a&gt;. В целом в этом соглашении придерживаются соглашения Angular.&lt;/p&gt;
&lt;h2 id=&#34;программное-обеспечение&#34;&gt;Программное обеспечение&lt;/h2&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для реализации семантического версионирования создано несколько программных продуктов. При этом лучше всего использовать комплексные продукты, которые используют информацию из коммитов системы версионирования. Естественно, коммиты должны иметь стандартизованный вид. Поэтому в семантическое версионирование применяется вместе с &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятыми коммитами&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</link>
      <pubDate>Fri, 11 Dec 2020 19:17:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</guid>
      <description>&lt;p&gt;Семантический подход в версионированию программного обеспечения.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#краткое-описание-семантического-версионирования&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Краткое описание семантического версионирования&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#программное-обеспечение&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Программное обеспечение&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#пакет-semantic-release&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Пакет Semantic-release&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#пакет-conventional-changelog&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Пакет Conventional Changelog&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Backlinks&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;краткое-описание-семантического-версионирования&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Краткое описание семантического версионирования&lt;/h2&gt;
&lt;p&gt;Семантическое версионирование описывается в &lt;a href=&#34;https://semver.org/lang/ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;манифесте семантического версионирования&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Кратко его можно описать следующим образом:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Версия задаётся в виде кортежа &lt;code&gt;МАЖОРНАЯ_ВЕРСИЯ.МИНОРНАЯ_ВЕРСИЯ.ПАТЧ&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Номер версии следует увеличивать:
&lt;ul&gt;
&lt;li&gt;МАЖОРНУЮ версию, когда сделаны обратно несовместимые изменения API.&lt;/li&gt;
&lt;li&gt;МИНОРНУЮ версию, когда вы добавляете новую функциональность, не нарушая обратной совместимости.&lt;/li&gt;
&lt;li&gt;ПАТЧ-версию, когда вы делаете обратно совместимые исправления.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Дополнительные обозначения для предрелизных и билд-метаданных
возможны как дополнения к МАЖОРНАЯ.МИНОРНАЯ.ПАТЧ формату.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;программное-обеспечение&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Программное обеспечение&lt;/h2&gt;
&lt;p&gt;Для реализации семантического версионирования создано несколько
программных продуктов. При этом лучше всего использовать комплексные
продукты, которые используют информацию из коммитов системы
версионирования. Естественно, коммиты должны иметь стандартизованный
вид. Поэтому в семантическое версионирование применяется вместе с &lt;em&gt;общепринятыми коммитами&lt;/em&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;пакет-semantic-release&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Пакет Semantic-release&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/&#34;&gt;Semantic-release&lt;/a&gt;
автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p&gt;
&lt;h3 id=&#34;пакет-conventional-changelog&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Пакет Conventional Changelog&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/&#34;&gt;Conventional Changelog&lt;/a&gt; является комплексным решением по управлению коммитами и генерации журнала изменений.
Он содержит набор утилит, которые можно использовать по-отдельности.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Система контроля версий git</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</link>
      <pubDate>Mon, 07 Dec 2020 15:47:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</guid>
      <description>&lt;p&gt;Использование системы контроля версий &lt;em&gt;git&lt;/em&gt;.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#преподавание-git&#34;&gt;Преподавание git&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#сопутствующие-темы&#34;&gt;Сопутствующие темы&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;преподавание-git&#34;&gt;Преподавание git&lt;/h2&gt;
&lt;p&gt;Предполагается вводить git в лабораторные работы начиная с 1 курса.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 курс.
&lt;ul&gt;
&lt;li&gt;Операционные системы.
&lt;ul&gt;
&lt;li&gt;Основы работы в git.&lt;/li&gt;
&lt;li&gt;Создание учётной записи на Github.&lt;/li&gt;
&lt;li&gt;Формат коммитов и версий. Даётся as is, без особых пояснений.&lt;/li&gt;
&lt;li&gt;Выкладывание лабораторных работ на Git.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2 курс.
&lt;ul&gt;
&lt;li&gt;Введение в научное программирование.
&lt;ul&gt;
&lt;li&gt;Использование git-flow.&lt;/li&gt;
&lt;li&gt;Семантическое версионирование.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;сопутствующие-темы&#34;&gt;Сопутствующие темы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/&#34;&gt;Верификация коммитов git с помощью GPG&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/&#34;&gt;Варианты Git Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/03/27/git-multiple-remote-repositories/&#34;&gt;git. Несколько удалённых репозиториев&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Синтаксис Markdown для генератора сайтов Hugo</title>
      <link>https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/</link>
      <pubDate>Thu, 26 Nov 2020 18:06:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/</guid>
      <description>&lt;p&gt;В данном случае описывается вариант Markdown для шаблона &lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt;, набор операторов которой несколько шире, чем в стандартном &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#основные-элементы-текста&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Основные элементы текста&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#заголовки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.1&lt;/span&gt; Заголовки&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#шрифтовые-выделения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.2&lt;/span&gt; Шрифтовые выделения&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#списки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3&lt;/span&gt; Списки&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#нумерованные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.1&lt;/span&gt; Нумерованные&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#ненумерованные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.2&lt;/span&gt; Ненумерованные&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#списки-с-отметками&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.3&lt;/span&gt; Списки с отметками&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#встраивание-документов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.4&lt;/span&gt; Встраивание документов&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#сноски&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.5&lt;/span&gt; Сноски&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#изображения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Изображения&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#одиночные-изображения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Одиночные изображения&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#галерея-изображений&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Галерея изображений&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#в-папке-assets-media&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.1&lt;/span&gt; В папке &lt;code&gt;assets/media/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#в-папке-страницы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.2&lt;/span&gt; В папке страницы&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#диаграммы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.3&lt;/span&gt; Диаграммы&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#графики&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.4&lt;/span&gt; Графики&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#мультимедийные-данные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Мультимедийные данные&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#аудио&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; Аудио&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#видео&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2&lt;/span&gt; Видео&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#локальные-файлы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.1&lt;/span&gt; Локальные файлы&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#youtube&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.2&lt;/span&gt; Youtube&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#vimeo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.3&lt;/span&gt; Vimeo&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#ссылки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4&lt;/span&gt; Ссылки&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#стандартные-ссылки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.1&lt;/span&gt; Стандартные ссылки&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#генерация-ссылок&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2&lt;/span&gt; Генерация ссылок&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#ссылка-на-версию-на-другом-языке&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.1&lt;/span&gt; Ссылка на версию на другом языке&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#другой-формат-вывода&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.2&lt;/span&gt; Другой формат вывода&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#идентификаторы-заголовков&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.3&lt;/span&gt; Идентификаторы заголовков&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#ссылка-на-статический-файл&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.3&lt;/span&gt; Ссылка на статический файл&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#цитирование&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.4&lt;/span&gt; Цитирование&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#специальные-элементы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5&lt;/span&gt; Специальные элементы&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#содержание-страницы--table-of-contents&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1&lt;/span&gt; Содержание страницы (Table of Contents)&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#отбивка-резюме--summary-splitter&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.2&lt;/span&gt; Отбивка резюме (Summary Splitter)&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;основные-элементы-текста&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1&lt;/span&gt; Основные элементы текста&lt;/h2&gt;
&lt;h3 id=&#34;заголовки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.1&lt;/span&gt; Заголовки&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;## Heading 2
### Heading 3
#### Heading 4
##### Heading 5
###### Heading 6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Максимальным уровнем заголовка поста является заголовок второго уровня (это не более, чем конвенция).&lt;/p&gt;
&lt;h3 id=&#34;шрифтовые-выделения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.2&lt;/span&gt; Шрифтовые выделения&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;_Курсив_ - подчёркивания.
**Полужирный** - двойная звёздочка.
Можно объединить: **звёздочки и  _подчёркивания_**.
Для зачёркивания используем ~~двойную тильду~~.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;списки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3&lt;/span&gt; Списки&lt;/h3&gt;
&lt;h4 id=&#34;нумерованные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.1&lt;/span&gt; Нумерованные&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. First item
2. Another item
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;ненумерованные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.2&lt;/span&gt; Ненумерованные&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;* First item
* Another item
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;списки-с-отметками&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.3.3&lt;/span&gt; Списки с отметками&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Для интерактивности списка с отметками необходима поддержки со стороны хостера.&lt;/p&gt;
&lt;h3 id=&#34;встраивание-документов&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.4&lt;/span&gt; Встраивание документов&lt;/h3&gt;
&lt;p&gt;В страницу могут быть встроены документы Google.
Чтобы встроить документы Google (например, презентацию):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;нажмите &lt;code&gt;Файл -&amp;gt; Опубликовать в Интернете -&amp;gt; Встраивать в Документы Google&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;скопируйте URL-адрес в отображаемом атрибуте &lt;code&gt;src=&amp;quot;...&amp;quot;&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;вставьте URL-адрес в форму:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; gdocs src=&amp;quot;https://docs.google.com/...&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;сноски&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;1.5&lt;/span&gt; Сноски&lt;/h3&gt;
&lt;p&gt;Используются сноски Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Кроме того [^1], …

[^1]: Текст сноски.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Кроме того &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, …&lt;/p&gt;
&lt;h2 id=&#34;изображения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2&lt;/span&gt; Изображения&lt;/h2&gt;
&lt;h3 id=&#34;одиночные-изображения&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.1&lt;/span&gt; Одиночные изображения&lt;/h3&gt;
&lt;p&gt;Статические изображения по-умолчанию подгружаются из каталога
&lt;code&gt;assets/media/&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Можно подключать изображение с помощью стандартного оператора &lt;code&gt;markdown&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![alternative text for search engines](image.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Наряду со стандартной загрузкой изображений можно использовать и
следующую конструкцию:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; figure library=&amp;quot;true&amp;quot; src=&amp;quot;image.jpg&amp;quot; title=&amp;quot;A caption&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Изображение можно помещать в папку страницы:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; figure src=&amp;quot;image.jpg&amp;quot; title=&amp;quot;A caption&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Можно вставлять нумерованные рисунки:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; figure src=&amp;quot;image.jpg&amp;quot; title=&amp;quot;A caption&amp;quot; numbered=&amp;quot;true&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;С оператором &lt;code&gt;figure&lt;/code&gt; используется библиотека &lt;code&gt;fancybox&lt;/code&gt; для
отображения картинок.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;галерея-изображений&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2&lt;/span&gt; Галерея изображений&lt;/h3&gt;
&lt;h4 id=&#34;в-папке-assets-media&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.1&lt;/span&gt; В папке &lt;code&gt;assets/media/&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Добавить изображения в подпапку папки &lt;code&gt;assets/media/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Описать все изображения в заголовке поста:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;gallery_item:
  - album: gallery
    image: boards.jpg
    caption: A caption
  - album: gallery
    image: https://&amp;lt;url to image&amp;gt;
    caption: Another caption
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Для отображения галереи на странице вставить оператор&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; gallery &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;в-папке-страницы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.2.2&lt;/span&gt; В папке страницы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Создать папку с изображениями внутри папки страницы.&lt;/li&gt;
&lt;li&gt;Для отображения галереи на странице вставить оператор&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; gallery album=&amp;quot;&amp;lt;album_folder&amp;gt;&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Дополнительно можно описать изображения в заголовке поста:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;gallery_item:
  - album: &amp;lt;album_folder&amp;gt;
    image: &amp;lt;image_name&amp;gt;.jpg
    caption: Image caption
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Следует заметить, что для страниц типа &lt;code&gt;doc&lt;/code&gt; возможно размещение галереи только в папке &lt;code&gt;assets/media/&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;диаграммы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.3&lt;/span&gt; Диаграммы&lt;/h3&gt;
&lt;p&gt;Как обычно для Markdown поддерживается расширение для рисования
диаграмм &lt;a href=&#34;https://mermaid-js.github.io/mermaid/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mermaid&lt;/a&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/&#34;&gt;Диаграммы. Mermaid&lt;/a&gt;). Для использования нужно
включить эту функцию в файле &lt;code&gt;params.toml&lt;/code&gt; или добавив &lt;code&gt;diagram: true&lt;/code&gt;
в преамбуле страницы.&lt;/p&gt;
&lt;p&gt;Например, следующий код&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;преобразуется в&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;графики&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;2.4&lt;/span&gt; Графики&lt;/h3&gt;
&lt;p&gt;Поддерживает библиотека &lt;a href=&#34;https://plot.ly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly&lt;/a&gt;. Для отрисовки графика следует сохранить файл Plotly в формате json в папке страницы.
Например, если файл называется &lt;code&gt;chart.json&lt;/code&gt;, то он отрисовывается следующим оператором:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; chart data=&amp;quot;chart&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Для создания файла json можно использовать онлайн редактор &lt;a href=&#34;http://plotly-json-editor.getforge.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly JSON Editor&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;мультимедийные-данные&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3&lt;/span&gt; Мультимедийные данные&lt;/h2&gt;
&lt;h3 id=&#34;аудио&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.1&lt;/span&gt; Аудио&lt;/h3&gt;
&lt;p&gt;Подключение аудио поддерживается для локальных MP3-файлов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; audio src=&amp;quot;audio.mp3&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Путь к файлу задаётся от &lt;code&gt;static/media/&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;видео&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2&lt;/span&gt; Видео&lt;/h3&gt;
&lt;h4 id=&#34;локальные-файлы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.1&lt;/span&gt; Локальные файлы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Подключение видео из &lt;code&gt;static/media/&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; video library=&amp;quot;true&amp;quot; src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Подключение видео из папки страницы:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; video src=&amp;quot;my_video.mp4&amp;quot; controls=&amp;quot;yes&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;youtube&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.2&lt;/span&gt; Youtube&lt;/h4&gt;
&lt;p&gt;Видео, размещённое на Youtube:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; youtube w7Ft2ymGmfc &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;vimeo&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;3.2.3&lt;/span&gt; Vimeo&lt;/h4&gt;
&lt;p&gt;Видео, размещённое на Vimeo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; vimeo 146022717 &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ссылки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4&lt;/span&gt; Ссылки&lt;/h2&gt;
&lt;h3 id=&#34;стандартные-ссылки&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.1&lt;/span&gt; Стандартные ссылки&lt;/h3&gt;
&lt;p&gt;Можно использовать стандартный формат ссылок Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[I&#39;m a link](https://www.google.com)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;генерация-ссылок&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2&lt;/span&gt; Генерация ссылок&lt;/h3&gt;
&lt;p&gt;Ссылки модно генерить с помощью операторов &lt;code&gt;ref&lt;/code&gt; и &lt;code&gt;relref&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; ref &amp;quot;document&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;document#anchor&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;document.md&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;document.md#anchor&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;#anchor&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;/blog/my-post&amp;quot; &amp;gt;}}
{{&amp;lt; ref &amp;quot;/blog/my-post.md&amp;quot; &amp;gt;}}
{{&amp;lt; relref &amp;quot;document&amp;quot; &amp;gt;}}
{{&amp;lt; relref &amp;quot;document.md&amp;quot; &amp;gt;}}
{{&amp;lt; relref &amp;quot;#anchor&amp;quot; &amp;gt;}}
{{&amp;lt; relref &amp;quot;/blog/my-post.md&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ref&lt;/code&gt; задаёт абсолютную ссылку, &lt;code&gt;relref&lt;/code&gt; &amp;mdash; относительную.&lt;/p&gt;
&lt;p&gt;Эти ссылки можно использовать внутри стандартных ссылок Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[A post]({{&amp;lt; ref &amp;quot;/post/my-page-name/index.md&amp;quot; &amp;gt;}})
[A publication]({{&amp;lt; ref &amp;quot;/publication/my-page-name/index.md&amp;quot; &amp;gt;}})
[A project]({{&amp;lt; ref &amp;quot;/project/my-page-name/index.md&amp;quot; &amp;gt;}})
[A relative link from one post to another post]({{&amp;lt; relref &amp;quot;../my-page-name/index.md&amp;quot; &amp;gt;}})
[Scroll down to a page section with heading *Hi*](#hi)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;ссылка-на-версию-на-другом-языке&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.1&lt;/span&gt; Ссылка на версию на другом языке&lt;/h4&gt;
&lt;p&gt;Чтобы создать ссылку на версию документа на другом языке, используйте следующий синтаксис:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; relref path = &amp;quot;document.md&amp;quot; lang = &amp;quot;en&amp;quot;&#39; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;другой-формат-вывода&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.2&lt;/span&gt; Другой формат вывода&lt;/h4&gt;
&lt;p&gt;Чтобы сослаться на другой формат вывода:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; relref path = &amp;quot;document.md&amp;quot; outputFormat = &amp;quot;rss&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;идентификаторы-заголовков&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.2.3&lt;/span&gt; Идентификаторы заголовков&lt;/h4&gt;
&lt;p&gt;Для документов markdown Hugo генерирует идентификаторы элементов для каждого заголовка на странице.
Например, для кода&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;## Reference
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;создаётся следующий HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;h2 id=&amp;quot;reference&amp;quot;&amp;gt;Reference&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ссылку можно задать следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; ref &amp;quot;document.md#reference&amp;quot; &amp;gt;}}
{{&amp;lt; relref &amp;quot;document.md#reference&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Идентификатор можно задать и явно:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;## Reference A {#foo}
## Reference B {id=&amp;quot;bar&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;ссылка-на-статический-файл&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.3&lt;/span&gt; Ссылка на статический файл&lt;/h3&gt;
&lt;p&gt;Ссылка на файл из иерархии &lt;code&gt;static/&lt;/code&gt;, обычно размещаемый в подкаталоге &lt;code&gt;static/files/&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; staticref &amp;quot;files/cv.pdf&amp;quot; &amp;quot;newtab&amp;quot; &amp;gt;}}Download my CV{{&amp;lt; /staticref &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Опция &lt;code&gt;newtab&lt;/code&gt; для открытия файла в новой вкладке.&lt;/p&gt;
&lt;h3 id=&#34;цитирование&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;4.4&lt;/span&gt; Цитирование&lt;/h3&gt;
&lt;p&gt;Цитирование страницы (ссылка на папку страницы):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; cite page=&amp;quot;/publication/preprint&amp;quot; view=&amp;quot;4&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Опция &lt;code&gt;view&lt;/code&gt; задаёт один из стандартных форматов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stream,&lt;/li&gt;
&lt;li&gt;Compact (установлен по умолчанию),&lt;/li&gt;
&lt;li&gt;Card,&lt;/li&gt;
&lt;li&gt;Параметр устанавливается согласно &lt;code&gt;citation_style&lt;/code&gt; из &lt;code&gt;params.toml&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;специальные-элементы&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5&lt;/span&gt; Специальные элементы&lt;/h2&gt;
&lt;h3 id=&#34;содержание-страницы--table-of-contents&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.1&lt;/span&gt; Содержание страницы (Table of Contents)&lt;/h3&gt;
&lt;p&gt;Содержание страницы задаётся с помощью следующего оператора:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; toc &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Уровни заголовков, попадающие в содержание, задаются в &lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[markup.tableOfContents]
   endLevel = 3
   ordered = false
   startLevel = 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Как видно, содержание начинается со второго уровня (это соответствует
соглашению об уровнях заголовков), а завершается третьим. При
необходимости следует внести изменения.&lt;/p&gt;
&lt;h3 id=&#34;отбивка-резюме--summary-splitter&#34;&gt;&lt;span class=&#34;section-num&#34;&gt;5.2&lt;/span&gt; Отбивка резюме (Summary Splitter)&lt;/h3&gt;
&lt;p&gt;Отбивка резюме задаётся конструкцией&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!--more--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Текст сноски.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</link>
      <pubDate>Fri, 30 Oct 2020 19:05:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</guid>
      <description>&lt;p&gt;Специфика языков программирования для научно-инженерных расчётов.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Языки научного программирования &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/&#34;&gt;Языки научного программирования&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Деинсталляция WebFM из Drupal</title>
      <link>https://yamadharma.github.io/ru/post/2018/05/17/webfm-uninstall/</link>
      <pubDate>Thu, 17 May 2018 08:43:05 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2018/05/17/webfm-uninstall/</guid>
      <description>&lt;h2 id=&#34;circumstantia&#34;&gt;Circumstantia&lt;/h2&gt;
&lt;h3 id=&#34;дано&#34;&gt;Дано&lt;/h3&gt;
&lt;p&gt;Сайт на &lt;a href=&#34;https://www.drupal.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Drupal&lt;/a&gt; 5.&lt;/p&gt;
&lt;h3 id=&#34;требуется&#34;&gt;Требуется&lt;/h3&gt;
&lt;p&gt;Превести сайт на Drupal 8.&lt;/p&gt;
&lt;h3 id=&#34;предварительный-план-действий&#34;&gt;Предварительный план действий&lt;/h3&gt;
&lt;p&gt;Drupal 5 -&amp;gt; Drupal 6 -&amp;gt; Drupal 8.&lt;/p&gt;
&lt;h3 id=&#34;проблема&#34;&gt;Проблема&lt;/h3&gt;
&lt;p&gt;В системе установлен пакет &lt;a href=&#34;https://www.drupal.org/project/webfm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;webfm&lt;/a&gt;, который не поддерживается после Drupal 6. Webfm ведёт свою базу файлов, и в тексте сайта ставит указание не на файл, на а запись в своей базе данных.&lt;/p&gt;
&lt;h2 id=&#34;solutio&#34;&gt;Solutio&lt;/h2&gt;
&lt;p&gt;При поиски решения проблемы были найдены следующие сайты:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://puna.upf.edu/node/97&#34;&gt;http://puna.upf.edu/node/97&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/heidar/3707913&#34;&gt;https://gist.github.com/heidar/3707913&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Основываясь на них, набросал скипт &lt;code&gt;webfm-fix&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python2
import MySQLdb

# For REALY work set update = True
update = False

# connect to the databases

db = MySQLdb.connect(
	host=&amp;quot;localhost&amp;quot;,        # your host, usually localhost
	user=&amp;quot;username&amp;quot;,         # your username
	passwd=&amp;quot;userpassword&amp;quot;,   # your password
	db=&amp;quot;database&amp;quot;,           # name of the data base
	use_unicode=True, charset=&#39;utf8&#39;)

cur = db.cursor()

# get all the file ids and paths from the old webfm table

filename_query = &amp;quot;SELECT fid, fpath FROM webfm_file&amp;quot;
cur.execute(filename_query)

fid_max = 0

filenames = {}
for row in cur.fetchall():
    filenames[row[0]] = row[1]
    if fid_max &amp;lt; row[0]:
	fid_max = row[0]

# find all webfm links and replace them with the actual file path

query = &amp;quot;SELECT nid, body, teaser FROM node_revisions WHERE body like &#39;%webfm_send%&#39; OR teaser like &#39;%webfm_send%&#39;&amp;quot;
cur.execute(query)

for row in cur.fetchall():
    entity_id = row[0]
    body = row[1]
    teaser = row[2]
    for i in range(fid_max, 0, -1):
	webfm1 = u&#39;ru/webfm_send/&#39; + str(i)
        webfm2 = u&#39;webfm_send/&#39; + str(i)
        webfm_list = [webfm1, webfm2]
        for webfm in webfm_list:
	    if i in filenames:
		sql_body = &amp;quot;UPDATE node_revisions SET body = REPLACE(body,&#39;%s&#39;,&#39;%s&#39;) WHERE nid = %d&amp;quot; % (webfm,filenames[i],entity_id)
                sql_teaser = &amp;quot;UPDATE node_revisions SET teaser = REPLACE(teaser,&#39;%s&#39;,&#39;%s&#39;) WHERE nid = %d&amp;quot; % (webfm,filenames[i],entity_id)
                if update:
	            try:
	                # Execute the SQL command
	        	cur.execute(sql_body)
                        cur.execute(sql_teaser)
	                # Commit your changes in the database
	        	db.commit()
	            except:
	                # Rollback in case there is any error
                        db.rollback()
db.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;При написании скрипта использовал следующую информацию:
&lt;a href=&#34;https://drupal.stackexchange.com/questions/6787/where-does-drupal-store-the-content-of-a-nodes-body&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Where does Drupal store the content of a node&amp;rsquo;s body?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In Drupal 6, content of the node&amp;rsquo;s body is saved in &lt;code&gt;node_revisions&lt;/code&gt; table under &lt;code&gt;body&lt;/code&gt; field.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node_revisions.body
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Drupal 7, content of the node&amp;rsquo;s body is saved in &lt;code&gt;field_data_body&lt;/code&gt; table under &lt;code&gt;body_value&lt;/code&gt; field. In case content revisions are there then it also saves the data in &lt;code&gt;field_revision_body&lt;/code&gt; table under &lt;code&gt;body_value&lt;/code&gt; field.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;field_data_body.body_value
field_revision_body.body_value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In Drupal 8, content of the node&amp;rsquo;s body is saved in &lt;code&gt;node__body&lt;/code&gt; table under &lt;code&gt;body_value&lt;/code&gt; field. In case content revisions are there then it also saves the data in &lt;code&gt;node_revision__body&lt;/code&gt; table under &lt;code&gt;body_value&lt;/code&gt; field.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;node__body.body_value
node_revision__body.body_value
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Миграция с livejournal на hexo</title>
      <link>https://yamadharma.github.io/ru/post/2018/04/21/from-lj-to-hexo/</link>
      <pubDate>Sat, 21 Apr 2018 15:37:34 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2018/04/21/from-lj-to-hexo/</guid>
      <description>&lt;p&gt;Миграция с &lt;a href=&#34;https://yamadharma.livejournal.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;livejornal&lt;/a&gt; составила некоторые проблемы.&lt;/p&gt;
&lt;p&gt;Хочу заметить, что комментарии я не переносил.&lt;/p&gt;
&lt;p&gt;Наиболее подходящим показался мне &lt;a href=&#34;https://github.com/arty-name/livejournal-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;livejournal-export&lt;/a&gt;. Он переводит сразу в &lt;em&gt;markdown&lt;/em&gt;. Однако, при этом не импортируются теги.
Для идентификации использует параметры сессии броузера.&lt;/p&gt;
&lt;p&gt;Вторым вариантом я рассмотрел &lt;a href=&#34;https://github.com/ghewgill/ljdump&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ljdump&lt;/a&gt;. Он скачивает журнал в &lt;em&gt;html&lt;/em&gt;. Для идентификации использует логин и пароль.&lt;/p&gt;
&lt;p&gt;Потом пришлось преобразовать в &lt;em&gt;markdown&lt;/em&gt;. Для этого написал скрипт &lt;em&gt;xml2md&lt;/em&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;##!/usr/bin/python3
## -*- coding: utf-8 -*-

import os
import sys
from lxml import etree
import html2text
from datetime import datetime
from transliterate import translit, get_available_language_codes

outdir = &#39;markdown&#39;
os.makedirs(outdir, exist_ok=True)

infile = sys.argv[1]
print(infile)

tree = etree.parse(infile)
post = tree.getroot()

postTitle = &#39;&#39;
postTags = &#39;&#39;

for elem in post.getchildren():
    if not elem.text:
        text = &amp;quot;None&amp;quot;
    else:
        text = elem.text
    ## print(elem.tag + &amp;quot; =&amp;gt; &amp;quot; + text)
    ## book_dict[elem.tag] = text
    if elem.tag == &#39;subject&#39;:
        postTitle = text
    if elem.tag == &#39;eventtime&#39;:
        postDate = text
    if elem.tag == &#39;event&#39;:
        postContent = text
    if elem.tag == &#39;props&#39;:
        for propsElem in elem.getchildren():
            if not elem.text:
                text = &amp;quot;None&amp;quot;
            else:
                text = propsElem.text
            ## print(propsElem.tag + &amp;quot; =&amp;gt; &amp;quot; + text)
            if propsElem.tag == &#39;taglist&#39;:
                postTags = text
            



postHeader = &#39;layout: post\n&#39;+&#39;title: &#39;+postTitle+&#39;\n&#39;+&#39;date: &#39;+str(postDate)
postHeader = postHeader+&#39;\ncategories: blog\nlang: ru&#39;
postHeader = postHeader+&#39;\ntags: [&#39;+postTags+&#39;]&#39;
postHeader = postHeader+&#39;\n&#39;+&#39;---&#39;

h = html2text.HTML2Text()
h.ignore_links = False
h.body_width = 0
h.unicode_snob = True
postContent = h.handle(postContent)

fullPost = postHeader+&#39;\n\n\n&#39;+postContent

date = datetime.strptime(postDate, &#39;%Y-%m-%d %H:%M:%S&#39;)
outFile = &#39;{0.year}-{0.month:02d}-{0.day:02d}&#39;.format(date)
if postTitle != &#39;&#39;:
    translitTitle = translit(postTitle, &#39;ru&#39;, reversed=True)
    translitTitle = translitTitle.replace(&amp;quot; &amp;quot;,&amp;quot;_&amp;quot;)
    translitTitle = translitTitle.replace(&amp;quot;:&amp;quot;,&amp;quot;&amp;quot;)
    translitTitle = translitTitle.replace(&amp;quot;&#39;&amp;quot;,&amp;quot;&amp;quot;)
    translitTitle = translitTitle.replace(&amp;quot;«&amp;quot;,&amp;quot;&amp;quot;)
    translitTitle = translitTitle.replace(&amp;quot;»&amp;quot;,&amp;quot;&amp;quot;)
    translitTitle = translitTitle.replace(&amp;quot;;&amp;quot;,&amp;quot;&amp;quot;)
else:
    translitTitle = &#39;{0.hour:02d}-{0.minute:02d}-{0.second:02d}&#39;.format(date)
outFile = outFile+&#39;-&#39;+translitTitle

f = open(outdir+&#39;/&#39;+str(outFile)+&#39;.md&#39;, &#39;w&#39;)
f.write(fullPost)
f.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Преобразование можно выполнить с помощью команды:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./xml2md &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;При этом создаётся каталог &lt;em&gt;markdown&lt;/em&gt; и в него помещается результат конвертации.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Установка темы NexT для hexo</title>
      <link>https://yamadharma.github.io/ru/post/2018/04/04/hexo-theme-next/</link>
      <pubDate>Wed, 04 Apr 2018 13:24:22 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2018/04/04/hexo-theme-next/</guid>
      <description>&lt;p&gt;Пробую поменять тему оформления блога на &lt;a href=&#34;https://github.com/iissnan/hexo-theme-next&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NexT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Также можно посмотреть документацию:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/theme-next/hexo-theme-next/blob/master/docs/ru/README.md&#34;&gt;https://github.com/theme-next/hexo-theme-next/blob/master/docs/ru/README.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/iissnan/hexo-theme-next/blob/master/README.md&#34;&gt;https://github.com/iissnan/hexo-theme-next/blob/master/README.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;скачиваем-тему&#34;&gt;Скачиваем тему&lt;/h2&gt;
&lt;p&gt;Переходим в каталог блога и скачиваем.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/theme-next/hexo-theme-next themes/next
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;конфигурационный-файл&#34;&gt;Конфигурационный файл&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p source/_data
cd source/_data
touch next.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Убедимся, что в файле &lt;code&gt;themes/next/_config.yml&lt;/code&gt; установлено:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;override: false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В корневом файле &lt;code&gt;_config.yml&lt;/code&gt; устанавливаем:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;theme: next
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;и&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;source_dir: source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В файл &lt;code&gt;source/_data/next.yml&lt;/code&gt; переносим из &lt;code&gt;themes/next/_config.yml&lt;/code&gt;
параметры, которые меняем.&lt;/p&gt;
&lt;h2 id=&#34;страницы-категорий-и-тегов&#34;&gt;Страницы категорий и тегов&lt;/h2&gt;
&lt;p&gt;Создадим страницы &lt;code&gt;tags&lt;/code&gt; и &lt;code&gt;categories&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo new page &amp;quot;tags&amp;quot;
hexo new page &amp;quot;categories&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Отредактирем файлы &lt;code&gt;source/tags/index.md&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---
title: tags
date: &amp;quot;2018-04-04T14:41:32+00:00&amp;quot;
type: &amp;quot;tags&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;и &lt;code&gt;source/categories/index.md&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;---
title: categories
date: &amp;quot;2018-04-04T14:41:37+00:00&amp;quot;
type: &amp;quot;categories&amp;quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Добавим описание меню в файл &lt;code&gt;source/_data/next.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;menu:
  home: / || home
  tags: /tags/ || tags
  categories: /categories/ || th
  archives: /archives/ || archive
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;личная-фотография&#34;&gt;Личная фотография&lt;/h2&gt;
&lt;p&gt;Сделаем каталог для изображений:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p source/images
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Поместим туда файл (например, &lt;code&gt;avatar.jpg&lt;/code&gt;) и запишем в конфиг
&lt;code&gt;source/_data/next.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;avatar: /images/avatar.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Я сделал ширину 126px.&lt;/p&gt;
&lt;h3 id=&#34;комментарии&#34;&gt;Комментарии&lt;/h3&gt;
&lt;p&gt;Комментарии настроил через Disqus.
Для этого сконфигурил на &lt;a href=&#34;http://www.disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus&lt;/a&gt; сайт с коротким именем &lt;em&gt;yamadharma-blog&lt;/em&gt;.
Добавил в файл &lt;code&gt;source/_data/next.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;disqus:
  enable: true
  shortname: yamadharma-blog
  count: true
  lazyload: false
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Переход блога на hexo</title>
      <link>https://yamadharma.github.io/ru/post/2018/03/28/hexo/</link>
      <pubDate>Wed, 28 Mar 2018 13:10:47 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2018/03/28/hexo/</guid>
      <description>&lt;p&gt;Блог на &lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt; вести не получилось. Попробовал перейти на &lt;a href=&#34;https://hexo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hexo&lt;/a&gt;. Он
попроще, но зато всё, что нужно, работает сразу.&lt;/p&gt;
&lt;h2 id=&#34;установка-hexo&#34;&gt;Установка Hexo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Установил Hexo (глобально):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Инициализировал каталог блога:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo init .
npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Установил плагин для выкладывания на git (это делается в каталоге блога):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Установил плагин для генерации RSS (такая опция есть в теме):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-generator-feed --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Задал конфигурацию &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# Site
title: В борьбе обретёшь ты право своё
subtitle: Делай, что должен, и будь, что будет
description:
keywords:
author: Дмитрий Кулябов
language: ru
timezone:

# URL
# If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;
url: https://yamadharma.bitbucket.io/
root: /
permalink: :lang/:year/:month/:day/:title/
permalink_defaults:
  lang: ru

# Directory
source_dir: source
public_dir: public
tag_dir: tags
archive_dir: archives
category_dir: categories
code_dir: downloads/code
i18n_dir: :lang
skip_render:

# Writing
new_post_name: :lang/:year-:month-:day-:title.md # File name of new posts
default_layout: post
titlecase: false # Transform title into titlecase
external_link: true # Open external links in new tab
filename_case: 0
render_drafts: false
post_asset_folder: false
relative_link: false
future: true
highlight:
  enable: true
  line_number: true
  auto_detect: false
  tab_replace:

# Home page setting
# path: Root path for your blogs index page. (default = &#39;&#39;)
# per_page: Posts displayed per page. (0 = disable pagination)
# order_by: Posts order. (Order by date descending by default)
index_generator:
  path: &#39;&#39;
  per_page: 10
  order_by: -date

# Category &amp;amp; Tag
default_category: uncategorized
category_map:
tag_map:

# Date / Time format
# Hexo uses Moment.js to parse and display date
# You can customize the date format as defined in
# http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss

# Pagination
# Set per_page to 0 to disable pagination
per_page: 10
pagination_dir: page

# Extensions
# Plugins: https://hexo.io/plugins/
# Themes: https://hexo.io/themes/
theme: landscape

# Deployment
# Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo: git@bitbucket.org:yamadharma/yamadharma.bitbucket.org.git
  branch: master

# Feed
# https://github.com/hexojs/hexo-generator-feed
feed:
  type: atom
  path: atom.xml
  limit: 20
  hub:
  content:
  content_limit: 600
  content_limit_delim: &#39; &#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Таким образом, без настройки, получена работающая конфигурация.&lt;/p&gt;
&lt;h2 id=&#34;порядок-работы-следующий&#34;&gt;Порядок работы следующий&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создаём новый файл для поста:
&lt;pre&gt;&lt;code&gt;hexo new &amp;lt;title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Радактируем пост.&lt;/li&gt;
&lt;li&gt;Генерим страницы:
&lt;pre&gt;&lt;code&gt;hexo generate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Выкладываем страницы на сайт:
&lt;pre&gt;&lt;code&gt;hexo deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo d
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;Очищаем каталог:
&lt;pre&gt;&lt;code&gt;hexo clean
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Миграция с blogspot на hexo</title>
      <link>https://yamadharma.github.io/ru/post/2018/03/27/from-blogspot-to-hexo/</link>
      <pubDate>Tue, 27 Mar 2018 15:56:18 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2018/03/27/from-blogspot-to-hexo/</guid>
      <description>&lt;h2 id=&#34;hexo&#34;&gt;Hexo&lt;/h2&gt;
&lt;p&gt;Перешёл на &lt;a href=&#34;https://hexo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hexo&lt;/a&gt;. Дополнительно решил перенести свои заметки с &lt;a href=&#34;http://yamadharma.blogspot.ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogspot&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Установил пакет для миграции:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-migrator-blogger --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Подправил файл миграции
(&lt;code&gt;node_modules/hexo-migrator-blogger/lib/migrate.js&lt;/code&gt;), чтобы
нормальные названия файлов были:
{% codeblock lang:patch %}
&amp;mdash; migrate.js.old      2016-09-24 10:02:27.000000000 +0300
+++ migrate.js  2018-03-27 15:23:52.475311505 +0300
@@ -11,17 +11,19 @@ module.exports = function(source, target
var posts = JSON.parse(body).feed.entry;
async.each(posts, function(item, cb) {
var title = item.title[&#39;$t&#39;];&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;       var file = title.replace(/\s/g,&#39;-&#39;).replace(/[^A-z 0-9 -]/g,&#39;&#39;);
       var published = item.published[&#39;$t&#39;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;       var file = moment(published).format(&#39;YYYY-MM-DD&#39;) + &#39;-&#39; + title;
       var tags = &#39;&#39;;
       if (item.category) {
           tags = item.category.map(prop(&#39;term&#39;));
       }
       var header = [
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;           &#39;title: |&#39;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;           &#39;\t&#39; +  title,
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;          &#39;layout: post&#39;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;           &#39;title: &#39; + &#39;\&amp;quot;&#39; + title + &#39;\&amp;quot;&#39;,
           &#39;date: &#39; + moment(published).format(&#39;YYYY-MM-DD HH:mm:ss&#39;),
           &#39;tags: [&#39; + tags + &#39;]&#39;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;          &#39;categories: blog&#39;,
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;          &#39;lang: ru&#39;,
           &#39;---&#39;,
       ];
       var content = item.content[&#39;$t&#39;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% endcodeblock %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Запустил миграцию:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo migrate blogger &amp;quot;http://yamadharma.blogspot.ru/feeds/posts/default?alt=json&amp;amp;max-results=10000&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Почистил получившиеся файлы:
{% codeblock lang:bash %}
#!/bin/bash&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;name-clean&#34;&gt;name: clean&lt;/h1&gt;
&lt;p&gt;for i in &lt;em&gt;.md
do
sed -i -e &amp;ldquo;s:&lt;/div&gt;::g&amp;rdquo;&lt;br&gt;
-e &amp;ldquo;s:&amp;lt;div.&lt;/em&gt;&amp;gt;::g&amp;rdquo;&lt;br&gt;
&amp;ldquo;$i&amp;rdquo;
done
{% endcodeblock %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Сделал транслит названий:
{% codeblock lang:bash %}
#!/bin/bash&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;name-translit&#34;&gt;name: translit&lt;/h1&gt;
&lt;h1 id=&#34;перекодирует-рекурсивно-в-текущем-каталоге-имена&#34;&gt;Перекодирует рекурсивно в текущем каталоге имена&lt;/h1&gt;
&lt;h1 id=&#34;файлов-и-каталогов-в-транслит&#34;&gt;файлов и каталогов в транслит.&lt;/h1&gt;
&lt;h1 id=&#34;успенский-в-а-к-проблеме-транслитерации-русских-текстов-латинскими-буквами&#34;&gt;Успенский В. А. К проблеме транслитерации русских текстов латинскими буквами&lt;/h1&gt;
&lt;h1 id=&#34;httplingvoforumnetindexphptopic357580&#34;&gt;&lt;a href=&#34;http://lingvoforum.net/index.php?topic=35758.0&#34;&gt;http://lingvoforum.net/index.php?topic=35758.0&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;shopt -s nullglob
for NAME in *
do
TRS=&lt;code&gt;echo $NAME | sed &amp;quot;y/абвгдезиклмнопрстуфц/abvgdeziklmnoprstufc/&amp;quot;&lt;/code&gt;
TRS=&lt;code&gt;echo $TRS | sed &amp;quot;y/АБВГДЕЗИКЛМНОПРСТУФЦ/ABVGDEZIKLMNOPRSTUFC/&amp;quot;&lt;/code&gt;
TRS=${TRS//х/kh} TRS=${TRS//Х/KH};
TRS=${TRS//ч/ch} TRS=${TRS//Ч/CH};
TRS=${TRS//ш/sh} TRS=${TRS//Ш/SH};
TRS=${TRS//ё/yo} TRS=${TRS//Ё/YO};
TRS=${TRS//ж/zh} TRS=${TRS//Ж/ZH};
TRS=${TRS//щ/th} TRS=${TRS//Щ/TH};
TRS=${TRS//э/eh} TRS=${TRS//Э/EH};
TRS=${TRS//ю/yu} TRS=${TRS//Ю/YU};
TRS=${TRS//я/ya} TRS=${TRS//Я/YA};
TRS=${TRS//й/yj} TRS=${TRS//Й/yj};
TRS=${TRS//ъ/jh} TRS=${TRS//Ъ/JH};
TRS=${TRS//ь/j} TRS=${TRS//Ь/J};
TRS=${TRS//ы/ih} TRS=${TRS//Ы/IH};&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TRS=${TRS// /_};

if [[ -d &amp;quot;$NAME&amp;quot; ]]
then
mv -v &amp;quot;$NAME&amp;quot; &amp;quot;$TRS&amp;quot;
cd &amp;quot;$TRS&amp;quot;
&amp;quot;$0&amp;quot;
cd ..
else
mv -v &amp;quot;$NAME&amp;quot; &amp;quot;$TRS&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;done
{% endcodeblock %}&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Миграция с Drupal-6 на Drupal-8</title>
      <link>https://yamadharma.github.io/ru/post/2015/11/19/drupal6-to-8/</link>
      <pubDate>Thu, 19 Nov 2015 11:39:41 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/11/19/drupal6-to-8/</guid>
      <description>&lt;h2 id=&#34;информация-по-миграции&#34;&gt;Информация по миграции&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.drupal.org/upgrade/migrate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Upgrading from Drupal 6 or 7 to Drupal 8&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.drupal.org/node/2257723&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Executing a Drupal 6/7 to Drupal 8 upgrade&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://drupalwatchdog.com/blog/2014/12/drupal-upgrade-1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Drupal 6 to 8 Upgrade Challenge&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.drupal.org/node/2167633&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Known Issues with the Drupal 6/7 -&amp;gt; 8 Upgrade Path&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;обновление-php&#34;&gt;Обновление PHP&lt;/h2&gt;
&lt;p&gt;Для Drupal-8 нужен php-5.5. В Centos-7 идёт php-5.4. Обновим его до php-5.6. Вначале установним нужные репозитории
(см. &lt;a href=&#34;https://webtatic.com/packages/php56/&#34;&gt;https://webtatic.com/packages/php56/&lt;/a&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Сделаем подмену дистрибутивного php на php-5.6:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install yum-plugin-replace
yum replace php-common --replace-with=php56w-common
yum install php56w-opcache
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;установка-drush-8&#34;&gt;Установка Drush 8&lt;/h2&gt;
&lt;p&gt;Установим Composer:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install composer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Установим Drush (dev):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /usr/local/src/drush
cd /usr/local/src/drush
composer require drush/drush:dev-master
ln -s /usr/local/src/drush/vendor/drush/drush/drush /usr/local/bin/drush
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Миграция с Samba3 на Samba4</title>
      <link>https://yamadharma.github.io/ru/post/2015/10/27/samba-migrate/</link>
      <pubDate>Tue, 27 Oct 2015 13:48:49 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/10/27/samba-migrate/</guid>
      <description>&lt;h2 id=&#34;установка-пакетов&#34;&gt;Установка пакетов&lt;/h2&gt;
&lt;p&gt;В качестве системы для сервера используем Centos7. Там пока не
поддерживается функционал Samba4 AD (конфликт mit-krb и heimdal). Поэтому поставим самбу с
EnterpriseSAMBA.com &lt;a href=&#34;https://portal.enterprisesamba.com/&#34;&gt;https://portal.enterprisesamba.com/&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/yum.repos.d
wget https://sernet-samba-public:Noo1oxe4zo@download.sernet.de/packages/samba/4.2/rhel/7/sernet-samba-4.2.repo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В файле &lt;code&gt;/etc/yum.repos.d/sernet-samba-4.2.repo&lt;/code&gt; заменим
&lt;code&gt;USERNAME:ACCESSKEY&lt;/code&gt; на свои данные либо на публичную учётную запись
&lt;code&gt;sernet-samba-public:Noo1oxe4zo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Установим нужные пакеты:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install sernet-samba sernet-samba-ad
yum -y install bind
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;поиск-дубликатов-sid&#34;&gt;Поиск дубликатов SID&lt;/h2&gt;
&lt;p&gt;Найдём дубликаты SID с помощью следующего скрипта (запусткается на
машине, где расположен ldap).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/python
# A quick and dirty python script that checks for duplicat SID&#39;s using slapcat.
import os
 
data = os.popen(&amp;quot;slapcat | grep sambaSID&amp;quot;, &#39;r&#39;)
line = []
 
def anydup(thelist):
        dups = list(set([x for x in thelist if thelist.count(x) &amp;gt; 1]))
        for i in dups:
                print &amp;quot;Duplicate id: &amp;quot;, i
 
for each_line in data:
        line.append(each_line.strip())
 
anydup(line)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Далее дубликаты удаляются с помощью редактирования ldap (я использовал
&lt;a href=&#34;https://directory.apache.org/studio/&#34;&gt;https://directory.apache.org/studio/&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;предварительная-конфигурация&#34;&gt;Предварительная конфигурация&lt;/h2&gt;
&lt;p&gt;Добавил в файл &lt;code&gt;/etc/hosts&lt;/code&gt; адрес хоста.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;127.0.0.1               localhost.localdomain   localhost                                                                                                                                     
10.130.64.23            dc.dk.sci.pfu.edu.ru    dc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Также прописал его в прямой и обратной зонах DNS.&lt;/p&gt;
&lt;h2 id=&#34;перенос-конфигурационных-файлов&#34;&gt;Перенос конфигурационных файлов&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pdc ~ # scp -r /var/lib/samba/private/ dc.dk.sci.pfu.edu.ru:/var/lib/samba/samba3tdb/
pdc ~ # scp /etc/samba/smb.conf dc.dk.sci.pfu.edu.ru:/var/lib/samba/samba3tdb/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В &lt;code&gt;/var/lib/samba/samba3tdb/smb.conf&lt;/code&gt; следует заменить имя контроллера домена.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;netbios name = dc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Поскольку при миграции используется информация из ldap, на хосте &lt;code&gt;dc&lt;/code&gt;
задаю файл &lt;code&gt;/etc/openldap/ldap.conf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;BASE    dc=dk,dc=sci,dc=pfu,dc=edu,dc=ru                                                                                                                                                      
URI     ldap://ldap.dk.sci.pfu.edu.ru                                                                                                                                                         
                                                                                                                                                                                              
TLS_REQCERT     allow
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;проведение-миграции&#34;&gt;Проведение миграции&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;samba-tool domain classicupgrade --dbdir=/var/lib/samba/samba3tdb/ --use-xattrs=yes --realm=dk.sci.pfu.edu.ru --dns-backend=BIND9_DLZ /var/lib/samba/samba3tdb/smb.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;шаманство&#34;&gt;Шаманство&lt;/h3&gt;
&lt;p&gt;В файле &lt;code&gt;/var/lib/samba/samba3tdb/smb.conf&lt;/code&gt; заменил доменное имя&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;passdb backend = ldapsam:ldap://ldap.dk.sci.pfu.edu.ru
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;на ip-адрес&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;passdb backend = ldapsam:ldap://10.130.64.11
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Без этого миграция падала с ошибкой &lt;code&gt;LDAP client internal error: NT_STATUS_BAD_NETWORK_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;настройка-firewalld&#34;&gt;Настройка firewalld&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;firewall-cmd --add-service=ldap --permanent
firewall-cmd --add-service=kerberos --permanent
firewall-cmd --add-service=kpasswd --permanent
firewall-cmd --add-service=samba --permanent
firewall-cmd --add-service=samba-client --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройка-selinux&#34;&gt;Настройка SELinux&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setsebool -P samba_export_all_ro 1
setsebool -P samba_export_all_rw 1
setsebool -P samba_domain_controller 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройка-kerberos&#34;&gt;Настройка Kerberos&lt;/h3&gt;
&lt;p&gt;Создадим файл конфигурации kerberos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /etc/krb5.conf{,.default}
cp /var/lib/samba/private/krb5.conf /etc
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройка-dns&#34;&gt;Настройка DNS&lt;/h3&gt;
&lt;p&gt;В файле &lt;code&gt;/etc/resolv.conf&lt;/code&gt; задаём локальный DNS-сервер:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;search dk.sci.pfu.edu.ru                                                                                                                                                                      
nameserver 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В &lt;code&gt;/etc/named.conf&lt;/code&gt; подключаем сконфигурённую конфигурацию:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;include &amp;quot;/var/lib/samba/private/named.conf&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Также в раздел &lt;code&gt;options&lt;/code&gt; добавляем:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;options {
     [...]
     tkey-gssapi-keytab &amp;quot;/var/lib/samba/private/dns.keytab&amp;quot;;
     [...]
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;А также следующее:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;options {
     [...]
	 allow-query { localhost; 10.128.0.0/9; };
	 allow-update { 10.128.0.0/9; 127.0.0.0/8; };
     forwarders { 10.130.64.239; 8.8.8.8; 8.8.4.4; };
     allow-transfer {
		 # this config is for a single master DNS server
		 none;
	 };
     [...]
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройка-firewalld-1&#34;&gt;Настройка firewalld&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;firewall-cmd --add-service=dns --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройки-прав-доступа&#34;&gt;Настройки прав доступа&lt;/h3&gt;
&lt;p&gt;Права доступа:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chown -R root:named /var/lib/samba/private/dns
chmod 770 /var/lib/samba/private/dns
chgrp named /var/lib/samba/private/dns.keytab
chmod g+r /var/lib/samba/private/dns.keytab
chgrp named /var/lib/samba/private
chgrp -R named /var/lib/samba/private/sam.ldb.d
chmod g+rw /var/lib/samba/private/sam.ldb.d/*
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;настройка-selinux-1&#34;&gt;Настройка SELinux&lt;/h3&gt;
&lt;p&gt;Изменим текущий контекст:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chcon -t named_conf_t /var/lib/samba/private/dns.keytab
chcon -t named_conf_t /var/lib/samba/private/named.conf
chcon -t named_conf_t /var/lib/samba/private/named.conf.update
chcon -R -t named_var_run_t /var/lib/samba/private/dns
chcon -t named_var_run_t /var/lib/samba/private/dns/${MYREALM}.zone
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Изменим постоянный контекст:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;semanage fcontext -a -t named_conf_t /var/lib/samba/private/dns.keytab
semanage fcontext -a -t named_conf_t /var/lib/samba/private/named.conf
semanage fcontext -a -t named_conf_t /var/lib/samba/private/named.conf.update
semanage fcontext -a -t named_var_run_t &amp;quot;/var/lib/samba/private/dns(/.*)?&amp;quot;
semanage fcontext -a -t named_var_run_t /var/lib/samba/private/dns/${MYREALM}.zone
semanage fcontext -a -t named_var_run_t /var/lib/samba/private/dns/${MYREALM}.zone.jnl
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;запуск-демонов&#34;&gt;Запуск демонов&lt;/h2&gt;
&lt;p&gt;Сконфигурим тип сервера samba в файле &lt;code&gt;/etc/default/sernet-samba&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SAMBA_START_MODE=&amp;quot;ad&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Запустим демоны:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl start named.service
systemctl start sernet-samba-ad.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Добавим их в автозагрузку:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl enable named.service
systemctl enable sernet-samba-ad.service
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;проверка&#34;&gt;Проверка&lt;/h2&gt;
&lt;p&gt;Проверка DNS.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# host -t SRV _ldap._tcp.dk.sci.pfu.edu.ru.
_ldap._tcp.dk.sci.pfu.edu.ru has SRV record 0 100 389 dc.dk.sci.pfu.edu.ru.
# host -t SRV _kerberos._udp.dk.sci.pfu.edu.ru.
_kerberos._udp.dk.sci.pfu.edu.ru has SRV record 0 100 88 dc.dk.sci.pfu.edu.ru.
# host -t A dc.dk.sci.pfu.edu.ru.
dc.dk.sci.pfu.edu.ru has address 10.130.64.23
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Замена пароля администратора:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;samba-tool user setpassword Administrator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Проверка &lt;code&gt;smbclient&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;smbclient //localhost/netlogon -UAdministrator -c &#39;ls&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Аналогичный результат должно давать (&lt;code&gt;dc&lt;/code&gt; &amp;mdash; имя сервера):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;smbclient //dc/netlogon -k -c &#39;ls&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Проверка kerberos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kinit administrator@DK.SCI.PFU.EDU.RU
klist
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;дополнительно&#34;&gt;Дополнительно&lt;/h2&gt;
&lt;p&gt;Убрать проверку сложности пароля:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;samba-tool domain passwordsettings set --complexity=off
samba-tool domain passwordsettings set --history-length=0
samba-tool domain passwordsettings set --min-pwd-age=0
samba-tool domain passwordsettings set --max-pwd-age=0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Настройка SELinux для некоторых приложений</title>
      <link>https://yamadharma.github.io/ru/post/2015/05/15/selinux-apps/</link>
      <pubDate>Fri, 15 May 2015 05:56:13 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/05/15/selinux-apps/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setsebool&lt;/code&gt; запускаем как с ключём &lt;code&gt;-P&lt;/code&gt; (для запоминания настроек), так и без него (чтобы работало в текущей сессии).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;a-namehead_www-servera-www-сервер&#34;&gt;&lt;a name=&#39;head_www-server&#39;&gt;&lt;/a&gt; WWW-сервер&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setsebool -P httpd_unified 1
setsebool -P httpd_can_network_connect_db 1
setsebool -P httpd_can_network_connect 1
setsebool -P httpd_can_network_relay 1
setsebool -P httpd_can_sendmail 1
setsebool -P httpd_execmem 1
setsebool -P httpd_use_fusefs 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;a-namehead_dba-базы-данных&#34;&gt;&lt;a name=&#39;head_db&#39;&gt;&lt;/a&gt; Базы данных&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setsebool -P selinuxuser_postgresql_connect_enabled 1
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;setsebool -P selinuxuser_mysql_connect_enabled 1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ojs&#34;&gt;OJS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем &lt;a href=&#34;#head_www-server&#34;&gt;www-сервер&lt;/a&gt; и &lt;a href=&#34;#head_db&#34;&gt;базу данных&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем доступ к файловой системе.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/ojs/cache(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/ojs/public(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/ojs/config.inc.php&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/ojs/plugins/generic(/.*)?&amp;quot;

semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/data(/.*)?&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;drupal&#34;&gt;Drupal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем &lt;a href=&#34;#head_www-server&#34;&gt;www-сервер&lt;/a&gt; и &lt;a href=&#34;#head_db&#34;&gt;базу данных&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем доступ к файловой системе.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/sites/drupal/(.*)/sites/(.*)/files(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/sites/drupal/(.*)/cache(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/html/sites/drupal/(.*)/sites/all(/.*)?&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;moodle&#34;&gt;Moodle&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем &lt;a href=&#34;#head_www-server&#34;&gt;www-сервер&lt;/a&gt; и &lt;a href=&#34;#head_db&#34;&gt;базу данных&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настраиваем доступ к файловой системе.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/moodle/web-git/mod(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/moodle/web-git/local(/.*)?&amp;quot;
semanage fcontext --add -t httpd_sys_rw_content_t &amp;quot;/var/www/moodle/web-git/theme(/.*)?&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;letsencript&#34;&gt;LetsEncript&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;semanage fcontext -a -t cert_t &#39;/etc/letsencrypt/(archive|live)(/.*)?&#39;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Установка виртуальной машины NOC на oVirt</title>
      <link>https://yamadharma.github.io/ru/post/2015/05/13/ova-on-ovirt/</link>
      <pubDate>Wed, 13 May 2015 08:48:57 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/05/13/ova-on-ovirt/</guid>
      <description>&lt;p&gt;Чтобы не мучиться с установкой &lt;a href=&#34;https://kb.nocproject.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NOC&lt;/a&gt; решил установить с образа, &lt;a href=&#34;https://kb.nocproject.org/display/SITE/Downloads&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;предлагаемого на сайте&lt;/a&gt;. К сажалению, образ предлагается в формате &lt;code&gt;ova&lt;/code&gt;, а у меня стоит oVirt (&lt;code&gt;ovirt-engine&lt;/code&gt;). Он этот формат не понимает. Однако у меня есть ещё хост с &lt;code&gt;kvm&lt;/code&gt; (&lt;code&gt;kvm-host&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Распаковываю &lt;code&gt;noc-x86_64-Debian-8.ova&lt;/code&gt;:
{% codeblock lang:bash %}
tar -xf noc-x86_64-Debian-8.ova
{% endcodeblock %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Конвертирую в формат &lt;code&gt;qcow2&lt;/code&gt;:
{% codeblock lang:bash %}
qemu-img convert -O qcow2 noc-x86_64-Debian-8-disk1.vmdk noc-x86_64-Debian-8-disk1.qcow2
{% endcodeblock %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создаю виртуальную машину на kvm. По большому счёту это нужно лишь для создания xml-файла описания виртуальной машины.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Машина сначала не загрузилась потому, что в &lt;code&gt;/etc/fstab&lt;/code&gt; на &lt;code&gt;/boot&lt;/code&gt; был жёстко прописан &lt;code&gt;/dev/sda1&lt;/code&gt;. Поменял на &lt;code&gt;/dev/vda1&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Пароли следующие:
{% codeblock lang:bash %}
Username: user
Password: thenocproject
Root password: thenocproject
{% endcodeblock %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;На web-интерфейс логин и пароль:
{% codeblock lang:bash %}
User: admin
Password: admin
{% endcodeblock %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Образы на &lt;code&gt;kvm-host&lt;/code&gt; находятся в каталоге &lt;code&gt;/var/lib/libvirt/images&lt;/code&gt;, а соответствующие конфигурационные файлы в &lt;code&gt;/etc/libvirt/qemu&lt;/code&gt;. Копируем нужный конфиг в &lt;code&gt;/var/lib/libvirt/images&lt;/code&gt; и называем &lt;code&gt;noc-x86_64-Debian-8-disk1.xml&lt;/code&gt;. Поскольку будем работать по сети, заменяем в нём путь к образу с &lt;code&gt;/var/lib/...&lt;/code&gt; на  &lt;code&gt;/net/kvm-host/var/lib/...&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Заходим на хост &lt;code&gt;ovirt-engine&lt;/code&gt;, монтируем &lt;code&gt;kvm-host&lt;/code&gt; по autofs:
{% codeblock lang:bash %}
cd /net/kvm-host/var/lib/libvirt/images
{% endcodeblock %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Импортируем образ в oVirt:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% codeblock lang:bash %}
virt-v2v -b vlan5  -i libvirtxml -o rhev -os ovirt-node-01:/ovirt/export noc-x86_64-Debian-8-disk1.xml
{% endcodeblock %}&lt;/p&gt;
&lt;p&gt;Здесь &lt;code&gt;ovirt-node-01&lt;/code&gt; — узел, на котором запускаются виртуальные машины, &lt;code&gt;vlan5&lt;/code&gt; — интерфейс, к которому она будет подключена.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Поддержка многоязычности</title>
      <link>https://yamadharma.github.io/ru/post/2015/04/20/octopus-multilingual/</link>
      <pubDate>Mon, 20 Apr 2015 13:17:32 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/04/20/octopus-multilingual/</guid>
      <description>&lt;p&gt;Добавим в конфигурационный файл (&lt;code&gt;_config.yml&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;gems:
  - octopress-multilingual
  - octopress-linkblog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Также зададим язык по-умолчанию:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;lang: ru
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;язык-для-постов&#34;&gt;Язык для постов&lt;/h2&gt;
&lt;p&gt;Добавим язык  в заголовок шаблонов:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;lang: ru
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;конфигурация-для-разных-языков&#34;&gt;Конфигурация для разных языков&lt;/h2&gt;
&lt;p&gt;В каталоге &lt;code&gt;_data&lt;/code&gt; создадим конфигурационные файлы вида
&lt;code&gt;lang_[language_code].yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;_data
  lang_en.yml
  lang_ru.yml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Примерное их содержание:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;# lang_en.yml
title: English title

# lang_ru.yml
title: Русское название сайта
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Перенос блога на Jekyll &#43; Octopress</title>
      <link>https://yamadharma.github.io/ru/post/2015/03/23/jekyll-octopress/</link>
      <pubDate>Mon, 23 Mar 2015 13:51:36 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2015/03/23/jekyll-octopress/</guid>
      <description>&lt;h2 id=&#34;репозиторий-для-сайта&#34;&gt;Репозиторий для сайта&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создал локальный каталог для сайта:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir ~/mysite
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;локальный-git-репозиторий&#34;&gt;Локальный git-репозиторий&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создал пустой git-репозиторий:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/mysite
git init
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Создал в нём файл &lt;code&gt;README.md&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch README.md
``

- Сделал коммит:

```bash
git add .
git commit -am &#39;Initial commit&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Создаю ветку для кода (в &lt;code&gt;master&lt;/code&gt; будет сайт):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch source
git checkout source
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;##head_site-template-create&#34;&gt;Далее создаю шаблон для сайта&lt;/a&gt; в ветке &lt;code&gt;source&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;репозиторий-на-bitbucket&#34;&gt;Репозиторий на Bitbucket&lt;/h4&gt;
&lt;p&gt;Я пользовался &lt;a href=&#34;https://confluence.atlassian.com/display/BITBUCKET/Publishing&amp;#43;a&amp;#43;Website&amp;#43;on&amp;#43;Bitbucket&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;инструкцией от bitbucket&amp;rsquo;а&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создал на bitbucket&amp;rsquo;е репозиторий с названием
&lt;code&gt;yamadharma.bitbucket.org&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Выложил репозиторий&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/mysite
git remote add origin git@bitbucket.org:yamadharma/yamadharma.bitbucket.org.git
git push -u origin --all
git push -u origin --tags
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;выкладывание-сайта-на-bitbucket&#34;&gt;Выкладывание сайта на Bitbucket&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создал файл &lt;code&gt;_deploy.yml&lt;/code&gt; с помощью команды&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;octopress deploy init git -u git@bitbucket.org:yamadharma/yamadharma.bitbucket.org.git
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Подредактировал &lt;code&gt;.gitignore&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;.deploy&amp;quot; &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Сгенерил сайт:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jekyll b
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Выложил существующий сайт:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;octopress deploy
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Положил ветку &lt;code&gt;source&lt;/code&gt; на git:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -am &#39;Поправил сайт&#39;
git push
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;a-namehead_site-template-createa-создание-шаблона-сайта&#34;&gt;&lt;a name=&#39;head_site-template-create&#39;&gt;&lt;/a&gt; Создание шаблона сайта&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;В каталоге сайта создаю шаблон:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/mysite
git checkout source
octopress new -f .
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Счастье есть</title>
      <link>https://yamadharma.github.io/ru/post/2007/06/30/schaste-est/</link>
      <pubDate>Sat, 30 Jun 2007 13:30:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2007/06/30/schaste-est/</guid>
      <description>&lt;p&gt;Просидел всю неделю под виндой. Качал MSDN. К концу недели стало уже плохо. В пятницу поставил Vista. Это добило меня окончательно. Вечером перегрузился под Linux. Счастье есть.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>К вопросу о настройке маршрутизатора ASUS WL-500gP</title>
      <link>https://yamadharma.github.io/ru/post/2007/01/14/k-voprosu-o-nastrojke-marshrutizatora-asus-wl-500gp/</link>
      <pubDate>Sun, 14 Jan 2007 18:18:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2007/01/14/k-voprosu-o-nastrojke-marshrutizatora-asus-wl-500gp/</guid>
      <description>&lt;p&gt;При настройке возникли следующие проблемы.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Нужно было догадаться, что сервер доступа в настройках называется Heart-Beat Server.&lt;/li&gt;
&lt;li&gt;Задавать маршрутизацию можно либо на на внутреннем eth (LAN), либо на внешнем ppp (WAN). Таким образом, получить доступ к домашней сети провайдера оказалось невозможным. Пришлось качать альтернативную прошивку (&lt;a href=&#34;http://oleg.wl500g.info/),&#34;&gt;http://oleg.wl500g.info/),&lt;/a&gt; в которой возможно (кроме кучи других бонусов) задавать маршрутную таблицу на внешнем eth (MAN) интерфейсе.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Monit и gentoo rc-scripts</title>
      <link>https://yamadharma.github.io/ru/post/2006/09/17/monit-i-gentoo-rc-scripts/</link>
      <pubDate>Sun, 17 Sep 2006 20:55:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2006/09/17/monit-i-gentoo-rc-scripts/</guid>
      <description>&lt;p&gt;При использовании monit для перезапуска rc-скриптов в gentoo использовал killall и опцию zap.&lt;br&gt;
Нашёл это-же решение, но оформленное красивее.&lt;/p&gt;
&lt;p&gt;Это файл /etc/monit.d/bin/kickservice&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;##!/bin/sh  
## kickservice by Eric Radman  
## Script used by monit to kill off and restart daemons  
## /etc/monit.d/bin/kickservice  
   
function stop ()  
{  
     /etc/init.d/$1 pause  
     /etc/init.d/$1 zap  
     if [ &amp;quot;$2&amp;quot; == &amp;quot;kill&amp;quot; ]  
         then  
         /bin/killall $3  
     fi  
}  
   
function start ()  
{  
     /etc/init.d/$1 zap  
     /etc/init.d/$1 start  
}  
   
case &amp;quot;$1&amp;quot; in  
  start)  
     start $2 $3 $4  
     ;;  
  stop)  
     stop $2 $3 $4  
     ;;  
  *)  
     echo &amp;quot;Usage: kickservice [start|stop] [service] kill [daemon]&amp;quot;  
     ;;  
 esac  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Проблема возникла из-за того, что при установке baselayout-1.12.x перестал нормально работать pppd (при подключении через pptp к VPN-серверу провайдера). Очень часто соединение не устанавливается (вина, думаю, провайдерского сервера). По идее после этого он должен перезапускаться, а он просто ничего не делал. Решил снять проблему с помощью monit.&lt;br&gt;
Убрал net.ppp0 из загрузки, и заставил monit мониторить ppp0.&lt;/p&gt;
&lt;p&gt;Вот скрипт /etc/monit.d/ppp0&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;check process pppd with pidfile /var/run/ppp0.pid  
   start program = &amp;quot;/etc/monit.d/bin/kickservice start net.ppp0&amp;quot;  
   stop program = &amp;quot;/etc/monit.d/bin/kickservice stop net.ppp0 kill pppd&amp;quot;  
   if 5 restarts within 5 cycles then timeout
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;P. S. Хотел запостить скрипты, но не знаю как :(&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gentoo: конвертация из x86 в x86_64 (2)</title>
      <link>https://yamadharma.github.io/ru/post/2006/08/21/gentoo-konvertatsija-iz-x86-v-x86-64-2/</link>
      <pubDate>Mon, 21 Aug 2006 12:19:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2006/08/21/gentoo-konvertatsija-iz-x86-v-x86-64-2/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Провозившись с данной проблемой выходные (и частично неделю),
провёл конвертацию.&lt;/li&gt;
&lt;li&gt;Оказалось, что всё очень просто.&lt;/li&gt;
&lt;li&gt;Однако, после начала обновления системы (&lt;code&gt;emerge -e system&lt;/code&gt;), стали
отваливаться приложения (не могут подгрузить библиотеки).&lt;/li&gt;
&lt;li&gt;К сожалению, в новом профайле не поддерживается построение
библиотек под несколько архитектур (может, просто я не знаю).&lt;/li&gt;
&lt;li&gt;Хотя в консоли всё функционирует нормально.&lt;/li&gt;
&lt;li&gt;Скоро, надеюсь, всё конвертну.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Gentoo: конвертация из x86 в x86_64</title>
      <link>https://yamadharma.github.io/ru/post/2006/08/18/gentoo-konvertatsija-iz-x86-v-x86-64/</link>
      <pubDate>Fri, 18 Aug 2006 09:21:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2006/08/18/gentoo-konvertatsija-iz-x86-v-x86-64/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;На недавно обновлённом компьютере (до этого был Pentium III)
крутится 32-битная ОС (Gentoo Linux) (Hurd и Plan9 не учитываю).&lt;/li&gt;
&lt;li&gt;Решил конвертнуть в 64-битную. Однако документации по этому вопросу
не нашёл.&lt;/li&gt;
&lt;li&gt;Так-что решил заняться самодеятельностью. Как получится, напишу об этом (с приложением скриптов).&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Пожаротушение</title>
      <link>https://yamadharma.github.io/ru/post/2006/07/14/firefighting/</link>
      <pubDate>Fri, 14 Jul 2006 11:48:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2006/07/14/firefighting/</guid>
      <description>&lt;p&gt;Новая ссылочка по системам пожаротушения:
&lt;a href=&#34;http://www.ista-tech.ru/fire/statya/sx/ART/810/BRN/1245.html&#34;&gt;http://www.ista-tech.ru/fire/statya/sx/ART/810/BRN/1245.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Цитата:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;По степени вредного воздействия на материальные ценности при срабатывании САП образуют (в порядке убывания вредности) следующий ряд:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;аэрозольные и порошковые;&lt;/li&gt;
&lt;li&gt;пенные и водо-пенные;&lt;/li&gt;
&lt;li&gt;водяные;&lt;/li&gt;
&lt;li&gt;системы тонкодисперсной воды;&lt;/li&gt;
&lt;li&gt;газовые.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Гроза</title>
      <link>https://yamadharma.github.io/ru/post/2006/07/12/groza/</link>
      <pubDate>Wed, 12 Jul 2006 10:06:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2006/07/12/groza/</guid>
      <description>&lt;p&gt;В воскресенье была гроза. Сработала система пожаротушения (замкнуло?). От Этого умерли все сервера на открытой стойке. В том числе и почта.&lt;/p&gt;
&lt;p&gt;В понедельник была гроза. Дома сгорел монитор.&lt;/p&gt;
&lt;p&gt;Почту ещё не поднял.&lt;/p&gt;
&lt;p&gt;Вот ссылочка:
&lt;a href=&#34;http://www.ivd.ru/document.xgi?id=4941&amp;amp;gid=393&amp;amp;hid=485&amp;amp;oid=485&#34;&gt;http://www.ivd.ru/document.xgi?id=4941&amp;amp;gid=393&amp;amp;hid=485&amp;amp;oid=485&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Цитата:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Недостатков тоже хватает. Во-первых, тушащий материал при взаимодействии с влагой дает щелочную (аэрозоли) или кислотную реакцию (порошки), что может приводить к коррозии металла, деструкции материалов, а также к выводу из строя электронной техники. Во-вторых, в момент срабатывания системы видимость в помещении снижается почти до нуля, что небезопасно для не успевших эвакуироваться людей. В-третьих, попадание порошков и аэрозолей в глаза или дыхательные пути вредно для здоровья. В-четвертых, порошки слеживаются, что ограничивает срок их хранения (необходима перезарядка или замена устройств тушения раз в 5 - 10 лет).&lt;/p&gt;
&lt;p&gt;Первые три недостатка обусловливают повышенные требования к надежности систем, в частности к защите от ложного срабатывания.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
