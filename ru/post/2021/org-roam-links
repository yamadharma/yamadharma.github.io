#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import re
import os

orgroamdir = "~/me/org/notes/"

def find_md_links(md):
    """Returns dict of links in markdown:
    'regular': [foo](some.url)
    'footnotes': [foo][3]

    [3]: some.url
    """
    # https://stackoverflow.com/a/30738268/2755116

    INLINE_LINK_RE = re.compile(r'\[([^\]]+)\]\(([^)]+)\)')
    FOOTNOTE_LINK_TEXT_RE = re.compile(r'\[([^\]]+)\]\[(\d+)\]')
    FOOTNOTE_LINK_URL_RE = re.compile(r'\[(\d+)\]:\s+(\S+)')

    links = list(INLINE_LINK_RE.findall(md))
    footnote_links = dict(FOOTNOTE_LINK_TEXT_RE.findall(md))
    footnote_urls = dict(FOOTNOTE_LINK_URL_RE.findall(md))

    footnotes_linking = []

    for key in footnote_links.keys():
        footnotes_linking.append((footnote_links[key], footnote_urls[footnote_links[key]]))

    return {'regular': links, 'footnotes': footnotes_linking}


def replace_md_links(md, f):
    """Replace links url to f(url)"""

    links = find_md_links(md)
    newmd = md

    for r in links['regular']:
        newmd = newmd.replace(r[1], f(r[1]))

    for r in links['footnotes']:
        newmd = newmd.replace(r[1], f(r[1]))

    return newmd

if __name__ == "__main__":
    filename = sys.argv[1]
    print(filename)
    fin = open(filename, "rt")
    filetext = fin.read()

    export_file_name_re = re.compile(r'#\+EXPORT_FILE_NAME:\s+\S+')
    relref_re = re.compile(r"{{< relref \"(.+)\" >}}")


    links = find_md_links(filetext)
    for mdlink in links['regular']:
        fulllink = mdlink[1]
        isrelref = relref_re.match(fulllink)
        if isrelref:
            linkpath = isrelref.group(1)
        else:
            # drop extention
            linkpath = os.path.splitext(fulllink)[0]
        # add extention
        md2org = linkpath + '.org'
        orgfile = os.path.expanduser(orgroamdir + md2org)
        if os.path.exists(orgfile):
            orgfiletext =  open(orgfile).read()
            export_file_name_text = export_file_name_re.findall(orgfiletext)
            print(export_file_name_text)
            export_file_name_link = export_file_name_text[0].split()            
            hugolink = "{{< relref \"" + export_file_name_link[1] + "\" >}}"
            if isrelref:
                filetext = filetext.replace("{{< relref \"" + linkpath + "\" >}}",hugolink)
            else:
                filetext = filetext.replace(linkpath + '.md',hugolink)

            
    fin.close()
    fin = open(filename, "wt")
    fin.write(filetext)
    fin.close()
    
