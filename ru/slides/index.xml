<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Slides | Д. С. Кулябов</title><link>https://yamadharma.github.io/ru/slides/</link><atom:link href="https://yamadharma.github.io/ru/slides/index.xml" rel="self" type="application/rss+xml"/><description>Slides</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>ru-ru</language><copyright>© 2024 Dmitry S. Kulyabov</copyright><lastBuildDate>Wed, 10 Jun 2020 12:27:25 +0300</lastBuildDate><item><title>Введение в операционную систему UNIX</title><link>https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/</link><pubDate>Wed, 10 Jun 2020 12:27:25 +0300</pubDate><guid>https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/</guid><description>&lt;h1 id="обзор-компьютерных-систем">Обзор компьютерных систем&lt;/h1>
&lt;hr>
&lt;h2 id="структурные-принципы">Структурные принципы&lt;/h2>
&lt;p>Современные компьютерные системы построены по трём принципам Джона фон
Неймана:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>программное управление&lt;/p>
&lt;/li>
&lt;li>
&lt;p>однородность памяти&lt;/p>
&lt;/li>
&lt;li>
&lt;p>адресность&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="основные-структурные-элементы-компьютера">Основные структурные элементы компьютера&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="computer_structure" srcset="
/ru/slides/courses/os-intro/lection01/computer_structure_hu15150925955208571824.webp 400w,
/ru/slides/courses/os-intro/lection01/computer_structure_hu13180020149179840750.webp 760w,
/ru/slides/courses/os-intro/lection01/computer_structure_hu14679185525854002456.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/computer_structure_hu15150925955208571824.webp"
width="588"
height="169"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="центральный-процессор">Центральный процессор&lt;/h1>
&lt;hr>
&lt;h2 id="центральный-процессор-1">Центральный процессор&lt;/h2>
&lt;ul>
&lt;li>извлекает программу из памяти&lt;/li>
&lt;li>декодирует&lt;/li>
&lt;li>исполняет машинные команды&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="псевдопараллелизм">Псевдопараллелизм&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>В каждый момент времени процессор может испонять только одну программу.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Так как число процессоров конечно, необходимы алгоритмы, позволяющие
чередовать исполнения процессов.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="псевдопараллелизм-1">Псевдопараллелизм&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="parallelism" srcset="
/ru/slides/courses/os-intro/lection01/parallelism_hu14362132420500911428.webp 400w,
/ru/slides/courses/os-intro/lection01/parallelism_hu1835967373228168795.webp 760w,
/ru/slides/courses/os-intro/lection01/parallelism_hu9132439465475559611.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/parallelism_hu14362132420500911428.webp"
width="471"
height="286"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="память">Память&lt;/h1>
&lt;hr>
&lt;h2 id="параметры-конфигурации-памяти">Параметры конфигурации памяти&lt;/h2>
&lt;ul>
&lt;li>объём&lt;/li>
&lt;li>быстродействие&lt;/li>
&lt;li>стоимость&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="иерархия-видов-памяти">Иерархия видов памяти&lt;/h2>
&lt;ul>
&lt;li>регистровая память хранит операнды команд&lt;/li>
&lt;li>кэш используется для хранения самых используемых участков памяти&lt;/li>
&lt;li>основная память хранит исполняющиеся программы&lt;/li>
&lt;li>внешняя память сохраняет данные и программы между запусками&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="иерархия-видов-памяти-1">Иерархия видов памяти&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="memory_hierarchy" srcset="
/ru/slides/courses/os-intro/lection01/memory_hierarchy_hu17192472650830872038.webp 400w,
/ru/slides/courses/os-intro/lection01/memory_hierarchy_hu7330822122659211716.webp 760w,
/ru/slides/courses/os-intro/lection01/memory_hierarchy_hu13006477509549925868.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/memory_hierarchy_hu17192472650830872038.webp"
width="369"
height="255"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="управление-вводом-выводом">Управление вводом-выводом&lt;/h1>
&lt;hr>
&lt;h2 id="взаимодействие-с-устройствами-ввода-вывода">Взаимодействие с устройствами ввода-вывода&lt;/h2>
&lt;ul>
&lt;li>программируемый ввод-вывод&lt;/li>
&lt;li>ввод-вывод с помощью прерываний&lt;/li>
&lt;li>прямой доступ к памяти (Direct Memory Access, DMA)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="назначение-операционной-системы">Назначение операционной системы&lt;/h1>
&lt;hr>
&lt;h2 id="операционная-система">Операционная система&lt;/h2>
&lt;p>Комплекс взаимосвязанных программ, который действует как интерфейс
между приложениями и пользователями с одной стороны и аппаратурой
компьютера с другой стороны.&lt;/p>
&lt;hr>
&lt;h2 id="операционная-система-1">Операционная система&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="os" srcset="
/ru/slides/courses/os-intro/lection01/os_hu4946374810459601456.webp 400w,
/ru/slides/courses/os-intro/lection01/os_hu6221745645067341883.webp 760w,
/ru/slides/courses/os-intro/lection01/os_hu2950684098136069930.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/os_hu4946374810459601456.webp"
width="760"
height="343"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="операционная-система-как-виртуальная-машина">Операционная система как виртуальная машина&lt;/h1>
&lt;hr>
&lt;h2 id="уровни-вычислительной-системы">Уровни вычислительной системы&lt;/h2>
&lt;ul>
&lt;li>программное и аппаратное обеспечение можно выстроить в виде иерархии&lt;/li>
&lt;li>каждый уровень представляет собой виртуальную машину&lt;/li>
&lt;li>интерфейсы виртуальной машины скрывают детали нижележащего уровня&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="уровни-вычислительной-системы-1">Уровни вычислительной системы&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="virtual_machine" srcset="
/ru/slides/courses/os-intro/lection01/virtual_machine_hu17965781096246110679.webp 400w,
/ru/slides/courses/os-intro/lection01/virtual_machine_hu16389594636668467978.webp 760w,
/ru/slides/courses/os-intro/lection01/virtual_machine_hu13089629339110330501.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/virtual_machine_hu17965781096246110679.webp"
width="448"
height="337"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="операционная-система-как-менеджер-ресурсов">Операционная система как менеджер ресурсов&lt;/h1>
&lt;hr>
&lt;h2 id="ресурсы-компьютера">Ресурсы компьютера&lt;/h2>
&lt;ul>
&lt;li>процессорное время&lt;/li>
&lt;li>основная память&lt;/li>
&lt;li>внешние устройства&lt;/li>
&lt;li>таймеры&lt;/li>
&lt;li>некоторые процедуры операционной системы&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="управление-ресурсами">Управление ресурсами&lt;/h2>
&lt;p>Ресурсы распределяются между процессами&lt;/p>
&lt;hr>
&lt;h2 id="критерии-эффективности">Критерии эффективности&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>пропускная способность&lt;/strong> &amp;mdash; число задач, выполненных за единицу времени&lt;/li>
&lt;li>&lt;strong>время реакции&lt;/strong> &amp;mdash; время, прошедшее с момента ввода команды до получения отклика системы&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="архитектура-операционной-системы">Архитектура операционной системы&lt;/h1>
&lt;hr>
&lt;h2 id="функции-операционной-системы">Функции операционной системы&lt;/h2>
&lt;ul>
&lt;li>управление процессами&lt;/li>
&lt;li>управление памятью&lt;/li>
&lt;li>управление файлами и внешними устройствами&lt;/li>
&lt;li>защита данных и администрирование&lt;/li>
&lt;li>интерфейс прикладного программирования&lt;/li>
&lt;li>пользовательский интерфейс&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="структура-операционной-системы">Структура операционной системы&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>ядро&lt;/strong> &amp;mdash; модули, выполняющие основные функции операционной системы&lt;/li>
&lt;li>&lt;strong>компоненты&lt;/strong>, реализующие дополнительные функции операционной системы (служебные программы, или утилиты)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="монолитная-операционная-система">Монолитная операционная система&lt;/h1>
&lt;hr>
&lt;h2 id="монолитное-ядро">Монолитное ядро&lt;/h2>
&lt;ul>
&lt;li>компонуется как одна программа&lt;/li>
&lt;li>работает в привилегированном режиме&lt;/li>
&lt;li>использующая быстрые переходы с одной процедуры на другую&lt;/li>
&lt;li>не требующие переключения из привилегированного режима в
пользовательский и наоборот&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Переход из пользовательского режима в режим ядра осуществляется через
системные вызовы &amp;mdash; интерфейс ядра операционной системы&lt;/p>
&lt;hr>
&lt;h2 id="структура-монолитного-ядра-операционной-системы">Структура монолитного ядра операционной системы&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="monolith_kernel" srcset="
/ru/slides/courses/os-intro/lection01/monolith_kernel_hu4793723613464894477.webp 400w,
/ru/slides/courses/os-intro/lection01/monolith_kernel_hu15572035132441599404.webp 760w,
/ru/slides/courses/os-intro/lection01/monolith_kernel_hu14586992795985726170.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/monolith_kernel_hu4793723613464894477.webp"
width="597"
height="257"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="микроядерная-операционная-система">Микроядерная операционная система&lt;/h1>
&lt;hr>
&lt;h2 id="микроядро">Микроядро&lt;/h2>
&lt;ul>
&lt;li>работает в привилегированном режиме&lt;/li>
&lt;li>выполняет только минимум функций по управлению аппаратурой&lt;/li>
&lt;li>высокоуровневые функции операционной системы выполняются
специализированными компонентами &amp;mdash; серверами, работающими в
пользовательском режиме&lt;/li>
&lt;li>управление и обмен данными при этом осуществляется через передачу
сообщений&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="микроядро-1">Микроядро&lt;/h2>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="micro_kernel" srcset="
/ru/slides/courses/os-intro/lection01/micro_kernel_hu16865474276964808394.webp 400w,
/ru/slides/courses/os-intro/lection01/micro_kernel_hu3945566786851930108.webp 760w,
/ru/slides/courses/os-intro/lection01/micro_kernel_hu5568250069313839334.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/micro_kernel_hu16865474276964808394.webp"
width="626"
height="238"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="история-unix">История UNIX&lt;/h1>
&lt;hr>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="unix_history-simple" srcset="
/ru/slides/courses/os-intro/lection01/unix_history-simple_hu15408857886047019422.webp 400w,
/ru/slides/courses/os-intro/lection01/unix_history-simple_hu9709525729960764255.webp 760w,
/ru/slides/courses/os-intro/lection01/unix_history-simple_hu10763795355332249535.webp 1200w"
src="https://yamadharma.github.io/ru/slides/courses/os-intro/lection01/unix_history-simple_hu15408857886047019422.webp"
width="760"
height="490"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;hr>
&lt;h1 id="классификация-операционных-систем-по-назначению">Классификация операционных систем по назначению&lt;/h1>
&lt;hr>
&lt;h2 id="системы-реального-времени">Системы реального времени&lt;/h2>
&lt;ul>
&lt;li>сторого регламентированное время отклика на внешние события&lt;/li>
&lt;li>одновременная обработка &amp;mdash; даже если одновременно происходит
несколько событий, реакция системы на них не должна запаздывать&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="системы-жёсткого-реального-времени">Системы жёсткого реального времени&lt;/h2>
&lt;ul>
&lt;li>недопустимость никаких задержек ни при каких условиях&lt;/li>
&lt;li>бесполезность результатов при опоздании&lt;/li>
&lt;li>катастрофа при задержке реакции&lt;/li>
&lt;li>цена опоздания бесконечно велика&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="система-мягкого-реального-времени">Система мягкого реального времени&lt;/h2>
&lt;ul>
&lt;li>за опоздание результатов приходится платить&lt;/li>
&lt;li>снижение производительности системы, вызванное запаздыванием реакций, приемлемо&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="встраиваемые-системы">Встраиваемые системы&lt;/h2>
&lt;ul>
&lt;li>работают на специфическом аппаратном обеспечении&lt;/li>
&lt;li>обладают некоторыми требованиями к времени отклика системы&lt;/li>
&lt;li>минимизируют потребляемые ресурсы&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="операционные-системы-для-супер-компьютеров">Операционные системы для супер-компьютеров&lt;/h2>
&lt;ul>
&lt;li>особенно важны вопросы производительности и скорости обмена между элементами системы&lt;/li>
&lt;li>самыми распространёнными среди сверхпроизводительных систем являются модификации операционной системы Linux&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="операционные-системы-для-серверов">Операционные системы для серверов&lt;/h2>
&lt;ul>
&lt;li>важна стабильность работы&lt;/li>
&lt;li>важна безопасность&lt;/li>
&lt;li>важна производительность&lt;/li>
&lt;li>не важен интерфейс пользователя&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="операционные-системы-для-домашних-и-офисных-компьютеров">Операционные системы для домашних и офисных компьютеров&lt;/h2>
&lt;ul>
&lt;li>важен удобный пользовательский интерфейс&lt;/li>
&lt;li>важна поддержка широкого круга устройств для персональных компьютеров&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="исследовательские-операционные-системы">Исследовательские операционные системы&lt;/h2>
&lt;ul>
&lt;li>GNU Hurd&lt;/li>
&lt;li>L4&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="резюме">Резюме&lt;/h1>
&lt;hr>
&lt;h2 id="резюме-1">Резюме&lt;/h2>
&lt;ul>
&lt;li>Операционные системы существуют в рамках информационно-вычислительных систем&lt;/li>
&lt;li>Компьютеры построены в соответствии с принципами фон Неймана: центральный процессор, основная память и устройства ввода-вывода&lt;/li>
&lt;li>Операционная система объединяет пользователей, программы и аппаратуру компьютера&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>Две основные функции операционной системы:
&lt;ul>
&lt;li>предоставление виртуальной машины&lt;/li>
&lt;li>управление ресурсами компьютера&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Операционная система состоит из модулей&lt;/li>
&lt;li>Ядро &amp;mdash; основа всей операционной системы&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>Два типа ядер
&lt;ul>
&lt;li>монолитные&lt;/li>
&lt;li>микроядра&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>Выделяют операционные системы
&lt;ul>
&lt;li>реального времени&lt;/li>
&lt;li>для встраиваемых систем&lt;/li>
&lt;li>для супер-компьютеров&lt;/li>
&lt;li>для серверов&lt;/li>
&lt;li>для домашних и офисных компьютеров&lt;/li>
&lt;li>исследовательские&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="дополнительные-материалы">Дополнительные материалы&lt;/h1>
&lt;hr>
&lt;h2 id="дополнительные-материалы-1">Дополнительные материалы&lt;/h2>
&lt;ol>
&lt;li>Курячий Г. В. Операционная система UNIX. &amp;mdash; М.: Интуит.Ру, 2004. &amp;mdash; 292 с.: ил.&lt;/li>
&lt;li>МакКузик М. К., Невилл-Нил Дж. В. FreeBSD: архитектура и реализация. &amp;mdash; М.: КУДИЦ-ОБРАЗ, 2006. &amp;mdash; 800 с.&lt;/li>
&lt;li>Олифер В. Г., Олифер Н. А. Сетевые операционные системы. &amp;mdash; СПб.: Питер, 2005. &amp;mdash; 539 с.: ил.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;ol start="4">
&lt;li>Рэймонд Э. С. Искусство программирования для UNIX. &amp;mdash; М.: Издательский дом «Вильямс», 2005. &amp;mdash; 544 стр.: ил.&lt;/li>
&lt;li>Вильям Столлингс Операционные системы, 4-е издание. &amp;mdash; М.: Издательский дом «Вильямс», 2002. &amp;mdash; 848 с.: ил.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h1 id="вопросы-для-самоконтроля">Вопросы для самоконтроля&lt;/h1>
&lt;hr>
&lt;h2 id="вопросы-для-самоконтроля-1">Вопросы для самоконтроля&lt;/h2>
&lt;ol>
&lt;li>Каково назначение операционной системы? Почему говорят об
операционной системе как виртуальной машине? Какими ресурсами и как
управляет операционная система?&lt;/li>
&lt;/ol>
&lt;hr>
&lt;ol start="2">
&lt;li>Архитектура операционной системы: что такое ядро и прикладные
программы? Чем отличаются монолитные и микроядерные системы?&lt;/li>
&lt;/ol>
&lt;hr>
&lt;ol start="3">
&lt;li>Какие можно выделить классы операционных систем? В чём заключаются
их отличия?&lt;/li>
&lt;/ol></description></item><item><title>Structural approach to the deep learning method</title><link>https://yamadharma.github.io/ru/slides/2019-conf-nec-semantic/</link><pubDate>Thu, 03 Oct 2019 10:15:00 +0200</pubDate><guid>https://yamadharma.github.io/ru/slides/2019-conf-nec-semantic/</guid><description>&lt;h1 id="technologies">Technologies&lt;/h1>
&lt;hr>
&lt;h2 id="machine-learning-problems">Machine learning problems&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Machine learning and neural network technologies are overrated.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Machine learning methods reduce the culture of analytical thinking.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>
&lt;p>To achieve results in projects involving data analysis, knowledge of the subject is more important than deep knowledge of Machine learning.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The profession of Data Scientist is greatly overrated, generalists are gradually disappearing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="technology-overrated">Technology overrated&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Most of the problems that can now be solved with the help of modern methods of data analysis and neural networks have been solved for a long time.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The tasks are essentially not new. Analysts who understand the subject area participate in their decision.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>
&lt;p>Often, machine learning algorithms in such systems are already in place.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To do something fundamentally new and really applicable here is extremely difficult.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>“The apples that fell from the tree are already harvested.”&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="analytical-thinking">Analytical thinking&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>You need to deeply understand the subject area:&lt;/p>
&lt;ul>
&lt;li>what data is needed;&lt;/li>
&lt;li>are any predictive algorithms needed;&lt;/li>
&lt;li>is it possible to verify the prediction.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Requires an analytical approach.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Requires a culture of working with data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Requires the ability to put hypotheses.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="more-important-knowledge-of-the-subject">More important knowledge of the subject&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>The disadvantages of a typical Data Scientists include:&lt;/p>
&lt;ul>
&lt;li>almost do not ask any questions;&lt;/li>
&lt;li>data and so will tell about everything;&lt;/li>
&lt;li>use some arbitrary data;&lt;/li>
&lt;li>They say that they built some kind of model.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>The result cannot be verified.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="universal-specialists-will-no-longer-be">Universal specialists will no longer be&lt;/h2>
&lt;p>IMHO, an effective Data Scientist&lt;/p>
&lt;ul>
&lt;li>can not be a generalist;&lt;/li>
&lt;li>must be an expert in the subject area.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 class="standout" id="heading">&lt;/h2>
&lt;p>Hype is over&lt;/p>
&lt;p>But&lt;/p>
&lt;p>Data science is not rocket science&lt;/p>
&lt;hr>
&lt;h1 id="project-structure">Project structure&lt;/h1>
&lt;hr>
&lt;h2 id="how-the-data-analysis-project-works">How the data analysis project works&lt;/h2>
&lt;ul>
&lt;li>Project requirements&lt;/li>
&lt;li>Project data&lt;/li>
&lt;li>Development and implementation of the project&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="requirements">Requirements&lt;/h2>
&lt;ul>
&lt;li>We initially do not know anything about what data we have.&lt;/li>
&lt;li>We need to understand the statement of the problem.&lt;/li>
&lt;li>We must understand what result is required to get from the project.&lt;/li>
&lt;li>We must decide by what method the problem can be solved.&lt;/li>
&lt;li>We need to set data requirements.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="data">Data&lt;/h2>
&lt;ul>
&lt;li>Search for data to solve the problem:
&lt;ul>
&lt;li>we will find out what sources are available to us;&lt;/li>
&lt;li>we form a sample with which we will continue to work.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>
&lt;p>Data research:&lt;/p>
&lt;ul>
&lt;li>explore the central position and variability;&lt;/li>
&lt;li>identify correlations between signs;&lt;/li>
&lt;li>build distribution schedules.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Data preparation.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="development-and-implementation">Development and implementation&lt;/h2>
&lt;ul>
&lt;li>Model development.&lt;/li>
&lt;li>Software implementation of the model.&lt;/li>
&lt;li>Run training set.&lt;/li>
&lt;li>Testing on a test sample.&lt;/li>
&lt;li>Verification of the result.&lt;/li>
&lt;li>Loop (you can start all over again).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="requirements-1">Requirements&lt;/h1>
&lt;hr>
&lt;h2 id="understanding-of-the-task">Understanding of the task&lt;/h2>
&lt;ul>
&lt;li>It is necessary to clearly define the purpose of the study.&lt;/li>
&lt;li>What is the problem?&lt;/li>
&lt;li>What metrics will measure success?&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="the-choice-of-analytical-approach">The choice of analytical approach&lt;/h2>
&lt;ul>
&lt;li>If you need a yes / no answer, a Bayesian classifier is suitable.&lt;/li>
&lt;li>If you need an answer in the form of a numerical sign, then regression models are suitable.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>If it is necessary to determine the probabilities of certain outcomes, it is necessary to use a predictive model.&lt;/li>
&lt;li>If you need to identify relationships, a descriptive approach is used.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="data-requirements">Data requirements&lt;/h2>
&lt;ul>
&lt;li>What data will give the desired answer?&lt;/li>
&lt;li>Data requirements:
&lt;ul>
&lt;li>content;&lt;/li>
&lt;li>data formats;&lt;/li>
&lt;li>data sources.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="data-1">Data&lt;/h1>
&lt;hr>
&lt;h2 id="data-collection">Data collection&lt;/h2>
&lt;ul>
&lt;li>We collect data from available sources.&lt;/li>
&lt;li>We make sure that the sources:
&lt;ul>
&lt;li>available;&lt;/li>
&lt;li>reliable;&lt;/li>
&lt;li>can be used to obtain the required data in the required quality.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>It is necessary to understand whether we received the data we wanted.&lt;/li>
&lt;li>Revision of data requirements.&lt;/li>
&lt;li>Deciding on the need for additional data.&lt;/li>
&lt;li>Finding a replacement for missing data.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="data-analysis">Data analysis&lt;/h2>
&lt;ul>
&lt;li>Are the collected data representative of the problem?&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>Descriptive statistics apply to all variables that will be used in the selected model:
&lt;ul>
&lt;li>the central position is studied (middle, median, mode);&lt;/li>
&lt;li>emissions are searched for and variability is estimated (variance, standard deviation);&lt;/li>
&lt;li>histograms of the distribution of variables are built;&lt;/li>
&lt;li>other visualization tools are used (for example, boxes with a mustache).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="data-analysis-1">Data analysis&lt;/h2>
&lt;ul>
&lt;li>Correlations between variables are calculated.&lt;/li>
&lt;li>If there are significant correlations between the variables, some variables may be discarded as redundant.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="data-preparation">Data preparation&lt;/h2>
&lt;p>Data collection and analysis + data preparation = 70%&amp;ndash;90% of the project time.&lt;/p>
&lt;hr>
&lt;h2 id="data-preparation-1">Data preparation&lt;/h2>
&lt;ul>
&lt;li>We process the data in such a way that it is convenient to work with them:
&lt;ul>
&lt;li>remove duplicates;&lt;/li>
&lt;li>process missing or incorrect data;&lt;/li>
&lt;li>we check and correct formatting errors.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>We are designing a set of factors that machine learning will work with in the next steps:
&lt;ul>
&lt;li>feature extraction;&lt;/li>
&lt;li>feature selection.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>Errors at this stage can be critical.
&lt;ul>
&lt;li>Excessive number of characteristics = model retrained.&lt;/li>
&lt;li>Insufficient number of signs = model is under-trained.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="development-and-implementation-1">Development and implementation&lt;/h1>
&lt;hr>
&lt;h2 id="model-construction">Model construction&lt;/h2>
&lt;p>When the type of model is defined and there is a training sample, we develop the model and test it on a set of features.&lt;/p>
&lt;hr>
&lt;h2 id="model-application">Model application&lt;/h2>
&lt;ul>
&lt;li>Calculations alternate with model setup.&lt;/li>
&lt;li>Does the constructed model meet the original task?&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Diagnostic measurements are taken to help determine if the model works as intended.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The statistical significance of the hypothesis is checked.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It is necessary to make sure that the data in the model are correctly used and interpreted and the result obtained does not go beyond the limits of statistical error.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="implementation">Implementation&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Implementation is carried out in stages:&lt;/p>
&lt;ul>
&lt;li>a limited group of users;&lt;/li>
&lt;li>test environment.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Feedback system.&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>