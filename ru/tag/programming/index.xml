<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming | Д. С. Кулябов</title>
    <link>https://yamadharma.github.io/ru/tag/programming/</link>
      <atom:link href="https://yamadharma.github.io/ru/tag/programming/index.xml" rel="self" type="application/rss+xml" />
    <description>programming</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><copyright>© 2021 Dmitry S. Kulyabov</copyright><lastBuildDate>Sun, 17 Jan 2021 20:06:00 +0300</lastBuildDate>
    <image>
      <url>https://yamadharma.github.io/images/icon_hu0a661dd90139895e92e2f18ae9404407_611148_512x512_fill_lanczos_center_2.png</url>
      <title>programming</title>
      <link>https://yamadharma.github.io/ru/tag/programming/</link>
    </image>
    
    <item>
      <title>Практический сценарий использования git</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/</link>
      <pubDate>Sun, 17 Jan 2021 20:06:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/</guid>
      <description>&lt;p&gt;Предлагается следующий практический сценарий использование git.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#используемые-стандарты-и-программные-продукты&#34;&gt;Используемые стандарты и программные продукты&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#установка-программного-обеспечения&#34;&gt;Установка программного обеспечения&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#установка-node-dot-js&#34;&gt;Установка Node.js&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#установка-git-flow&#34;&gt;Установка git-flow&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#общепринятые-коммиты&#34;&gt;Общепринятые коммиты&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#commitizen&#34;&gt;commitizen&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#настройка-git&#34;&gt;Настройка git&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#практический-сценарий-использования-git&#34;&gt;Практический сценарий использования git&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#структура-лабораторной-работы&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/16/laboratory-work-structure/&#34;&gt;Структура лабораторной работы&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;используемые-стандарты-и-программные-продукты&#34;&gt;Используемые стандарты и программные продукты&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Стандарт Git Flow (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/git-workflow/&#34;&gt;Варианты Git Workflow&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Стандарт &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Стандарт &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;установка-программного-обеспечения&#34;&gt;Установка программного обеспечения&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Для Windows используется пакетный менеджер Chocolatey (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/18/package-manager-windows-chocolatey/&#34;&gt;Пакетный менеджер для Windows. Chocolatey&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Для MacOS используется пакетный менеджер &lt;a href=&#34;https://brew.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Homebrew&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;установка-node-dot-js&#34;&gt;Установка Node.js&lt;/h3&gt;
&lt;p&gt;На Node.js базируется программное обеспечение для семантического версионирования и общепринятых коммитов.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gentoo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;emerge nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt-get install nodejs
apt-get install yarn
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;choco -y install nodejs
choco -y install yarn
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MacOS&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install node
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;установка-git-flow&#34;&gt;Установка git-flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gentoo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;emerge dev-vcs/git-flow
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;apt-get install git-flow
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows
Git-flow входит в состав пакета git.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;choco -y install git
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;общепринятые-коммиты&#34;&gt;Общепринятые коммиты&lt;/h3&gt;
&lt;h4 id=&#34;commitizen&#34;&gt;commitizen&lt;/h4&gt;
&lt;p&gt;Данная программа используется для помощи в форматировании коммитов.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn global add commitizen
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;настройка-git&#34;&gt;Настройка git&lt;/h2&gt;
&lt;h2 id=&#34;практический-сценарий-использования-git&#34;&gt;Практический сценарий использования git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Рабочий каталог будем обозначать как &lt;code&gt;workdir&lt;/code&gt;. Вначале нужно перейти в этот каталог:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd workdir
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Инициализация системы git:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Конфигурация для пакетов Node.js&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Необходимо заполнить несколько параметров пакета.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Название пакета.&lt;/li&gt;
&lt;li&gt;Лицензия пакета. Список лицензий для npm: &lt;a href=&#34;https://spdx.org/licenses/&#34;&gt;https://spdx.org/licenses/&lt;/a&gt;. Предлагается выбирать лицензию &lt;code&gt;CC-BY-4.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сконфигурить формат коммитов.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install commitizen
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;структура-лабораторной-работы&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/16/laboratory-work-structure/&#34;&gt;Структура лабораторной работы&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Исходный код программ, отчёты по лабораторным работам и т.д. размещаются в системе контроля версий git (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/&#34;&gt;Практический сценарий использования git&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование. Conventional Changelog</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</link>
      <pubDate>Sat, 16 Jan 2021 17:41:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</guid>
      <description>&lt;p&gt;Пакет &lt;em&gt;Conventional Changelog&lt;/em&gt; представляет собой набор утилит. Их можно использовать как вместе, так и по отдельности. Также можно задавать свой рабочий процесс.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#репозитории&#34;&gt;Репозитории&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#список-утилит&#34;&gt;Список утилит&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#настройка-утилит&#34;&gt;Настройка утилит&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-commits-detector&#34;&gt;conventional-commits-detector&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#standard-changelog&#34;&gt;standard-changelog&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#conventional-changelog-cli&#34;&gt;conventional-changelog-cli&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#commitizen&#34;&gt;commitizen&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#установка&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#использование&#34;&gt;Использование&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#примерный-рабочий-процесс&#34;&gt;Примерный рабочий процесс&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;репозитории&#34;&gt;Репозитории&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Основной монорепозиторий: &lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog&#34;&gt;https://github.com/conventional-changelog/conventional-changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;список-утилит&#34;&gt;Список утилит&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;conventional-changelog-cli &amp;mdash; утилита командной строки.&lt;/li&gt;
&lt;li&gt;standard-changelog &amp;mdash; утилита командной строки для формата коммитов &lt;em&gt;angular&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;conventional-github-releaser &amp;mdash; создание нового релиза на GitHub из метаданных git.&lt;/li&gt;
&lt;li&gt;conventional-recommended-bump &amp;mdash; получить рекомендованную версию на основе обычных коммитов.&lt;/li&gt;
&lt;li&gt;conventional-commits-detector &amp;mdash; определить, какое соглашение о коммитах использует репозиторий.&lt;/li&gt;
&lt;li&gt;commitizen &amp;mdash; утилита, задающая интерфейс к написанию коммитов.&lt;/li&gt;
&lt;li&gt;commitlint &amp;mdash; проверка правильности текста коммита.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;настройка-утилит&#34;&gt;Настройка утилит&lt;/h2&gt;
&lt;h3 id=&#34;conventional-commits-detector&#34;&gt;conventional-commits-detector&lt;/h3&gt;
&lt;p&gt;Определить, какое соглашение о коммитах используется в репозитории.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-commits-detector
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx conventional-commits-detector
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В результате получим возможный тип коммитов.&lt;/p&gt;
&lt;h3 id=&#34;standard-changelog&#34;&gt;standard-changelog&lt;/h3&gt;
&lt;p&gt;Генерация журнала изменений с использованием соглашений о коммитах &lt;em&gt;angular&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] standard-changelog
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;p&gt;Параметры запуска можно посмотреть следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Генерация файла журнала выполняется следующим образом:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npx standard-changelog -i CHANGELOG.md -s
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;conventional-changelog-cli&#34;&gt;conventional-changelog-cli&lt;/h3&gt;
&lt;p&gt;Создаёт журнал изменений из метаданных git (если соглашение о коммитах отлично от &lt;em&gt;angular&lt;/em&gt;).&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] conventional-changelog-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если инструмент используется впервые и нужно учесть все предыдущие журналы изменений, можно выполнить команду:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;commitizen&#34;&gt;commitizen&lt;/h3&gt;
&lt;p&gt;Утилита, реализующая интерактивный процесс для генерации коммита.&lt;/p&gt;
&lt;h4 id=&#34;установка&#34;&gt;Установка&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;yarn [global] add [--dev] commitizen
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;использование&#34;&gt;Использование&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;примерный-рабочий-процесс&#34;&gt;Примерный рабочий процесс&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Внести изменения.&lt;/li&gt;
&lt;li&gt;Зафиксировать эти изменения.&lt;/li&gt;
&lt;li&gt;Причина, по которой вы должны зафиксировать изменения и создать метку после
выполнения &lt;code&gt;standard-changelog&lt;/code&gt; заключается в том, что CHANGELOG.md должен быть
включён в новую версию.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/&#34;&gt;Conventional Changelog&lt;/a&gt; является комплексным решением по управлению коммитами и генерации журнала изменений.  Он содержит набор утилит, которые можно использовать по-отдельности.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование. Semantic-release</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</link>
      <pubDate>Fri, 15 Jan 2021 17:33:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</guid>
      <description>&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/semantic-release/semantic-release&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fully automated version management and package publishing&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/&#34;&gt;Semantic-release&lt;/a&gt; автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Варианты Git Workflow</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/10/git-workflow/</link>
      <pubDate>Sun, 10 Jan 2021 19:17:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/10/git-workflow/</guid>
      <description>&lt;p&gt;Варианты построения рабочего процесса на базе git.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#github-flow&#34;&gt;Github flow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#git-flow&#34;&gt;Git flow&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;github-flow&#34;&gt;Github flow&lt;/h2&gt;
&lt;p&gt;Есть мастер. Когда необходимо что-то добавить, делается новая ветка: `feature branch`, `bugfix branch` etc.&lt;/p&gt;
&lt;h2 id=&#34;git-flow&#34;&gt;Git flow&lt;/h2&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/git-workflow/&#34;&gt;Варианты Git Workflow&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Синтаксис языка Markdown</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/10/markdown-syntax/</link>
      <pubDate>Sun, 10 Jan 2021 19:05:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/10/markdown-syntax/</guid>
      <description>&lt;p&gt;Общая информация по языку Markdown.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#варианты-языка-markdown&#34;&gt;Варианты языка Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;варианты-языка-markdown&#34;&gt;Варианты языка Markdown&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Генератор статистических сайтов &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/hugo-site-generator/&#34;&gt;Генератор статических сайтов Hugo&lt;/a&gt; использует вариант Markdown на основе библиотеки &lt;a href=&#34;https://github.com/yuin/goldmark/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Goldmark&lt;/a&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/&#34;&gt;Синтаксис markdown для генератора сайтов Hugo&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Синтаксис языка Markdown &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/markdown-syntax/&#34;&gt;Синтаксис языка Markdown&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tiller M. M. - Modelica by Example</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/</link>
      <pubDate>Sun, 10 Jan 2021 15:14:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/</guid>
      <description>&lt;p&gt;Tiller M. M. Modelica by Example. &amp;mdash; URL: &lt;a href=&#34;http://libgen.li/item/index.php?md5=2795CB685C70592E3814F1E18BC62C47&#34;&gt;http://libgen.li/item/index.php?md5=2795CB685C70592E3814F1E18BC62C47&lt;/a&gt;, &lt;a href=&#34;https://mbe.modelica.university/&#34;&gt;https://mbe.modelica.university/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Книга известного специалиста по языку Modelica.&lt;/li&gt;
&lt;li&gt;Книга описывает сам язык Modelica, а не применение его для моделирования.&lt;/li&gt;
&lt;li&gt;Представлен ряд нетривиальных особенностей языка Modelica.&lt;/li&gt;
&lt;li&gt;На сайте &lt;a href=&#34;https://mbe.modelica.university/&#34;&gt;https://mbe.modelica.university/&lt;/a&gt; выложена html-версия книги.&lt;/li&gt;
&lt;li&gt;Если Вам необходима pdf-версия, вы можете купить её на этом же сайте.&lt;/li&gt;
&lt;li&gt;Книга не обновлялась с 2019 года.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;прочитанные-книги-dot-2021&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/06/books-2021/&#34;&gt;Прочитанные книги. 2021&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;[2021-01-09 Сб 21:39] &lt;/span&gt;&lt;/span&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/&#34;&gt;Tiller M. M. - Modelica by Example&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;книги-dot-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/books-programming/&#34;&gt;Книги. Программирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;[2021-01-09 Сб 21:39] &lt;/span&gt;&lt;/span&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/&#34;&gt;Tiller M. M. - Modelica by Example&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Книги. Программирование</title>
      <link>https://yamadharma.github.io/ru/post/2021/01/10/books-programming/</link>
      <pubDate>Sun, 10 Jan 2021 15:01:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2021/01/10/books-programming/</guid>
      <description>&lt;p&gt;Список книг по программированию.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#book-list&#34;&gt;Список книг&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#языки-программирования&#34;&gt;Языки программирования&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#modelica&#34;&gt;Modelica&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#прочитанные-книги&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/15/books/&#34;&gt;Прочитанные книги&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;book-list&#34;&gt;Список книг&lt;/h2&gt;
&lt;h3 id=&#34;языки-программирования&#34;&gt;Языки программирования&lt;/h3&gt;
&lt;h4 id=&#34;modelica&#34;&gt;Modelica&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;timestamp-wrapper&#34;&gt;&lt;span class=&#34;timestamp&#34;&gt;[2021-01-09 Сб 21:39] &lt;/span&gt;&lt;/span&gt; &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/&#34;&gt;Tiller M. M. - Modelica by Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;прочитанные-книги&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/15/books/&#34;&gt;Прочитанные книги&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/books-programming/&#34;&gt;Программирование&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacs</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/24/emacs/</link>
      <pubDate>Thu, 24 Dec 2020 16:23:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/24/emacs/</guid>
      <description>&lt;p&gt;Материалы по Emacs.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;&lt;/nav&gt;
&lt;/details&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/03/emacs-basics/&#34;&gt;Emacs. Основы работы&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Написание кода для конфигурирования Emacs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Работа с почтой (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/23/emacs-mail/&#34;&gt;Emacs. Почта&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Emacs. Почта. GNUS</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/</link>
      <pubDate>Mon, 21 Dec 2020 19:44:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/</guid>
      <description>&lt;p&gt;Gnus является программой для чтения новостей. Также он может работать и с почтой.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#аутентификация&#34;&gt;Аутентификация&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#парольная-аутентификация&#34;&gt;Парольная аутентификация&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#конфигурационные-файлы&#34;&gt;Конфигурационные файлы&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#разрешения&#34;&gt;Разрешения&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#формат-файла-паролей&#34;&gt;Формат файла паролей&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#шифрование-файла-паролей&#34;&gt;Шифрование файла паролей&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#настройка-подключения-к-google&#34;&gt;Настройка подключения к Google&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#чтение-сообщений&#34;&gt;Чтение сообщений&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#emacs-dot-почта&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/23/emacs-mail/&#34;&gt;Emacs. Почта&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;аутентификация&#34;&gt;Аутентификация&lt;/h2&gt;
&lt;h3 id=&#34;парольная-аутентификация&#34;&gt;Парольная аутентификация&lt;/h3&gt;
&lt;h4 id=&#34;конфигурационные-файлы&#34;&gt;Конфигурационные файлы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.authinfo.gpg&lt;/code&gt; - зашифрованный;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.authinfo&lt;/code&gt; - не зашифрованный;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.netrc&lt;/code&gt; - устаревший вариант.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;разрешения&#34;&gt;Разрешения&lt;/h4&gt;
&lt;p&gt;Установите права только на чтение и запись для пользователя:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;chmod 600 ~/.authinfo.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;формат-файла-паролей&#34;&gt;Формат файла паролей&lt;/h4&gt;
&lt;p&gt;Файл имеет следующий формат:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;machine HOST login NAME password VALUE port NUMBER
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если имеется несколько учётных записей на одном сервере (например, на gmail), вместо имени хоста можно использовать имя профиля:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-config&#34;&gt;machine PROFILE login NAME password VALUE port NUMBER
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;шифрование-файла-паролей&#34;&gt;Шифрование файла паролей&lt;/h4&gt;
&lt;p&gt;Для безопасности следует зашифровать файл паролей (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Зашифровать файл:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -c .authinfo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --symmetric .authinfo
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Расшифровать файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --decrypt-files .authinfo.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;настройка-подключения-к-google&#34;&gt;Настройка подключения к Google&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/25/mail-google-connect/&#34;&gt;Почта. Подключение к Google&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;чтение-сообщений&#34;&gt;Чтение сообщений&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Введите &lt;code&gt;M-x gnus&lt;/code&gt; для загрузки Gnus.&lt;/li&gt;
&lt;li&gt;Gnus подключается к серверу, отображает список групп (почтовые папки отображаются как группы).&lt;/li&gt;
&lt;li&gt;Gnus также указывает количество непрочитанных сообщений в каждой группе.&lt;/li&gt;
&lt;li&gt;Нажмите &lt;code&gt;RET&lt;/code&gt; (&lt;code&gt;gnus-group-select-group&lt;/code&gt;), чтобы просмотреть сообщения в группе.&lt;/li&gt;
&lt;li&gt;После этого Gnus переходит в сводное представление для этой группы.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id=&#34;table--gnus-summary-view&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;&lt;a href=&#34;#table--gnus-summary-view&#34;&gt;&amp;#1058;&amp;#1072;&amp;#1073;&amp;#1083;&amp;#1080;&amp;#1094;&amp;#1072; 1&lt;/a&gt;&lt;/span&gt;:
  Сочетания клавиш для чтения сообщений Gnus
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Описание&lt;/th&gt;
&lt;th&gt;Комбинация клавиш&lt;/th&gt;
&lt;th&gt;Команда&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Отображает выбранное сообщение или прокручивает отображаемое сообщение вниз&lt;/td&gt;
&lt;td&gt;RET&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­scroll­up&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Показать следующую страницу выбранного сообщения или перейти к следующему непрочитанному сообщению&lt;/td&gt;
&lt;td&gt;SPC&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­next­page&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Показать предыдущую страницу выбранного сообщения&lt;/td&gt;
&lt;td&gt;&lt;backspace&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­prev­page&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ответить автору сообщения, процитировав исходное сообщение&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­reply­withoriginal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ответить автору сообщения, но не цитировать исходное сообщение&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­reply&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ответить всем, процитировав исходное сообщение&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­followup­withoriginal&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ответить всем, но не цитировать исходное сообщение&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­followup&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Написать сообщение&lt;/td&gt;
&lt;td&gt;m&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­mail­otherwindow&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Удалить текущее сообщение&lt;/td&gt;
&lt;td&gt;B DEL&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­delete­article&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Переместить текущее сообщение в другую группу&lt;/td&gt;
&lt;td&gt;B m&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­move­article&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Выйти из текущей группы и вернуться к экрану выбора группы&lt;/td&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;&lt;code&gt;gnus­summary­exit&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;emacs-dot-почта&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/23/emacs-mail/&#34;&gt;Emacs. Почта&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/&#34;&gt;Emacs. Почта. GNUS&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Соглашения о кодировании</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</link>
      <pubDate>Sun, 20 Dec 2020 16:10:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</guid>
      <description>&lt;p&gt;Общие положения соглашений о кодировании.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#цели-правил-кодирования&#34;&gt;Цели правил кодирования&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#соглашения-об-именовании&#34;&gt;Соглашения об именовании&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#именование-переменных&#34;&gt;Именование переменных&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#предикаты&#34;&gt;Предикаты&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#разное&#34;&gt;Разное&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#количество&#34;&gt;Количество&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#отступы&#34;&gt;Отступы&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#комментарии&#34;&gt;Комментарии&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#соглашение-о-кодировании-dot-emacs-lisp&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;цели-правил-кодирования&#34;&gt;Цели правил кодирования&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Единый стиль оформления кода во всем проекте.&lt;/li&gt;
&lt;li&gt;Визуальное выделение наиболее значимых частей.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;соглашения-об-именовании&#34;&gt;Соглашения об именовании&lt;/h2&gt;
&lt;h3 id=&#34;именование-переменных&#34;&gt;Именование переменных&lt;/h3&gt;
&lt;p&gt;Существует несколько популярных соглашений об именования переменных:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Верблюжья нотация (&lt;code&gt;CamelCase&lt;/code&gt;): &lt;code&gt;MyClass&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Змеиная нотация (&lt;code&gt;snake_case&lt;/code&gt;): &lt;code&gt;my_const&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Шашлычная нотация (&lt;code&gt;kebab-case&lt;/code&gt;): &lt;code&gt;my-data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BD%D0%B3%D0%B5%D1%80%D1%81%D0%BA%D0%B0%D1%8F%5F%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Венгерская нотация&lt;/a&gt; - соглашение об именовании идентификаторов (переменных и функций), которое сводится к кодированию типов данных прямо в название: &lt;code&gt;userArray&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Нотация Cobol: &lt;code&gt;COBOL-CASE&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;предикаты&#34;&gt;Предикаты&lt;/h3&gt;
&lt;p&gt;Предикат - это функция-проверка, она всегда возвращает либо &lt;code&gt;true&lt;/code&gt;, либо &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Предваряются префиксом &lt;code&gt;is&lt;/code&gt;: &lt;code&gt;isEmpty()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если предикат отвечает на вопрос &lt;em&gt;есть ли?&lt;/em&gt; (например, &lt;em&gt;есть ли в списке чисел нечётное число?&lt;/em&gt;), принято использовать слово &lt;code&gt;has&lt;/code&gt;: &lt;code&gt;hasChildren()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Используется знак &lt;code&gt;?&lt;/code&gt; в конце слова (lisp, ruby): &lt;code&gt;empty?&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Используется буква &lt;code&gt;p&lt;/code&gt; в конце слова (emacs lisp): &lt;code&gt;empty-p&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;разное&#34;&gt;Разное&lt;/h3&gt;
&lt;h4 id=&#34;количество&#34;&gt;Количество&lt;/h4&gt;
&lt;p&gt;Если нужна переменная, в которой содержится количество чего-либо, используется комбинация: сущность во множественном числе + &lt;code&gt;count&lt;/code&gt;: &lt;code&gt;symbolsCount&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;отступы&#34;&gt;Отступы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Во многих стандартах кодирования запрещается использовать табуляции - их требуют заменять пробелами.&lt;/li&gt;
&lt;li&gt;В различных редакторах может устанавливаться разная длина символа табуляции, поэтому при смешении табуляции с пробелами исходный код будет выглядеть по-разному в разных редакторах.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;комментарии&#34;&gt;Комментарии&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Комментарий - некомпилируемая часть исходного кода, поясняющая принцип работы программы.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Иногда в комментариях фиксируют информацию:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;о версии кода и, внесенных в ней, изменениях;&lt;/li&gt;
&lt;li&gt;об авторе кода или конкретных правок;&lt;/li&gt;
&lt;li&gt;о лицензии, по которой распространяется код;&lt;/li&gt;
&lt;li&gt;о неисправленных ошибках и прочих недочетах, заметки разного рода.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии должны быть коггерентны коду. При изменении кода надо менять комментарии.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии не должны пояснять очевидные моменты.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии должны быть понятны всем, а не только тем, кто их пишет.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комментарии не должны содержать бесполезной информации.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Написание комментариев и поддержка единого стиля комментариев не должна отнимать слишком много времени.&lt;/p&gt;
&lt;p&gt;Использование современных инструментов разработки позволяют полностью исключить некоторые типы комментариев из программы:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;информацию о версии программы, авторе изменений и ее особенностях позволяют хранить системы управления версиями;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;комментарии TODO, BUG и FIXME могут быть перенесены в трекеры задач и ошибок.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;соглашение-о-кодировании-dot-emacs-lisp&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;В соглашениях об именовании emacs lisp следует обычным правилам именования (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/&#34;&gt;Соглашения о кодировании&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Соглашение о кодировании. Emacs lisp</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</link>
      <pubDate>Sun, 20 Dec 2020 15:51:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</guid>
      <description>&lt;p&gt;Соглашения о кодировании для elisp.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#соглашение-об-именовании&#34;&gt;Соглашение об именовании&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#внешние-ссылки&#34;&gt;Внешние ссылки&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#emacs&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/24/emacs/&#34;&gt;Emacs&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;соглашение-об-именовании&#34;&gt;Соглашение об именовании&lt;/h2&gt;
&lt;p&gt;В соглашениях об именовании emacs lisp следует обычным правилам именования (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/&#34;&gt;Соглашения о кодировании&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В названиях функций используются только дефисы (например, &lt;code&gt;package-prefix-function-name&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Косая черта используется для разделения имени пакета и функции (например, &lt;code&gt;package-prefix/function-name&lt;/code&gt;), является популярным нестандартным соглашением.&lt;/li&gt;
&lt;li&gt;Обычно имена предикатных функций заканчиваются на &lt;code&gt;-p&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Имена предикатных функций могут заканчиваться на &lt;code&gt;?&lt;/code&gt; (как в Scheme, Racket Lisp, ruby, clojure) вместо &lt;code&gt;p&lt;/code&gt;. Поскольку вопросительный знак более интуитивно понятен, его легче идентифицировать и его можно синтаксически проверить&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;Двойное тире для внутренних методов (вспомогательных функций) является неявным соглашением.&lt;/li&gt;
&lt;li&gt;Переменная, начинающаяся с подчёркивания &lt;code&gt;_&lt;/code&gt; - неиспользуемая переменная&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; (неявное соглашение).&lt;/li&gt;
&lt;li&gt;Соглашение GNU emacs об использовании &lt;code&gt;ALLCAPS&lt;/code&gt; для параметров.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;внешние-ссылки&#34;&gt;Внешние ссылки&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/emacs-lisp-style-guide&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A community-driven Emacs Lisp style guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;emacs&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/24/emacs/&#34;&gt;Emacs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/&#34;&gt;Соглашение о кодировании. Emacs lisp&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;code&gt;p&lt;/code&gt; нельзя, потому что не все функции, заканчивающиеся на &lt;code&gt;p&lt;/code&gt;, являются предикатом. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Это пришло из современных практик на других языках (я думаю, python ruby). &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
    </item>
    
    <item>
      <title>Работа с PGP</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</link>
      <pubDate>Fri, 18 Dec 2020 12:39:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</guid>
      <description>&lt;p&gt;Использование набора программ PGP.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#экспорт-ключей-pgp&#34;&gt;Экспорт ключей PGP&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#шифрование&#34;&gt;Шифрование&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#симметричное-шифрование&#34;&gt;Симметричное шифрование&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#emacs-dot-почта-dot-gnus&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/&#34;&gt;Emacs. Почта. GNUS&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;экспорт-ключей-pgp&#34;&gt;Экспорт ключей PGP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Экспорт ключей
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Экспорт всех открытых ключей в текстовый файл в кодировке base64:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -a --export &amp;gt; mypubkeys.asc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Экспорт всех зашифрованных закрытых ключей (которые также будут включать соответствующие открытые ключи) в текстовый файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -a --export-secret-keys &amp;gt; myprivatekeys.asc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Опционально экспортируется &lt;code&gt;trustdb&lt;/code&gt; gpg в текстовый файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --export-ownertrust &amp;gt; otrust.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Импорт ключей
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Выполните команды &lt;code&gt;gpg --import&lt;/code&gt; для двух файлов &lt;code&gt;asc&lt;/code&gt;, а затем проверьте наличие новых ключей с помощью &lt;code&gt;gpg -k&lt;/code&gt; и &lt;code&gt;gpg -K&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --import myprivatekeys.asc
gpg --import mypubkeys.asc
gpg -K
gpg -k
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;При желании также импортируйте файл &lt;code&gt;trustdb&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --import-ownertrust otrust.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Проверьте шифрование и дешифрование с помощью команд &lt;code&gt;gpg -er USERID&lt;/code&gt; и &lt;code&gt;gpg -d&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;шифрование&#34;&gt;Шифрование&lt;/h2&gt;
&lt;p&gt;Шифрование может быть симметричным и ассиметричным.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Симметричное шифрование шифруется и расшифровывается приватным ключом или одной и той же парольной фразой.&lt;/li&gt;
&lt;li&gt;Ассиметричное шифрование шифруется публичным ключом, расшифровывается приватным.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;симметричное-шифрование&#34;&gt;Симметричное шифрование&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Зашифровать файл:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg -c filename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;или&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --symmetric filename
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Расшифровать файл:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --decrypt-files filename.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Расшифровать файл с выводом на терминал:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gpg --decrypt filename.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для подписывания коммитов используется технология PGP (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;
&lt;h3 id=&#34;emacs-dot-почта-dot-gnus&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/21/emacs-mail-gnus/&#34;&gt;Emacs. Почта. GNUS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для безопасности следует зашифровать файл паролей (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Общепринятые коммиты</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</link>
      <pubDate>Fri, 11 Dec 2020 19:39:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</guid>
      <description>&lt;p&gt;Использование спецификации &lt;em&gt;Conventional Commits&lt;/em&gt;.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#описание&#34;&gt;Описание&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#структура-коммита&#34;&gt;Структура коммита&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#базовые-типы-коммитов&#34;&gt;Базовые типы коммитов&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#соглашения-the-angular-convention&#34;&gt;Соглашения The Angular convention&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#соглашения-commitlint-config-conventional&#34;&gt;Соглашения @commitlint/config-conventional&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#программное-обеспечение&#34;&gt;Программное обеспечение&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;описание&#34;&gt;Описание&lt;/h2&gt;
&lt;p&gt;Спецификация &lt;a href=&#34;https://www.conventionalcommits.org/ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conventional Commits&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Соглашение о том, как нужно писать сообщения commit&amp;rsquo;ов.&lt;/li&gt;
&lt;li&gt;Совместимо с &lt;a href=&#34;http://semver.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SemVer&lt;/a&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;). Даже вернее сказать, сильно связано с семантическим версионированием.&lt;/li&gt;
&lt;li&gt;Регламентирует структуру и основные типы коммитов.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;структура-коммита&#34;&gt;Структура коммита&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;footer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Заголовок является обязательным.&lt;/li&gt;
&lt;li&gt;Любая строка сообщения о фиксации не может быть длиннее 100 символов.&lt;/li&gt;
&lt;li&gt;Тема (subject) содержит краткое описание изменения.
&lt;ul&gt;
&lt;li&gt;Используйте повелительное наклонение в настоящем времени: «изменить» (&amp;ldquo;change&amp;rdquo; not &amp;ldquo;changed&amp;rdquo; nor &amp;ldquo;changes&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Не используйте заглавную первую букву.&lt;/li&gt;
&lt;li&gt;Не ставьте точку в конце.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Тело (body) должно включать мотивацию к изменению и противопоставлять это предыдущему поведению.
&lt;ul&gt;
&lt;li&gt;Как и в теме, используйте повелительное наклонение в настоящем времени.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Нижний колонтитул (footer) должен содержать любую информацию о критических изменениях.
&lt;ul&gt;
&lt;li&gt;Также содержит ссылку на issue (например, на github), который закрывает эта фиксация.&lt;/li&gt;
&lt;li&gt;Критические изменения должны начинаться со слова &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; с пробела или двух символов новой строки. Затем для этого используется остальная часть сообщения фиксации.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;базовые-типы-коммитов&#34;&gt;Базовые типы коммитов&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; коммит типа fix исправляет ошибку (bug) в вашем коде (он соответствует PATCH в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; коммит типа feat добавляет новую функцию (feature) в ваш код (он соответствует MINOR в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BREAKING CHANGE:&lt;/code&gt; &amp;mdash; коммит, который содержит текст &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; в начале своего не обязательного тела сообщения (body) или в
подвале (footer), добавляет изменения, нарушающие обратную
совместимость вашего API (он соответствует MAJOR в SemVer). BREAKING CHANGE может быть частью коммита любого типа.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revert:&lt;/code&gt; &amp;mdash; если фиксация отменяет предыдущую фиксацию. Начинается с &lt;code&gt;revert:&lt;/code&gt;, за которым следует заголовок отменённой фиксации. В теле должно быть написано: Это отменяет фиксацию &lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt; (это SHA-хэш отменяемой фиксации).&lt;/li&gt;
&lt;li&gt;Другое: коммиты с типами, которые отличаются от &lt;code&gt;fix:&lt;/code&gt; и &lt;code&gt;feat:&lt;/code&gt;,
также разрешены. Например, @commitlint/config-conventional
(основанный на The Angular convention) рекомендует: chore:, docs:,
style:, refactor:, perf:, test:, и другие.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;соглашения-the-angular-convention&#34;&gt;Соглашения The Angular convention&lt;/h4&gt;
&lt;p&gt;Одно из популярных соглашений о поддержке исходных кодов &amp;mdash; конвенция Angular (&lt;a href=&#34;https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Angular convention&lt;/a&gt;).&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Типы коммитов The Angular convention&lt;/p&gt;
&lt;p&gt;Конвенция Angular (&lt;a href=&#34;https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Angular convention&lt;/a&gt;) требует следующие типы коммитов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;build:&lt;/code&gt; &amp;mdash; изменения, влияющие на систему сборки или внешние зависимости (примеры областей (scope): gulp, broccoli, npm).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci:&lt;/code&gt; &amp;mdash; изменения в файлах конфигурации и скриптах CI (примеры областей: Travis, Circle, BrowserStack, SauceLabs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs:&lt;/code&gt; &amp;mdash; изменения только в документации.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; новая функция.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; исправление ошибок.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perf:&lt;/code&gt; &amp;mdash; изменение кода, улучшающее производительность.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor:&lt;/code&gt; &amp;mdash; Изменение кода, которое не исправляет ошибку и не добавляет функции (рефакторинг кода).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style:&lt;/code&gt; &amp;mdash; изменения, не влияющие на смысл кода (пробелы, форматирование, отсутствие точек с запятой и т. д.).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test:&lt;/code&gt; &amp;mdash; добавление недостающих тестов или исправление существующих тестов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Области действия (scope)&lt;/p&gt;
&lt;p&gt;Областью действия должно быть имя затронутого пакета npm (как его воспринимает человек, читающий журнал изменений, созданный из сообщений фиксации).&lt;/p&gt;
&lt;p&gt;Есть несколько исключений из правила «использовать имя пакета»:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;packaging&lt;/code&gt; &amp;mdash; используется для изменений, которые изменяют структуру пакета, например, изменения общедоступного пути.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;changelog&lt;/code&gt; &amp;mdash; используется для обновления примечаний к выпуску в CHANGELOG.md.&lt;/li&gt;
&lt;li&gt;отсутствует область действия &amp;mdash; полезно для изменений стиля, тестирования и рефакторинга, которые выполняются во всех пакетах (например, style: добавить отсутствующие точки с запятой).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;соглашения-commitlint-config-conventional&#34;&gt;Соглашения @commitlint/config-conventional&lt;/h4&gt;
&lt;p&gt;Соглашение &lt;a href=&#34;https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@commitlint/config-conventional&lt;/a&gt; входит в пакет &lt;a href=&#34;https://github.com/conventional-changelog/conventional-changelog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conventional Changelog&lt;/a&gt;. В целом в этом соглашении придерживаются соглашения Angular.&lt;/p&gt;
&lt;h2 id=&#34;программное-обеспечение&#34;&gt;Программное обеспечение&lt;/h2&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Для реализации семантического версионирования создано несколько программных продуктов. При этом лучше всего использовать комплексные продукты, которые используют информацию из коммитов системы версионирования. Естественно, коммиты должны иметь стандартизованный вид. Поэтому в семантическое версионирование применяется вместе с &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятыми коммитами&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Семантическое версионирование</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</link>
      <pubDate>Fri, 11 Dec 2020 19:17:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</guid>
      <description>&lt;p&gt;Семантический подход в версионированию программного обеспечения.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#краткое-описание-семантического-версионирования&#34;&gt;Краткое описание семантического версионирования&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#программное-обеспечение&#34;&gt;Программное обеспечение&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#пакет-semantic-release&#34;&gt;Пакет Semantic-release&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#пакет-conventional-changelog&#34;&gt;Пакет Conventional Changelog&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#общепринятые-коммиты&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;краткое-описание-семантического-версионирования&#34;&gt;Краткое описание семантического версионирования&lt;/h2&gt;
&lt;p&gt;Семантическое версионирование описывается в &lt;a href=&#34;https://semver.org/lang/ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;манифесте семантического версионирования&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Кратко его можно описать следующим образом:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Версия задаётся в виде кортежа МАЖОРНАЯ_ВЕРСИЯ.МИНОРНАЯ_ВЕРСИЯ.ПАТЧ.&lt;/li&gt;
&lt;li&gt;Номер версии следует увеличивать:
&lt;ul&gt;
&lt;li&gt;МАЖОРНУЮ версию, когда сделаны обратно несовместимые изменения API.&lt;/li&gt;
&lt;li&gt;МИНОРНУЮ версию, когда вы добавляете новую функциональность, не нарушая обратной совместимости.&lt;/li&gt;
&lt;li&gt;ПАТЧ-версию, когда вы делаете обратно совместимые исправления.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Дополнительные обозначения для предрелизных и билд-метаданных
возможны как дополнения к МАЖОРНАЯ.МИНОРНАЯ.ПАТЧ формату.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;программное-обеспечение&#34;&gt;Программное обеспечение&lt;/h2&gt;
&lt;p&gt;Для реализации семантического версионирования создано несколько
программных продуктов. При этом лучше всего использовать комплексные
продукты, которые используют информацию из коммитов системы
версионирования. Естественно, коммиты должны иметь стандартизованный
вид. Поэтому в семантическое версионирование применяется вместе с
&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятыми коммитами&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;пакет-semantic-release&#34;&gt;Пакет Semantic-release&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/&#34;&gt;Semantic-release&lt;/a&gt;
автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p&gt;
&lt;h3 id=&#34;пакет-conventional-changelog&#34;&gt;Пакет Conventional Changelog&lt;/h3&gt;
&lt;p&gt;Пакет &lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/&#34;&gt;Conventional Changelog&lt;/a&gt; является комплексным решением по управлению коммитами и генерации журнала изменений.
Он содержит набор утилит, которые можно использовать по-отдельности.&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;система-контроля-версий-git&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;общепринятые-коммиты&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Совместимо с &lt;a href=&#34;http://semver.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SemVer&lt;/a&gt; (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;). Даже вернее сказать, сильно связано с семантическим версионированием.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Система контроля версий git</title>
      <link>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</link>
      <pubDate>Mon, 07 Dec 2020 15:47:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</guid>
      <description>&lt;p&gt;Использование системы контроля версий git.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#подписывание-коммитов&#34;&gt;Подписывание коммитов&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#сопутствующие-темы&#34;&gt;Сопутствующие темы&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#git-workflow&#34;&gt;Git Workflow&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#семантическое-версионирование&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#журнал-изменений&#34;&gt;Журнал изменений&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;подписывание-коммитов&#34;&gt;Подписывание коммитов&lt;/h2&gt;
&lt;p&gt;Для подписывания коммитов используется технология PGP (см. &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/&#34;&gt;Работа с PGP&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;сопутствующие-темы&#34;&gt;Сопутствующие темы&lt;/h2&gt;
&lt;h3 id=&#34;git-workflow&#34;&gt;Git Workflow&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2021/01/10/git-workflow/&#34;&gt;Варианты Git Workflow&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;семантическое-версионирование&#34;&gt;Семантическое версионирование&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/&#34;&gt;Семантическое версионирование&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;журнал-изменений&#34;&gt;Журнал изменений&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/&#34;&gt;Общепринятые коммиты&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Использование Git &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/&#34;&gt;Система контроля версий git&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</link>
      <pubDate>Fri, 30 Oct 2020 19:05:00 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</guid>
      <description>&lt;p&gt;Специфика языков программирования для научно-инженерных расчётов.&lt;/p&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;Содержание&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#backlinks&#34;&gt;Backlinks&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;backlinks&#34;&gt;Backlinks&lt;/h2&gt;
&lt;h3 id=&#34;введение-в-научное-программирование&#34;&gt;&lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/11/introduction-scientific-programming/&#34;&gt;Введение в научное программирование&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Языки научного программирования &lt;a href=&#34;https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/&#34;&gt;Языки научного программирования&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kwong T. - Hands-On Design Patterns and Best Practices with Julia</title>
      <link>https://yamadharma.github.io/ru/post/2020/08/28/kwong-julia/</link>
      <pubDate>Fri, 28 Aug 2020 16:37:31 +0300</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2020/08/28/kwong-julia/</guid>
      <description>&lt;h2 id=&#34;kwong-t---hands-on-design-patterns-and-best-practices-with-julia&#34;&gt;Kwong T. - Hands-On Design Patterns and Best Practices with Julia&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://libgen.li/book/index.php?md5=42BAB0AA178AA6A4CC0522CA7B2B3853&#34;&gt;http://libgen.li/book/index.php?md5=42BAB0AA178AA6A4CC0522CA7B2B3853&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Шаблоны проектирования через призму языка Julia.&lt;/li&gt;
&lt;li&gt;Или учебник языка Julia с пояснениями его структуры через шаблоны проектирования.&lt;/li&gt;
&lt;li&gt;Не для первоначального изучения, а для углубления понимания структуры языка.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Пассиг К. - Программирование без дураков</title>
      <link>https://yamadharma.github.io/ru/post/2017/08/28/programmirovanie-bez-durakov/</link>
      <pubDate>Mon, 28 Aug 2017 10:23:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2017/08/28/programmirovanie-bez-durakov/</guid>
      <description>&lt;h2 id=&#34;пассиг-к---программирование-без-дураков&#34;&gt;Пассиг К. - Программирование без дураков&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://libgen.li/book/index.php?md5=709D6B27BBEB57769CC9B1934DED2451&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libgen.li/book/index.php?md5=709D6B27BBEB57769CC9B1934DED2451&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Книга представляет собой обстоятельный сборник рекомендаций начинающему программисту.&lt;/li&gt;
&lt;li&gt;Рекомендации в основном из тех, которые передаются из рук в руки, а не пишутся в учебниках.&lt;/li&gt;
&lt;li&gt;Рекомендуется прочитать начинающим программистам.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Сонмез Д. - Путь программиста</title>
      <link>https://yamadharma.github.io/ru/post/2016/04/18/sonmez-putj-programmista/</link>
      <pubDate>Mon, 18 Apr 2016 08:07:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2016/04/18/sonmez-putj-programmista/</guid>
      <description>&lt;h2 id=&#34;сонмез-д---путь-программиста&#34;&gt;Сонмез Д. - Путь программиста&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://libgen.li/book/index.php?md5=B2BF33EDAC00871FFF29D159A0F91FBA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libgen.li/book/index.php?md5=B2BF33EDAC00871FFF29D159A0F91FBA&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Книжка не про программирование. И не про программистов. Книжка про само-менеджмент.&lt;/li&gt;
&lt;li&gt;Ничего нового. Однако, это опыт конкретного человека. Он пишет про то, что он освоил, и что ему помогает.&lt;/li&gt;
&lt;li&gt;Читается очень легко и быстро.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Чакон С. -  Pro Git</title>
      <link>https://yamadharma.github.io/ru/post/2013/11/20/chakon-s-pro-git/</link>
      <pubDate>Wed, 20 Nov 2013 07:36:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2013/11/20/chakon-s-pro-git/</guid>
      <description>&lt;h2 id=&#34;чакон-с---pro-git&#34;&gt;Чакон С. -  Pro Git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Чакон С. -  Pro Git  &lt;a href=&#34;http://libgen.li/book/index.php?md5=02355925e241babf0cb954a4c941aaa3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libgen.li/book/index.php?md5=02355925e241babf0cb954a4c941aaa3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chacon S. - Pro Git &lt;a href=&#34;http://libgen.li/book/index.php?md5=ee21756330d9cab2fbd5f1d4b077d0ed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libgen.li/book/index.php?md5=ee21756330d9cab2fbd5f1d4b077d0ed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Отличная книга для начинающего использовать git.&lt;/li&gt;
&lt;li&gt;Изложение ведётся по возникающим перед разработчиком задачам.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Линн Б. - Волшебство Git</title>
      <link>https://yamadharma.github.io/ru/post/2013/10/29/linn-volshebstvo-git/</link>
      <pubDate>Tue, 29 Oct 2013 09:15:00 +0000</pubDate>
      <guid>https://yamadharma.github.io/ru/post/2013/10/29/linn-volshebstvo-git/</guid>
      <description>&lt;h2 id=&#34;линн-б---волшебство-git&#34;&gt;Линн Б. - Волшебство Git&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://libgen.li/book/index.php?md5=347b462d91d20779ec736d5f393645ba&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://libgen.li/book/index.php?md5=347b462d91d20779ec736d5f393645ba&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Книга для начинающих.&lt;/li&gt;
&lt;li&gt;Даны лишь начальные рецепты, нет ни описания концепции распределённых систем управления версиями, ни информации по продвинутым способам работы.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
