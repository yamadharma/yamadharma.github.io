<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Лабораторные работы | Д. С. Кулябов</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/</link><atom:link href="https://yamadharma.github.io/ru/teaching/os-intro/lab/index.xml" rel="self" type="application/rss+xml"/><description>Лабораторные работы</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>ru-ru</language><copyright>© 2025 Dmitry S. Kulyabov</copyright><lastBuildDate>Tue, 27 Dec 2022 13:30:00 +0300</lastBuildDate><image><url>https://yamadharma.github.io/media/icon_hu_3756dbc1adf0ae14.png</url><title>Лабораторные работы</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/</link></image><item><title>Лабораторная работа Установка ОС Linux</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-linux-install/</link><pubDate>Mon, 04 Apr 2022 13:40:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-linux-install/</guid><description>&lt;p&gt;Лабораторная работа &lt;em&gt;Установка ОС Linux&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id="цель-работы"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Цель работы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Целью данной работы является приобретение практических навыков установки операционной системы на виртуальную машину, настройки минимально необходимых для дальнейшей работы сервисов.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="указания-к-работе"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Указания к работе&lt;/h2&gt;
&lt;h3 id="техническое-обеспечение"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Техническое обеспечение&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Лабораторная работа подразумевает установку на виртуальную машину VirtualBox (
) операционной системы Linux (дистрибутив Fedora).&lt;/li&gt;
&lt;li&gt;Выполнение работы возможно как в дисплейном классе факультета физико-математических и естественных наук РУДН, так и дома. Описание выполнения работы приведено для дисплейного класса со следующими характеристиками техники:
&lt;ul&gt;
&lt;li&gt;Intel Core i3-550 3.2 GHz, 4 GB оперативной памяти, 80 GB свободного места на жёстком диске;&lt;/li&gt;
&lt;li&gt;ОС Linux Gentoo (
);&lt;/li&gt;
&lt;li&gt;VirtualBox версии 7.0 или новее.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Для установки в виртуальную машину используется дистрибутив Linux Fedora (
), вариант с менеджером окон &lt;em&gt;sway&lt;/em&gt; (
).&lt;/li&gt;
&lt;li&gt;При выполнении лабораторной работы на своей технике вам необходимо скачать необходимый образ операционной системы (
).&lt;/li&gt;
&lt;li&gt;В дисплейных классах можно воспользоваться образом в каталоге &lt;code&gt;/afs/dk.sci.pfu.edu.ru/common/files/iso&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Для определённости в описании будем использовать версию &lt;code&gt;Fedora-Sway-Live-x86_64-41-1.4.iso&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="соглашения-об-именовании"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Соглашения об именовании&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;При выполнении работ следует придерживаться следующих правил именования:
&lt;ul&gt;
&lt;li&gt;Пользователь внутри виртуальной машины должен иметь имя, совпадающее с учётной записью студента, выполняющего лабораторную работу.&lt;/li&gt;
&lt;li&gt;Имя хоста вашей виртуальной машины должно совпадать с учётной записью студента, выполняющего лабораторную работу.&lt;/li&gt;
&lt;li&gt;Имя виртуальной машины должно совпадать с учётной записью студента, выполняющего лабораторную работу.&lt;/li&gt;
&lt;li&gt;В дисплейных классах вы можете посмотреть имя вашей учётной записи, набрав в терминале команду:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id -un
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;При установке на своей технике необходимо использовать имя вашей учётной записи дисплейных классов. Например, если студента зовут Остап Сулейманович Бендер, то его учётная запись имеет вид &lt;code&gt;osbender&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="последовательность-выполнения-работы"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Последовательность выполнения работы&lt;/h2&gt;
&lt;h3 id="варианты-создания-образа-виртуальной-машины"&gt;&lt;span class="section-num"&gt;3.1&lt;/span&gt; Варианты создания образа виртуальной машины&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Предлагается несколько вариантов установки ОС Linux на основе следующих программных эмуляторов:
&lt;ul&gt;
&lt;li&gt;qemu;&lt;/li&gt;
&lt;li&gt;virtualbox.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="установка-linux-на-qemu"&gt;&lt;span class="section-num"&gt;3.2&lt;/span&gt; Установка Linux на qemu&lt;/h3&gt;
&lt;h4 id="общая-информация"&gt;&lt;span class="section-num"&gt;3.2.1&lt;/span&gt; Общая информация&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Данный вариант установки возможен, если у Вас установлено программное обеспечение Qemu (
).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="выполнение-в-дисплейном-классе"&gt;&lt;span class="section-num"&gt;3.2.2&lt;/span&gt; Выполнение в дисплейном классе&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Загрузите в дисплейном классе операционную систему Linux. Осуществите вход в систему.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Настройка каталога для виртуальных машин&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Запустите терминал. Перейдите в каталог &lt;code&gt;/var/tmp&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создайте каталог с именем пользователя (совпадающий с логином студента в дисплейном классе). Для этого можно использовать команду:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir /var/tmp/&lt;span class="sb"&gt;`&lt;/span&gt;id -un&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Дальнейшую работу проводите в этом каталоге.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="создание-образа"&gt;&lt;span class="section-num"&gt;3.2.3&lt;/span&gt; Создание образа&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создадим образ виртуального диска: &lt;code&gt;60GB&lt;/code&gt;, формат &lt;code&gt;qcow2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;qemu-img create -f qcow2 fedora-sway.qcow2 60G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Запустите виртуальную машину:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;qemu-system-x86_64 -boot &lt;span class="nv"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on -m &lt;span class="m"&gt;2048&lt;/span&gt; -cpu max -smp &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -cdrom Fedora-Sway-Live-x86_64-41-1.4.iso &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fedora-sway.qcow2,format&lt;span class="o"&gt;=&lt;/span&gt;qcow2,if&lt;span class="o"&gt;=&lt;/span&gt;virtio,aio&lt;span class="o"&gt;=&lt;/span&gt;native,cache&lt;span class="o"&gt;=&lt;/span&gt;none &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -bios /usr/share/edk2-ovmf/OVMF_CODE.fd &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -enable-kvm -machine q35 -device intel-iommu &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -device virtio-balloon &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -chardev qemu-vdagent,id&lt;span class="o"&gt;=&lt;/span&gt;vdagent0,name&lt;span class="o"&gt;=&lt;/span&gt;vdagent,clipboard&lt;span class="o"&gt;=&lt;/span&gt;on,mouse&lt;span class="o"&gt;=&lt;/span&gt;off &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -display default,show-cursor&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -vga none -device virtio-gpu-pci
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Видео-устройств подключено на видеокарту компьютера.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Выберите &lt;code&gt;Start Fedora-Sway-Live 41&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Загрузится графический режим.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если вы запускаете из-под Sway, включите &lt;code&gt;Passthrough mode&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Также можно использовать режим захвата, переключая его по комбинации &lt;code&gt;Ctrl+Alt+g&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Установите систему.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="после-установки-виртуальной-машины"&gt;&lt;span class="section-num"&gt;3.2.4&lt;/span&gt; После установки виртуальной машины&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Для удобства создайте командный файл &lt;code&gt;fedora-sway-start.sh&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;touch fedora-sway-start.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chmod +x fedora-sway-start.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;В файл запишите команду для запуска:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;qemu-system-x86_64 -boot &lt;span class="nv"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -m &lt;span class="m"&gt;2048&lt;/span&gt; -mem-path /dev/hugepages &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -cpu max -smp &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fedora-sway.qcow2,format&lt;span class="o"&gt;=&lt;/span&gt;qcow2,if&lt;span class="o"&gt;=&lt;/span&gt;virtio,aio&lt;span class="o"&gt;=&lt;/span&gt;native,cache&lt;span class="o"&gt;=&lt;/span&gt;none &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -bios /usr/share/edk2-ovmf/OVMF_CODE.fd &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -enable-kvm -machine q35 -device intel-iommu &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -device virtio-balloon &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -device virtio-serial &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -chardev spicevmc,id&lt;span class="o"&gt;=&lt;/span&gt;vdagent,debug&lt;span class="o"&gt;=&lt;/span&gt;0,name&lt;span class="o"&gt;=&lt;/span&gt;vdagent &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -device virtserialport,chardev&lt;span class="o"&gt;=&lt;/span&gt;vdagent,name&lt;span class="o"&gt;=&lt;/span&gt;com.redhat.spice.0 &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -chardev qemu-vdagent,id&lt;span class="o"&gt;=&lt;/span&gt;vdagent0,name&lt;span class="o"&gt;=&lt;/span&gt;vdagent,clipboard&lt;span class="o"&gt;=&lt;/span&gt;on,mouse&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -display default,show-cursor&lt;span class="o"&gt;=&lt;/span&gt;on &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; -vga none -device virtio-gpu-pci
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="src-block-caption"&gt;
&lt;span class="src-block-number"&gt;&amp;#1056;&amp;#1072;&amp;#1089;&amp;#1087;&amp;#1077;&amp;#1095;&amp;#1072;&amp;#1090;&amp;#1082;&amp;#1072; 1:&lt;/span&gt;
fedora-sway-start.sh
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-установка-linux-на-qemu"&gt;&lt;span class="section-num"&gt;3.2.5&lt;/span&gt; Видео: Установка Linux на qemu&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Платформа
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-3"&gt;
VKvideo
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-4"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/50903a2181f564a0a207ace60067ad3d"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="plvideo-player" type="text/html"
width="647" height="364"
src="https://plvideo.ru/embed/W5741K4QRBi1"
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-3"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="vkvideo-player" type="text/html"
src="https://vkvideo.ru/video_ext.php?oid=606414976&amp;id=456239663&amp;hd=2"
width="647" height="364" allow="autoplay; encrypted-media; fullscreen; picture-in-picture; screen-wake-lock;" frameborder="0" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-4"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/zdGOCVWmnWo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Установка Linux на qemu
&lt;h3 id="установка-linux-на-virtualbox"&gt;&lt;span class="section-num"&gt;3.3&lt;/span&gt; Установка Linux на Virtualbox&lt;/h3&gt;
&lt;h4 id="выполнение-в-дисплейном-классе"&gt;&lt;span class="section-num"&gt;3.3.1&lt;/span&gt; Выполнение в дисплейном классе&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Загрузите в дисплейном классе операционную систему Linux. Осуществите вход в систему.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Настройка каталога для виртуальных машин&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Создание необходимых каталогов&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Запустите терминал. Перейдите в каталог &lt;code&gt;/var/tmp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /var/tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создайте каталог с именем пользователя (совпадающий с логином студента в дисплейном классе). Для этого можно использовать команду:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir /var/tmp/&lt;span class="sb"&gt;`&lt;/span&gt;id -un&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Проверьте в свойствах VirtualBox &lt;strong&gt;месторасположение каталога для виртуальных машин&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/var/tmp/имя_пользователя
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Здесь &lt;code&gt;имя_пользователя&lt;/code&gt; &amp;mdash; логин (учётная запись) студента в дисплейном классе. Если указан другой каталог, то требуется изменить его.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Папка виртуальных машин&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Значения по умолчанию&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux: &lt;code&gt;$HOME/VirtualBox VMs&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Графический интерфейс&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В меню выберите &lt;em&gt;Файл&lt;/em&gt;, &lt;em&gt;Настройки&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Выберите &lt;em&gt;Общие&lt;/em&gt;, поле &lt;em&gt;Папка для машин по умолчанию&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Установите новое значение, например &lt;code&gt;/var/tmp/имя_пользователя&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Нажмите ОК, чтобы сохранить изменения.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Командная строка&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Зададим отображение информации о настройках VirtualBox на английском.&lt;/li&gt;
&lt;li&gt;Поэтому следует задать кодировку для отображения свойств VirtualBox:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage setproperty language C
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установим папку для виртуальных машине в &lt;code&gt;/var/tmp/имя_пользователя&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage setproperty machinefolder /var/tmp/&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Поверьте, что папка виртуальных машин по умолчанию изменена:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;#34;Default machine folder:&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Следующая команда выдаст только каталог:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;#34;Default machine folder:&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s2"&gt;&amp;#34;:&amp;#34;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;Установочный образ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Перенесите установочный образ в папку &lt;code&gt;/var/tmp/имя_пользователя/iso&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Default machine folder:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/iso&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mv Fedora-Sway-Live-x86_64-39-1.5.iso &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Default machine folder:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/iso&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Настройка хост-клавиши&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Хост-клавишей по умолчанию является правый &lt;code&gt;Ctrl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;По умолчанию в дисплейных классах на клавише правый &lt;code&gt;Ctrl&lt;/code&gt; находится переключатель языка ввода.&lt;/li&gt;
&lt;li&gt;Эти значения могут конфликтовать.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Графический интерфейс&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В меню выберите &lt;em&gt;Файл&lt;/em&gt;, &lt;em&gt;Настройки&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Выберите &lt;em&gt;Ввод&lt;/em&gt;, вкладка &lt;em&gt;Виртуальная машина&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Выберите &lt;em&gt;Сочетание клавиш&lt;/em&gt; в строке &lt;em&gt;Хост-комбинация&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Нажмите новое сочетание клавиш.&lt;/li&gt;
&lt;li&gt;Нажмите ОК, чтобы сохранить изменения.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Командная строка&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Проверьте текущую комбинацию для хост-клавиши:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;VBoxManage getextradata global GUI/Input/HostKeyCombination
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;По умолчанию установлена комбинация &lt;code&gt;65508&lt;/code&gt;, соответствующая правой клавише &lt;code&gt;Ctrl&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Установите нужную клавишу (в примере клавиша &lt;em&gt;Menu&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;VBoxManage setextradata global GUI/Input/HostKeyCombination &lt;span class="m"&gt;65383&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Комбинации клавиш можно, например, посмотреть на странице
.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="создание-виртуальной-машины"&gt;&lt;span class="section-num"&gt;3.3.2&lt;/span&gt; Создание виртуальной машины&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Для использования графического интерфейса запустите менеджер виртуальных машин, введя в командной строке:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;VirtualBox &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создайте новую виртуальную машину в графическом интерфейсе или в командной строке.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage createvm --name &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --ostype Fedora_64 --register
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Укажите имя виртуальной машины (ваш логин в дисплейном классе), тип операционной системы &amp;mdash; Linux, Fedora.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Укажите размер основной памяти виртуальной машины &amp;mdash; от 2048 МБ.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --memory &lt;span class="m"&gt;2048&lt;/span&gt; --acpi on --nic1 nat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Задайте конфигурацию жёсткого диска &amp;mdash; загрузочный, VDI (VirtualBox Disk Image), динамический виртуальный диск.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Задайте размер диска &amp;mdash; 80 ГБ (или больше), его расположение &amp;mdash; в данном случае &lt;code&gt;/var/tmp/имя_пользователя/имя_машины/имя_машины.vdi&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage createhd --filename &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Default machine folder:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro/&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro.vdi&amp;#34;&lt;/span&gt; --size &lt;span class="m"&gt;80000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Выберите в VirtualBox Вашей виртуальной машины. Добавьте новый привод оптических дисков и выберите образ.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;ul&gt;
&lt;li&gt;Подключите загрузку с DVD:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --boot1 dvd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Добавьте IDE-контроллер:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage storagectl &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --name &lt;span class="s2"&gt;&amp;#34;IDE Controller&amp;#34;&lt;/span&gt; --add ide --controller PIIX4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите созданный вами файл VDI в качестве первого виртуального жесткого диска новой виртуальной машины:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage storageattach &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --storagectl &lt;span class="s2"&gt;&amp;#34;IDE Controller&amp;#34;&lt;/span&gt; --port &lt;span class="m"&gt;0&lt;/span&gt; --device &lt;span class="m"&gt;0&lt;/span&gt; --type hdd --medium &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Default machine folder:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro/&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro.vdi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Подключите к виртуальной машине ISO-файл:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage storageattach &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --storagectl &lt;span class="s2"&gt;&amp;#34;IDE Controller&amp;#34;&lt;/span&gt; --port &lt;span class="m"&gt;0&lt;/span&gt; --device &lt;span class="m"&gt;1&lt;/span&gt; --type dvddrive --medium &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;vboxmanage list systemproperties &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;Default machine folder:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; cut -d&lt;span class="s1"&gt;&amp;#39;:&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/iso/Fedora-Sway-Live-x86_64-39-1.5.iso&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;При установке на собственной технике используйте скачанный образ операционной системы Fedora.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;В качестве графического контроллера поставьте VMSVGA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --graphicscontroller&lt;span class="o"&gt;=&lt;/span&gt;vmsvga
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Включите ускорение 3D.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --accelerate-3d&lt;span class="o"&gt;=&lt;/span&gt;on
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если есть проблемы при отображении, загрузитесь в режиме базовой графики.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Включите общий буфер обмена и перетаскивание объектов между хостом и гостевой ОС.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --clipboard-mode&lt;span class="o"&gt;=&lt;/span&gt;bidirectional --drag-and-drop&lt;span class="o"&gt;=&lt;/span&gt;bidirectional
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Включите поддержку UEFI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В командной строке:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage modifyvm &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --firmware&lt;span class="o"&gt;=&lt;/span&gt;efi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-создание-виртуальной-машины"&gt;&lt;span class="section-num"&gt;3.3.3&lt;/span&gt; Видео: Создание виртуальной машины&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/f4e38867368ced9e13556341023c2c03"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9_Vt7R57Yw4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Создание виртуальной машины
&lt;h4 id="после-установки-виртуальной-машины"&gt;&lt;span class="section-num"&gt;3.3.4&lt;/span&gt; После установки виртуальной машины&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Установка драйверов для VirtualBox&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Войдите в ОС под заданной вами при установке учётной записью.&lt;/li&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;Запустите терминальный мультиплексор &lt;em&gt;tmux&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Переключитесь на роль супер-пользователя:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите средства разработки:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf -y group install development-tools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите пакет &lt;em&gt;DKMS&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf -y install dkms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;В меню виртуальной машины подключите образ диска дополнений гостевой ОС.&lt;/li&gt;
&lt;li&gt;Подмонтируйте диск:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mount /dev/sr0 /media
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите драйвера:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;/media/VBoxLinuxAdditions.run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Перегрузите виртуальную машину:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Подключение общей папки&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Внутри виртуальной машины добавьте своего пользователя в группу &lt;code&gt;vboxsf&lt;/code&gt; (вместо &lt;code&gt;username&lt;/code&gt; укажите ваш логин):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpasswd -a username vboxsf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;В хостовой системе подключите разделяемую папку:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;vboxmanage sharedfolder add &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;id -un&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;_os-intro&amp;#34;&lt;/span&gt; --name&lt;span class="o"&gt;=&lt;/span&gt;work --hostpath&lt;span class="o"&gt;=&lt;/span&gt;work --automount
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Перегрузите виртуальную машину:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Папка будет монтироваться в &lt;code&gt;/media/sf_work&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="установка-операционной-системы"&gt;&lt;span class="section-num"&gt;3.4&lt;/span&gt; Установка операционной системы&lt;/h3&gt;
&lt;h4 id="запуск-приложения-для-установки-системы"&gt;&lt;span class="section-num"&gt;3.4.1&lt;/span&gt; Запуск приложения для установки системы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Загрузите LiveCD.&lt;/li&gt;
&lt;li&gt;Появится интерфейс начальной конфигурации.&lt;/li&gt;
&lt;li&gt;Нажмите &lt;em&gt;Enter&lt;/em&gt; для создания конфигурации по умолчанию.&lt;/li&gt;
&lt;li&gt;Нажмите &lt;em&gt;Enter&lt;/em&gt;, чтобы выбрать в качестве модификатора клавишу &lt;em&gt;Win&lt;/em&gt; (она же клавиша &lt;em&gt;Super&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;В файле конфигурации эта клавиша будет обозначена как &lt;code&gt;$Mod&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;В терминале запустите &lt;code&gt;liveinst&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Для перехода к раскладке окон с табами нажмите &lt;em&gt;Win+w&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="установка-системы-на-диск"&gt;&lt;span class="section-num"&gt;3.4.2&lt;/span&gt; Установка системы на диск&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Выберите язык интерфейса и перейдите к настройкам установки операционной системы.&lt;/li&gt;
&lt;li&gt;При необходимости скорректируйте часовой пояс, раскладку клавиатуры (рекомендуется в качестве языка по умолчанию указать английский язык).&lt;/li&gt;
&lt;li&gt;Место установки ОС оставьте без изменения.&lt;/li&gt;
&lt;li&gt;Установите имя и пароль для пользователя &lt;code&gt;root&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Установите имя и пароль для Вашего пользователя.&lt;/li&gt;
&lt;li&gt;Задайте сетевое имя Вашего компьютера.&lt;/li&gt;
&lt;li&gt;После завершения установки операционной системы корректно перезапустите виртуальную машину.&lt;/li&gt;
&lt;li&gt;В VirtualBox оптический диск должен отключиться автоматически, но если это не произошло, то необходимо отключить носитель информации с образом.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-установка-операционной-системы"&gt;&lt;span class="section-num"&gt;3.4.3&lt;/span&gt; Видео: Установка операционной системы&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/603fc8f3cf968d3c4151073aa7a4789f"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XYYbl5ABN9Q?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Установка операционной системы
&lt;h3 id="после-установки"&gt;&lt;span class="section-num"&gt;3.5&lt;/span&gt; После установки&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Войдите в ОС под заданной вами при установке учётной записью.&lt;/li&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;Переключитесь на роль супер-пользователя:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="исправления"&gt;&lt;span class="section-num"&gt;3.5.1&lt;/span&gt; Исправления&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Запретите устанавливать заблокированный openh264:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf config-manager setopt fedora-cisco-openh264.enabled&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf clean all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="обновления"&gt;&lt;span class="section-num"&gt;3.5.2&lt;/span&gt; Обновления&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Установите средства разработки:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y group install development-tools
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Обновить все пакеты
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="повышение-комфорта-работы"&gt;&lt;span class="section-num"&gt;3.5.3&lt;/span&gt; Повышение комфорта работы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Программы для удобства работы в консоли:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install tmux mc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Другой вариант консоли:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install kitty
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="автоматическое-обновление"&gt;&lt;span class="section-num"&gt;3.5.4&lt;/span&gt; Автоматическое обновление&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;При необходимости можно использовать автоматическое обновление (см.
).&lt;/li&gt;
&lt;li&gt;Установка программного обеспечения:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install dnf-automatic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Задаёте необходимую конфигурацию в файле &lt;code&gt;/etc/dnf/automatic.conf&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Запустите таймер:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; --now dnf-automatic.timer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="отключение-selinux"&gt;&lt;span class="section-num"&gt;3.5.5&lt;/span&gt; Отключение SELinux&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;В данном курсе мы не будем рассматривать работу с системой безопасности SELinux.&lt;/li&gt;
&lt;li&gt;Поэтому отключим его.&lt;/li&gt;
&lt;li&gt;В файле &lt;code&gt;/etc/selinux/config&lt;/code&gt; замените значение
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SELINUX=enforcing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;на значение
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;SELINUX=permissive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Перегрузите виртуальную машину:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo systemctl reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="настройка-раскладки-клавиатуры"&gt;&lt;span class="section-num"&gt;3.6&lt;/span&gt; Настройка раскладки клавиатуры&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Войдите в ОС под заданной вами при установке учётной записью.&lt;/li&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;Запустите терминальный мультиплексор &lt;em&gt;tmux&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создайте конфигурационный файл &lt;code&gt;~/.config/sway/config.d/95-system-keyboard-config.conf&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p ~/.config/sway
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;touch ~/.config/sway/config.d/95-system-keyboard-config.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Отредактируйте конфигурационный файл &lt;code&gt;~/.config/sway/config.d/95-system-keyboard-config.conf&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;exec_always /usr/libexec/sway-systemd/locale1-xkb-config --oneshot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Переключитесь на роль супер-пользователя:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Отредактируйте конфигурационный файл &lt;code&gt;/etc/X11/xorg.conf.d/00-keyboard.conf&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Section &amp;#34;InputClass&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Identifier &amp;#34;system-keyboard&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; MatchIsKeyboard &amp;#34;on&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Option &amp;#34;XkbLayout&amp;#34; &amp;#34;us,ru&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Option &amp;#34;XkbVariant&amp;#34; &amp;#34;,winkeys&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Option &amp;#34;XkbOptions&amp;#34; &amp;#34;grp:rctrl_toggle,compose:ralt,terminate:ctrl_alt_bksp&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;EndSection
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для этого можно использовать файловый менеджер &lt;code&gt;mc&lt;/code&gt; и его встроенный редактор.&lt;/li&gt;
&lt;li&gt;Перегрузите виртуальную машину:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo systemctl reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-настройка-раскладки-клавиатуры"&gt;&lt;span class="section-num"&gt;3.6.1&lt;/span&gt; Видео: Настройка раскладки клавиатуры&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/f1004d77e929bfb0f856f8aa471aa67c"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ayLha0dDiQw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Настройка раскладки клавиатуры
&lt;h3 id="установка-имени-пользователя-и-названия-хоста"&gt;&lt;span class="section-num"&gt;3.7&lt;/span&gt; Установка имени пользователя и названия хоста&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Если при установке виртуальной машины вы задали имя пользователя или имя хоста, не удовлетворяющее соглашению об именовании, то вам необходимо исправить это.&lt;/li&gt;
&lt;li&gt;Запустите виртуальную машину и залогиньтесь.&lt;/li&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;Запустите терминальный мультиплексор &lt;em&gt;tmux&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Переключитесь на роль супер-пользователя:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создайте пользователя (вместо &lt;code&gt;username&lt;/code&gt; укажите ваш логин в дисплейном классе):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;adduser -G wheel username
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Задайте пароль для пользователя (вместо &lt;code&gt;username&lt;/code&gt; укажите ваш логин в дисплейном классе):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;passwd username
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите имя хоста (вместо &lt;code&gt;username&lt;/code&gt; укажите ваш логин в дисплейном классе):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;hostnamectl set-hostname username
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Проверьте, что имя хоста установлено верно:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;hostnamectl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-имя-пользователя-и-хоста"&gt;&lt;span class="section-num"&gt;3.7.1&lt;/span&gt; Видео: Имя пользователя и хоста&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/a1a2bac5dbd805b11d5d5390cdfcee50"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/zU1x8rx4JjA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Имя пользователя и хоста
&lt;h3 id="установка-программного-обеспечения-для-создания-документации"&gt;&lt;span class="section-num"&gt;3.8&lt;/span&gt; Установка программного обеспечения для создания документации&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Нажмите комбинацию &lt;em&gt;Win+Enter&lt;/em&gt; для запуска терминала.&lt;/li&gt;
&lt;li&gt;Запустите терминальный мультиплексор &lt;em&gt;tmux&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;tmux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Переключитесь на роль супер-пользователя:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo -i
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="работа-с-языком-разметки-markdown"&gt;&lt;span class="section-num"&gt;3.8.1&lt;/span&gt; Работа с языком разметки Markdown&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Средство &lt;code&gt;pandoc&lt;/code&gt; для работы с языком разметки Markdown.&lt;/li&gt;
&lt;li&gt;Установка с помощью менеджера пакетов:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install pandoc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для работы с перекрёстными ссылками мы используем пакет &lt;code&gt;pandoc-crossref&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;Пакет &lt;code&gt;pandoc-crossref&lt;/code&gt; в стандартном репозитории отсутствует.&lt;/li&gt;
&lt;li&gt;Придётся ставить вручную, скачав с сайта
.&lt;/li&gt;
&lt;li&gt;При установке &lt;code&gt;pandoc-crossref&lt;/code&gt; следует обращать внимание, для какой версии &lt;code&gt;pandoc&lt;/code&gt; он скомпилён.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Лучше установить &lt;code&gt;pandoc&lt;/code&gt; и &lt;code&gt;pandoc-crossref&lt;/code&gt; вручную.
&lt;ul&gt;
&lt;li&gt;Скачайте необходимую версию &lt;code&gt;pandoc-crossref&lt;/code&gt; (
).&lt;/li&gt;
&lt;li&gt;Посмотрите, для какой версии откомпилён &lt;code&gt;pandoc-crossref&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Скачайте соответствующую версию &lt;code&gt;pandoc&lt;/code&gt; (
).&lt;/li&gt;
&lt;li&gt;Распакуйте архивы.&lt;/li&gt;
&lt;li&gt;Обе программы собраны в виде статически-линкованных бинарных файлов.&lt;/li&gt;
&lt;li&gt;Поместите их в каталог &lt;code&gt;/usr/local/bin&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="texlive"&gt;&lt;span class="section-num"&gt;3.8.2&lt;/span&gt; texlive&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Установим дистрибутив TeXlive (см.
):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install texlive-scheme-full
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="видео-установка-tex"&gt;&lt;span class="section-num"&gt;3.8.3&lt;/span&gt; Видео: Установка TeX&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/a60d71c8e5644c1fa42b445670fb43c8"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/65yj0KvKZGM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
Установка TeX
&lt;h4 id="видео-после-установки-linux"&gt;&lt;span class="section-num"&gt;3.8.4&lt;/span&gt; Видео: После установки Linux&lt;/h4&gt;
&lt;link rel="stylesheet" href="https://yamadharma.github.io/css/flick/jquery-ui.min.2145606a4147a5c2562a0afa9e996323dcbd14469acf347b81292370e967b906.css" integrity="sha256-IUVgakFHpcJWKgr6npljI9y9FEaazzR7gSkjcOlnuQY="&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;
&lt;/script&gt;
&lt;script type = "text/javascript" src = "https://ajax.googleapis.com/ajax/libs/jqueryui/1.14.1/jquery-ui.min.js"&gt;
&lt;/script&gt;
&lt;script&gt;
$(function() {
$( "#tabs, #tabs1, #tabs2, #tabs3, #tabs4, #tabs5, #tabs6, #tabs7, #tabs8" ).tabs();
});
&lt;/script&gt;
&lt;div id = "tabs"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href = "#tab-1"&gt;
RuTube
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-2"&gt;
Платформа
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-3"&gt;
VKvideo
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href = "#tab-4"&gt;
Youtube
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id ="tab-0"&gt;
&lt;/div&gt;
&lt;div id ="tab-1"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="rutube-player" type="text/html"
width="647" height="364"
src="https://rutube.ru/play/embed/4a71b855759392e4135cda667f30e86f"
webkitAllowFullScreen mozallowfullscreen allowFullScreen
allow="clipboard-write" frameborder="0"&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-2"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="plvideo-player" type="text/html"
width="647" height="364"
src="https://plvideo.ru/embed/SwKzG-swMcwg"
allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-3"&gt;
&lt;div class="embed video-player"&gt;
&lt;iframe class="vkvideo-player" type="text/html"
src="https://vkvideo.ru/video_ext.php?oid=606414976&amp;id=456239705&amp;hd=2"
width="647" height="364" allow="autoplay; encrypted-media; fullscreen; picture-in-picture; screen-wake-lock;" frameborder="0" allowfullscreen&gt;
&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id ="tab-4"&gt;
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/lhdLoxZ6T9c?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
После установки Linux
&lt;h2 id="домашнее-задание"&gt;&lt;span class="section-num"&gt;4&lt;/span&gt; Домашнее задание&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Дождитесь загрузки графического окружения и откройте терминал. В окне терминала проанализируйте последовательность загрузки системы, выполнив команду &lt;code&gt;dmesg&lt;/code&gt;. Можно просто просмотреть вывод этой команды:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dmesg &lt;span class="p"&gt;|&lt;/span&gt; less
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Можно использовать поиск с помощью &lt;code&gt;grep&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dmesg &lt;span class="p"&gt;|&lt;/span&gt; grep -i &lt;span class="s2"&gt;&amp;#34;то, что ищем&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Получите следующую информацию.
&lt;ul&gt;
&lt;li&gt;Версия ядра Linux (Linux version).&lt;/li&gt;
&lt;li&gt;Частота процессора (Detected Mhz processor).&lt;/li&gt;
&lt;li&gt;Модель процессора (CPU0).&lt;/li&gt;
&lt;li&gt;Объём доступной оперативной памяти (Memory available).&lt;/li&gt;
&lt;li&gt;Тип обнаруженного гипервизора (Hypervisor detected).&lt;/li&gt;
&lt;li&gt;Тип файловой системы корневого раздела.&lt;/li&gt;
&lt;li&gt;Последовательность монтирования файловых систем.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="содержание-отчёта"&gt;&lt;span class="section-num"&gt;5&lt;/span&gt; Содержание отчёта&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Отчёт должен включать:
&lt;ul&gt;
&lt;li&gt;титульный лист;&lt;/li&gt;
&lt;li&gt;формулировку задания работы;&lt;/li&gt;
&lt;li&gt;описание результатов выполнения задания:
&lt;ul&gt;
&lt;li&gt;краткое описание действия;&lt;/li&gt;
&lt;li&gt;вводимую команду или команды;&lt;/li&gt;
&lt;li&gt;результаты выполнения команд (снимок экрана);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;выводы, согласованные с заданием работы;&lt;/li&gt;
&lt;li&gt;ответы на контрольные вопросы;&lt;/li&gt;
&lt;li&gt;отчёт о выполнении дополнительного задания.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="контрольные-вопросы"&gt;&lt;span class="section-num"&gt;6&lt;/span&gt; Контрольные вопросы&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Какую информацию содержит учётная запись пользователя?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Укажите команды терминала и приведите примеры:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;для получения справки по команде;&lt;/li&gt;
&lt;li&gt;для перемещения по файловой системе;&lt;/li&gt;
&lt;li&gt;для просмотра содержимого каталога;&lt;/li&gt;
&lt;li&gt;для определения объёма каталога;&lt;/li&gt;
&lt;li&gt;для создания / удаления каталогов / файлов;&lt;/li&gt;
&lt;li&gt;для задания определённых прав на файл / каталог;&lt;/li&gt;
&lt;li&gt;для просмотра истории команд.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Что такое файловая система? Приведите примеры с краткой характеристикой.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Как посмотреть, какие файловые системы подмонтированы в ОС?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Как удалить зависший процесс?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;При ответах на контрольные вопросы рекомендуется ознакомиться с информацией из [&lt;a href="#citeproc_bib_item_1"&gt;1&lt;/a&gt;; &lt;a href="#citeproc_bib_item_1"&gt;1&lt;/a&gt;–&lt;a href="#citeproc_bib_item_7"&gt;7&lt;/a&gt;].&lt;/p&gt;
&lt;h2 id="библиография"&gt;&lt;span class="section-num"&gt;7&lt;/span&gt; Библиография&lt;/h2&gt;
&lt;h2 id="литература"&gt;Литература&lt;/h2&gt;
&lt;div class="csl-bib-body"&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_1"&gt;&lt;/a&gt;1. Dash, P. Getting Started with Oracle VM VirtualBox / P. Dash. – Packt Publishing Ltd, 2013. – 86 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_2"&gt;&lt;/a&gt;2. Colvin, H. VirtualBox: An Ultimate Guide Book on Virtualization with VirtualBox. VirtualBox / H. Colvin. – CreateSpace Independent Publishing Platform, 2015. – 70 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_3"&gt;&lt;/a&gt;3. Vugt, S. van. Red Hat RHCSA/RHCE 7 cert guide : Red Hat Enterprise Linux 7 (EX200 and EX300) : Certification Guide. Red Hat RHCSA/RHCE 7 cert guide / S. van Vugt. – Pearson IT Certification, 2016. – 1008 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_4"&gt;&lt;/a&gt;4. Робачевский, А. Операционная система UNIX / А. Робачевский, С. Немнюгин, О. Стесик. – 2-е изд. – Санкт-Петербург : БХВ-Петербург, 2010. – 656 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_5"&gt;&lt;/a&gt;5. Немет, Э. Unix и Linux: руководство системного администратора. Unix и Linux / Э. Немет, Г. Снайдер, Т.Р. Хейн, Б. Уэйли. – 4-е изд. – Вильямс, 2014. – 1312 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_6"&gt;&lt;/a&gt;6. Колисниченко, Д.Н. Самоучитель системного администратора Linux : Системный администратор / Д.Н. Колисниченко. – Санкт-Петербург : БХВ-Петербург, 2011. – 544 сс.&lt;/div&gt;
&lt;div class="csl-entry"&gt;&lt;a id="citeproc_bib_item_7"&gt;&lt;/a&gt;7. Robbins, A. Bash Pocket Reference / A. Robbins. – O’Reilly Media, 2016. – 156 сс.&lt;/div&gt;
&lt;/div&gt;</description></item><item><title>Лабораторная работа Первоначальна настройка git</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-initial-git-setup/</link><pubDate>Wed, 06 Apr 2022 18:06:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-initial-git-setup/</guid><description>&lt;p&gt;Лабораторная работа &lt;em&gt;Первоначальна настройка git&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id="цель-работы"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Цель работы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Изучить идеологию и применение средств контроля версий.&lt;/li&gt;
&lt;li&gt;Освоить умения по работе с git.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="теоретические-сведения"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Теоретические сведения&lt;/h2&gt;
&lt;h3 id="системы-контроля-версий-dot-общие-понятия"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Системы контроля версий. Общие понятия&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Системы контроля версий (Version Control System, VCS)&lt;/em&gt; применяются при работе нескольких человек над одним проектом. Обычно основное дерево проекта хранится в локальном или удалённом репозитории, к которому настроен доступ для участников проекта. При внесении изменений в содержание проекта система контроля версий позволяет их фиксировать, совмещать изменения, произведённые разными участниками проекта, производить откат к любой более ранней версии проекта, если это требуется.&lt;/li&gt;
&lt;li&gt;В классических системах контроля версий используется централизованная модель, предполагающая наличие единого репозитория для хранения файлов. Выполнение большинства функций по управлению версиями осуществляется специальным сервером. Участник проекта (пользователь) перед началом работы посредством определённых команд получает нужную ему версию файлов. После внесения изменений, пользователь размещает новую версию в хранилище. При этом предыдущие версии не удаляются из центрального хранилища и к ним можно вернуться в любой момент. Сервер может сохранять не полную версию изменённых файлов, а производить так называемую дельта-компрессию &amp;mdash; сохранять только изменения между последовательными версиями, что позволяет уменьшить объём хранимых данных.&lt;/li&gt;
&lt;li&gt;Системы контроля версий поддерживают возможность отслеживания и разрешения конфликтов, которые могут возникнуть при работе нескольких человек над одним файлом. Можно объединить (слить) изменения, сделанные разными участниками (автоматически или вручную), вручную выбрать нужную версию, отменить изменения вовсе или заблокировать файлы для изменения. В зависимости от настроек блокировка не позволяет другим пользователям получить рабочую копию или препятствует изменению рабочей копии файла средствами файловой системы ОС, обеспечивая таким образом, привилегированный доступ только одному пользователю, работающему с файлом.&lt;/li&gt;
&lt;li&gt;Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить.&lt;/li&gt;
&lt;li&gt;В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным.&lt;/li&gt;
&lt;li&gt;Среди классических VCS наиболее известны CVS, Subversion, а среди распределённых &amp;mdash; Git, Bazaar, Mercurial. Принципы их работы схожи, отличаются они в основном синтаксисом используемых в работе команд.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="примеры-использования-git"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Примеры использования git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Система контроля версий Git представляет собой набор программ командной строки. Доступ к ним можно получить из терминала посредством ввода команды &lt;code&gt;git&lt;/code&gt; с различными опциями.&lt;/li&gt;
&lt;li&gt;Благодаря тому, что Git является распределённой системой контроля версий, резервную копию локального хранилища можно сделать простым копированием или архивацией.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="основные-команды-git"&gt;&lt;span class="section-num"&gt;2.2.1&lt;/span&gt; Основные команды git&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Перечислим наиболее часто используемые команды &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создание основного дерева репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Получение обновлений (изменений) текущего дерева из центрального репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git pull
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отправка всех произведённых изменений локального дерева в центральный репозиторий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Просмотр списка изменённых файлов в текущей директории:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Просмотр текущих изменений:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git diff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сохранение текущих изменений:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Добавить все изменённые и/или созданные файлы и/или каталоги:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Добавить конкретные изменённые и/или созданные файлы и/или каталоги:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add имена_файлов
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Удалить файл и/или каталог из индекса репозитория (при этом файл и/или каталог остаётся в локальной директории):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git rm имена_файлов
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сохранение добавленных изменений:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Сохранить все добавленные изменения и все изменённые файлы:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;Описание коммита&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сохранить добавленные изменения с внесением комментария через встроенный редактор:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создание новой ветки, базирующейся на текущей:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git checkout -b имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Переключение на некоторую ветку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git checkout имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;При переключении на ветку, которой ещё нет в локальном репозитории, она будет создана и связана с удалённой.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отправка изменений конкретной ветки в центральный репозиторий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push origin имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Слияние ветки с текущим деревом:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git merge --no-ff имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Удаление ветки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;удаление локальной уже слитой с основным деревом ветки:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git branch -d имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;принудительное удаление локальной ветки:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git branch -D имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;удаление ветки с центрального репозитория:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push origin :имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="стандартные-процедуры-работы-при-наличии-центрального-репозитория"&gt;&lt;span class="section-num"&gt;2.2.2&lt;/span&gt; Стандартные процедуры работы при наличии центрального репозитория&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Работа пользователя со своей веткой начинается с проверки и получения изменений из центрального репозитория (при этом в локальное дерево до начала этой процедуры не должно было вноситься изменений):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git checkout master
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git pull
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git checkout -b имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Затем можно вносить изменения в локальном дереве и/или ветке.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;После завершения внесения какого-то изменения в файлы и/или каталоги проекта необходимо разместить их в центральном репозитории. Для этого необходимо проверить, какие файлы изменились к текущему моменту:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;При необходимости удаляем лишние файлы, которые не хотим отправлять в центральный репозиторий.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Затем полезно просмотреть текст изменений на предмет соответствия правилам ведения чистых коммитов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git diff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если какие-либо файлы не должны попасть в коммит, то помечаем только те файлы, изменения которых нужно сохранить. Для этого используем команды добавления и/или удаления с нужными опциями:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add …
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git rm …
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если нужно сохранить все изменения в текущем каталоге, то используем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Затем сохраняем изменения, поясняя, что было сделано:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s2"&gt;&amp;#34;Some commit message&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отправляем изменения в центральный репозиторий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push origin имя_ветки
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;или&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="работа-с-локальным-репозиторием"&gt;&lt;span class="section-num"&gt;2.2.3&lt;/span&gt; Работа с локальным репозиторием&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создадим локальный репозиторий.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сначала сделаем предварительную конфигурацию, указав имя и email владельца репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.name &lt;span class="s2"&gt;&amp;#34;Имя Фамилия&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.email &lt;span class="s2"&gt;&amp;#34;work@mail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настроим utf-8 в выводе сообщений &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global quotepath &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Для инициализации локального репозитория, расположенного, например, в каталоге &lt;code&gt;~/tutorial&lt;/code&gt;, необходимо ввести в командной строке:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir tutorial
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; tutorial
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;После это в каталоге &lt;code&gt;tutorial&lt;/code&gt; появится каталог &lt;code&gt;.git&lt;/code&gt;, в котором будет храниться история изменений.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Создадим тестовый текстовый файл &lt;code&gt;hello.txt&lt;/code&gt; и добавим его в локальный репозиторий:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt; &amp;gt; hello.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add hello.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;Новый файл&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Воспользуемся командой &lt;code&gt;status&lt;/code&gt; для просмотра изменений в рабочем каталоге, сделанных с момента последней ревизии:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Во время работы над проектом так или иначе могут создаваться файлы, которые не требуется добавлять в последствии в репозиторий. Например, временные файлы, создаваемые редакторами, или объектные файлы, создаваемые компиляторами. Можно прописать шаблоны игнорируемых при добавлении в репозиторий типов файлов в файл &lt;code&gt;.gitignore&lt;/code&gt; с помощью сервисов. Для этого сначала нужно получить список имеющихся шаблонов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -s https://www.gitignore.io/api/list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Затем скачать шаблон, например, для C и C++&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -s https://www.gitignore.io/api/c &amp;gt;&amp;gt; .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;curl -L -s https://www.gitignore.io/api/c++ &amp;gt;&amp;gt; .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="работа-с-сервером-репозиториев"&gt;&lt;span class="section-num"&gt;2.2.4&lt;/span&gt; Работа с сервером репозиториев&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Для последующей идентификации пользователя на сервере репозиториев необходимо сгенерировать пару ключей (приватный и открытый):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -C &lt;span class="s2"&gt;&amp;#34;Имя Фамилия &amp;lt;work@mail&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ключи сохраняться в каталоге &lt;code&gt;~/.ssh/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Существует несколько доступных серверов репозиториев с возможностью бесплатного размещения данных. Например,
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Для работы с ним необходимо сначала завести на сайте
учётную запись. Затем необходимо загрузить сгенерённый нами ранее открытый ключ.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Для этого зайти на сайт
под своей учётной записью и перейти в меню &lt;em&gt;GitHub setting&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;После этого выбрать в боковом меню &lt;em&gt;GitHub setting&amp;gt;SSH-ключи&lt;/em&gt; и нажать кнопку &lt;em&gt;Добавить ключ&lt;/em&gt;. Скопировав из локальной консоли ключ в буфер обмена:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat ~/.ssh/id_rsa.pub &lt;span class="p"&gt;|&lt;/span&gt; xclip -sel clip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Вставляем ключ в появившееся на сайте поле.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;После этого можно создать на сайте репозиторий, выбрав в меню , дать ему название и сделать общедоступным (публичным).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Для загрузки репозитория из локального каталога на сервер выполняем следующие команды:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-sh" data-lang="sh"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git remote add origin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ssh://git@github.com/&amp;lt;username&amp;gt;/&amp;lt;reponame&amp;gt;.git
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Далее на локальном компьютере можно выполнять стандартные процедуры для работы с &lt;code&gt;git&lt;/code&gt; при наличии центрального репозитория.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="базовая-настройка-git"&gt;&lt;span class="section-num"&gt;2.3&lt;/span&gt; Базовая настройка git&lt;/h3&gt;
&lt;h4 id="первичная-настройка-параметров-git"&gt;&lt;span class="section-num"&gt;2.3.1&lt;/span&gt; Первичная настройка параметров git&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Зададим имя и email владельца репозитория:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.name &lt;span class="s2"&gt;&amp;#34;Name Surname&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.email &lt;span class="s2"&gt;&amp;#34;work@mail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Настроим utf-8 в выводе сообщений git:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.quotepath &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Настройте верификацию и подписание коммитов git (см.
).&lt;/li&gt;
&lt;li&gt;Зададим имя начальной ветки (будем называть её &lt;code&gt;master&lt;/code&gt;):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global init.defaultBranch master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="учёт-переносов-строк"&gt;&lt;span class="section-num"&gt;2.3.2&lt;/span&gt; Учёт переносов строк&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;В разных операционных системах приняты разные символы для перевода строк:
&lt;ul&gt;
&lt;li&gt;Windows: &lt;code&gt;\r\n&lt;/code&gt; (&lt;code&gt;CR&lt;/code&gt; и &lt;code&gt;LF&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;Unix: &lt;code&gt;\n&lt;/code&gt; (&lt;code&gt;LF&lt;/code&gt;);&lt;/li&gt;
&lt;li&gt;Mac: &lt;code&gt;\r&lt;/code&gt; (&lt;code&gt;CR&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Посмотреть значения переносов строк в репозитории можно командой:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git ls-files --eol
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Параметр &lt;code&gt;autocrlf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Настройка &lt;code&gt;core.autocrlf&lt;/code&gt; предназначена для того, чтобы в главном репозитории все переводы строк текстовых файлах были одинаковы.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настройка &lt;code&gt;core.autocrlf&lt;/code&gt; с параметрами &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;input&lt;/code&gt; делает все переводы строк текстовых файлов в главном репозитории одинаковыми.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;core.autocrlf true&lt;/code&gt;: конвертация &lt;code&gt;CRLF-&amp;gt;LF&lt;/code&gt; при коммите и обратно &lt;code&gt;LF-&amp;gt;CRLF&lt;/code&gt; при выгрузке кода из репозитория на файловую систему (обычно используется в Windows).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;core.autocrlf input&lt;/code&gt;: конвертация &lt;code&gt;CRLF-&amp;gt;LF&lt;/code&gt; только при коммитах (используются в MacOS/Linux).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Варианты конвертации&lt;/p&gt;
&lt;div class="table-caption"&gt;
&lt;span class="table-number"&gt;&amp;#1058;&amp;#1072;&amp;#1073;&amp;#1083;&amp;#1080;&amp;#1094;&amp;#1072; 1:&lt;/span&gt;
Варианты конвертации для разных значений параметра core.autocrlf
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;core.autocrlf&lt;/th&gt;
&lt;th&gt;false&lt;/th&gt;
&lt;th&gt;input&lt;/th&gt;
&lt;th&gt;true&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;git commit&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; LF&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; LF&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; CRLF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; CRLF&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; LF&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; CRLF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git checkout&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; LF&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; LF&lt;/td&gt;
&lt;td&gt;LF -&amp;gt; CRLF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;td&gt;CR -&amp;gt; CR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; CRLF&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; CRLF&lt;/td&gt;
&lt;td&gt;CRLF -&amp;gt; CRLF&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Установка параметра:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Для Windows
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.autocrlf &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для Linux
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.autocrlf input
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Параметр &lt;code&gt;safecrlf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Настройка &lt;code&gt;core.safecrlf&lt;/code&gt; предназначена для проверки, является ли окончаний строк обратимым для текущей настройки &lt;code&gt;core.autocrlf&lt;/code&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;core.safecrlf true&lt;/code&gt;: запрещается необратимое преобразование &lt;code&gt;lf&amp;lt;-&amp;gt;crlf&lt;/code&gt;. Полезно, когда существуют бинарные файлы, похожие на текстовые файлы.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;core.safecrlf warn&lt;/code&gt;: печать предупреждения, но коммиты с необратимым переходом принимаются.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Установка параметра:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.safecrlf warn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="создание-ключа-ssh"&gt;&lt;span class="section-num"&gt;2.4&lt;/span&gt; Создание ключа ssh&lt;/h3&gt;
&lt;h4 id="общая-информация"&gt;&lt;span class="section-num"&gt;2.4.1&lt;/span&gt; Общая информация&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Алгоритмы шифрования ssh&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Аутентификация&lt;/p&gt;
&lt;p&gt;В SSH поддерживается четыре алгоритма аутентификации по открытым ключам:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DSA:
&lt;ul&gt;
&lt;li&gt;размер ключей DSA не может превышать 1024, его следует отключить;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RSA:
&lt;ul&gt;
&lt;li&gt;следует создавать ключ большого размера: 4096 бит;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ECDSA:
&lt;ul&gt;
&lt;li&gt;ECDSA завязан на технологиях NIST, его следует отключить;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ed25519:
&lt;ul&gt;
&lt;li&gt;используется пока не везде.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Симметричные шифры&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Из 15 поддерживаемых в SSH алгоритмов симметричного шифрования, безопасными можно считать:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chacha20-poly1305&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aes*-ctr&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aes*-gcm&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Шифры &lt;code&gt;3des-cbc&lt;/code&gt; и &lt;code&gt;arcfour&lt;/code&gt; потенциально уязвимы в силу использования DES и RC4.&lt;/li&gt;
&lt;li&gt;Шифр &lt;code&gt;cast128-cbc&lt;/code&gt; применяет слишком короткий размер блока (64 бит).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Обмен ключами&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Применяемые в SSH методы обмена ключей DH (Diffie-Hellman) и ECDH (Elliptic Curve Diffie-Hellman) можно считать безопасными.&lt;/li&gt;
&lt;li&gt;Из 8 поддерживаемых в SSH протоколов обмена ключами вызывают подозрения три, основанные на рекомендациях NIST:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ecdh-sha2-nistp256&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ecdh-sha2-nistp384&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ecdh-sha2-nistp521&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Не стоит использовать протоколы, основанные на &lt;em&gt;SHA1&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Файлы ssh-ключей&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;По умолчанию пользовательские ssh-ключи сохраняются в каталоге &lt;code&gt;~/.ssh&lt;/code&gt; в домашнем каталоге пользователя.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Убедитесь, что у вас ещё нет ключа.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Файлы закрытых ключей имеют названия типа &lt;code&gt;id_&amp;lt;алгоритм&amp;gt;&lt;/code&gt; (например, &lt;code&gt;id_dsa&lt;/code&gt;, &lt;code&gt;id_rsa&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;По умолчанию закрытые ключи имеют имена:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_dsa
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_ecdsa
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_ed25519
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Открытые ключи имеют дополнительные расширения &lt;code&gt;.pub&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;По умолчанию публичные ключи имеют имена:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_dsa.pub
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_ecdsa.pub
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_ed25519.pub
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;id_rsa.pub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;При создании ключа команда попросит ввести любую ключевую фразу для более надёжной защиты вашего пароля. Можно пропустить этот этап, нажав &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сменить пароль на ключ можно с помощью команды:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -p
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="создание-ключа-ssh"&gt;&lt;span class="section-num"&gt;2.4.2&lt;/span&gt; Создание ключа ssh&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ключ ssh создаётся командой:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -t &amp;lt;алгоритм&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создайте ключи:
&lt;ul&gt;
&lt;li&gt;по алгоритму &lt;em&gt;rsa&lt;/em&gt; с ключём размером 4096 бит:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;по алгоритму &lt;em&gt;ed25519&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -t ed25519
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;При создании ключа команда попросит ввести любую ключевую фразу для более надёжной защиты вашего пароля. Можно пропустить этот этап, нажав &lt;code&gt;Enter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Сменить пароль на ключ можно с помощью команды:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -p
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="добавление-ssh-ключа-в-учётную-запись-github"&gt;&lt;span class="section-num"&gt;2.4.3&lt;/span&gt; Добавление SSH-ключа в учётную запись GitHub&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Скопируйте созданный SSH-ключ в буфер обмена командой:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;xclip -i &amp;lt; ~/.ssh/id_ed25519.pub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Откройте настройки своего аккаунта на GitHub и перейдем в раздел &lt;code&gt;SSH and GPC keys&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Нажмите кнопку &lt;code&gt;ew SSH key&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Добавьте в поле &lt;code&gt;Title&lt;/code&gt; название этого ключа, например, &lt;code&gt;ed25519@hostname&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Вставьте из буфера обмена в поле &lt;code&gt;Key&lt;/code&gt; ключ.&lt;/li&gt;
&lt;li&gt;Нажмите кнопку &lt;code&gt;Add SSH key&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="верификация-коммитов"&gt;&lt;span class="section-num"&gt;2.5&lt;/span&gt; Верификация коммитов&lt;/h3&gt;
&lt;h4 id="проверка-коммитов-в-git"&gt;&lt;span class="section-num"&gt;2.5.1&lt;/span&gt; Проверка коммитов в Git&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;GitHub и GitLab будут показывать значок &lt;em&gt;Verified&lt;/em&gt; рядом с вашими новыми коммитами.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Режим бдительности (vigilant mode)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;На GitHub есть настройка
.&lt;/li&gt;
&lt;li&gt;Все неподписанные коммиты будут явно помечены как &lt;em&gt;Unverified&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Включается это в настройках в разделе &lt;em&gt;SSH and GPG keys&lt;/em&gt;. Установите метку на &lt;em&gt;Flag unsigned commits as unverified&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="верификация-коммитов-с-помощью-pgp"&gt;&lt;span class="section-num"&gt;2.5.2&lt;/span&gt; Верификация коммитов с помощью &lt;em&gt;PGP&lt;/em&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Как настроить PGP-подпись коммитов с помощью &lt;code&gt;gpg&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Общая информация&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Коммиты имеют следующие свойства:
&lt;ul&gt;
&lt;li&gt;author (автор) &amp;mdash; контрибьютор, выполнивший работу (указывается для справки);&lt;/li&gt;
&lt;li&gt;committer (коммитер) &amp;mdash; пользователь, который закоммитил изменения.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Эти свойства можно переопределить при совершении коммита.&lt;/li&gt;
&lt;li&gt;Авторство коммита можно подделать.&lt;/li&gt;
&lt;li&gt;В git есть функция подписи коммитов.&lt;/li&gt;
&lt;li&gt;Для подписывания коммитов используется технология PGP (см.
).&lt;/li&gt;
&lt;li&gt;Подпись коммита позволяет удостовериться в том, кто является коммитером. Авторство не проверяется.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Создание ключа&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Генерируем ключ&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --full-generate-key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Из предложенных опций выбираем:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;тип &lt;em&gt;RSA and RSA&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;размер 4096;&lt;/li&gt;
&lt;li&gt;выберите срок действия; значение по умолчанию &amp;mdash; 0 (срок действия не истекает никогда).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GPG запросит личную информацию, которая сохранится в ключе:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Имя (не менее 5 символов).&lt;/li&gt;
&lt;li&gt;Адрес электронной почты.
&lt;ul&gt;
&lt;li&gt;При вводе email убедитесь, что он соответствует адресу, используемому на GitHub.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Комментарий. Можно ввести что угодно или нажать клавишу ввода, чтобы оставить это поле пустым.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Экспорт ключа&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Выводим список ключей и копируем отпечаток приватного ключа:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --list-secret-keys --keyid-format LONG
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отпечаток ключа &amp;mdash; это последовательность байтов, используемая для идентификации более длинного, по сравнению с самим отпечатком ключа.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Формат строки:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-text" data-lang="text"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sec Алгоритм/Отпечаток_ключа Дата_создания [Флаги] [Годен_до]
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; ID_ключа
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Экспортируем ключ в формате ASCII по его отпечатку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;Добавление PGP ключа в GitHub&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Копируем ключ и добавляем его в настройках профиля на GitHub (или GitLab).&lt;/li&gt;
&lt;li&gt;Cкопируйте ваш сгенерированный PGP ключ в буфер обмена:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt; &lt;span class="p"&gt;|&lt;/span&gt; xclip -sel clip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Перейдите в настройки GitHub (
), нажмите на кнопку &lt;em&gt;New GPG key&lt;/em&gt; и вставьте полученный ключ в поле ввода.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="5"&gt;
&lt;li&gt;
&lt;p&gt;Подписывание коммитов git&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Подпись коммитов при работе через терминал:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -a -S -m &lt;span class="s1"&gt;&amp;#39;your commit message&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Флаг &lt;code&gt;-S&lt;/code&gt; означает создание подписанного коммита. При этом может потребоваться ввод кодовой фразы, заданной при генерации GPG-ключа.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="6"&gt;
&lt;li&gt;
&lt;p&gt;Настройка автоматических подписей коммитов git&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Используя введёный email, укажите Git применять его при подписи коммитов:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.signingkey &amp;lt;PGP Fingerprint&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global commit.gpgsign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global gpg.program &lt;span class="k"&gt;$(&lt;/span&gt;which gpg2&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="задание"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Задание&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создать базовую конфигурацию для работы с git.&lt;/li&gt;
&lt;li&gt;Создать ключ &lt;em&gt;SSH&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Создать ключ &lt;em&gt;PGP&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Зарегистрироваться на &lt;em&gt;Github&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Настроить подписи git.&lt;/li&gt;
&lt;li&gt;Создать локальный каталог для выполнения заданий по предмету.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="последовательность-выполнения-работы"&gt;&lt;span class="section-num"&gt;4&lt;/span&gt; Последовательность выполнения работы&lt;/h2&gt;
&lt;h3 id="установка-git"&gt;&lt;span class="section-num"&gt;4.1&lt;/span&gt; Установка git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Установим &lt;em&gt;git&lt;/em&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="установка-gh"&gt;&lt;span class="section-num"&gt;4.2&lt;/span&gt; Установка gh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Установим интерфейс командной строки к github (см.
):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install gh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="базовая-настройка-git"&gt;&lt;span class="section-num"&gt;4.3&lt;/span&gt; Базовая настройка git&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Зададим имя и email владельца репозитория:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.name &lt;span class="s2"&gt;&amp;#34;Name Surname&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.email &lt;span class="s2"&gt;&amp;#34;work@mail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настроим utf-8 в выводе сообщений git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.quotepath &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Настройте верификацию и подписание коммитов git (см.
).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Зададим имя начальной ветки (будем называть её &lt;code&gt;master&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global init.defaultBranch master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Параметр &lt;code&gt;autocrlf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.autocrlf input
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Параметр &lt;code&gt;safecrlf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global core.safecrlf warn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="настройка-github"&gt;&lt;span class="section-num"&gt;4.4&lt;/span&gt; Настройка github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Создайте учётную запись на
.&lt;/li&gt;
&lt;li&gt;Заполните основные данные на
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="настройка-gh"&gt;&lt;span class="section-num"&gt;4.5&lt;/span&gt; Настройка gh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Для начала необходимо авторизоваться
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh auth login
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Утилита задаст несколько наводящих вопросов.&lt;/li&gt;
&lt;li&gt;Авторизоваться можно через броузер.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="создайте-ключ-ssh"&gt;&lt;span class="section-num"&gt;4.6&lt;/span&gt; Создайте ключ SSH&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Создадим ключ для доступа к github и подписи коммитов:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519-git -C &lt;span class="s2"&gt;&amp;#34;your_email@example.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Добавляем ключ в агент (см.
):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-add ~/.ssh/id_ed25519-git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Добавьте ключ в учётную запись github (см.
):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh ssh-key add ~/.ssh/id_ed25519-git.pub --title your_email@example.com
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh ssh-key add ~/.ssh/id_ed25519-git.pub --title your_email@example.com --type signing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="настройка-подписи-ключом-ssh"&gt;&lt;span class="section-num"&gt;4.7&lt;/span&gt; Настройка подписи ключом ssh&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Настроим подписывание в git:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global commit.gpgsign &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global gpg.format ssh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Получим список ключей (используя агент хранения ключей,
):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ssh-add -L
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Указываем ключ:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git config --global user.signingkey &lt;span class="s2"&gt;&amp;#34;ssh-ed25519 &amp;lt;key_id&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Для проверки работы подписывания запустите команду в любом из ваших репозиториев:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit --allow-empty --message&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;Testing SSH signing&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="шаблон-для-рабочего-пространства"&gt;&lt;span class="section-num"&gt;4.8&lt;/span&gt; Шаблон для рабочего пространства&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Репозиторий:
.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="сознание-репозитория-курса-на-основе-шаблона"&gt;&lt;span class="section-num"&gt;4.9&lt;/span&gt; Сознание репозитория курса на основе шаблона&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Необходимо создать шаблон рабочего пространства (см.
).&lt;/li&gt;
&lt;li&gt;Например, для 2024-2025 учебного года и предмета «Операционные системы» (код предмета &lt;code&gt;os-intro&lt;/code&gt;) создание репозитория примет следующий вид:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p ~/work/study/2024-2025/&lt;span class="s2"&gt;&amp;#34;Операционные системы&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/work/study/2024-2025/&lt;span class="s2"&gt;&amp;#34;Операционные системы&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh repo create study_2024-2025_os-intro --template&lt;span class="o"&gt;=&lt;/span&gt;yamadharma/course-directory-student-template --public
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git clone --recursive git@github.com:&amp;lt;owner&amp;gt;/study_2024-2025_os-intro.git os-intro
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="настройка-каталога-курса"&gt;&lt;span class="section-num"&gt;4.10&lt;/span&gt; Настройка каталога курса&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Перейдите в каталог курса:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/work/study/2024-2025/&lt;span class="s2"&gt;&amp;#34;Операционные системы&amp;#34;&lt;/span&gt;/os-intro
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Удалите лишние файлы:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;rm package.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создайте необходимые каталоги:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; os-intro &amp;gt; COURSE
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Отправьте файлы на сервер:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;feat(main): make course structure&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="содержание-отчёта"&gt;&lt;span class="section-num"&gt;5&lt;/span&gt; Содержание отчёта&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Титульный лист с указанием номера лабораторной работы и ФИО студента.&lt;/li&gt;
&lt;li&gt;Формулировка цели работы.&lt;/li&gt;
&lt;li&gt;Описание результатов выполнения задания:
&lt;ul&gt;
&lt;li&gt;скриншоты (снимки экрана), фиксирующие выполнение лабораторной работы;&lt;/li&gt;
&lt;li&gt;листинги (исходный код) программ (если они есть);&lt;/li&gt;
&lt;li&gt;результаты выполнения программ (текст или снимок экрана в зависимости от задания).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Выводы, согласованные с целью работы.&lt;/li&gt;
&lt;li&gt;Ответы на контрольные вопросы.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="контрольные-вопросы"&gt;&lt;span class="section-num"&gt;6&lt;/span&gt; Контрольные вопросы&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Что такое системы контроля версий (VCS) и для решения каких задач они предназначаются?&lt;/li&gt;
&lt;li&gt;Объясните следующие понятия VCS и их отношения: хранилище, commit, история, рабочая копия.&lt;/li&gt;
&lt;li&gt;Что представляют собой и чем отличаются централизованные и децентрализованные VCS? Приведите примеры VCS каждого вида.&lt;/li&gt;
&lt;li&gt;Опишите действия с VCS при единоличной работе с хранилищем.&lt;/li&gt;
&lt;li&gt;Опишите порядок работы с общим хранилищем VCS.&lt;/li&gt;
&lt;li&gt;Каковы основные задачи, решаемые инструментальным средством &lt;code&gt;git&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;Назовите и дайте краткую характеристику командам &lt;code&gt;git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Приведите примеры использования при работе с локальным и удалённым репозиториями.&lt;/li&gt;
&lt;li&gt;Что такое и зачем могут быть нужны ветви (branches)?&lt;/li&gt;
&lt;li&gt;Как и зачем можно игнорировать некоторые файлы при commit?&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Настройка рабочей среды</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-work-environment-setup/</link><pubDate>Sun, 30 Jul 2023 15:25:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-work-environment-setup/</guid><description>&lt;p&gt;Настройка рабочей среды.&lt;/p&gt;
&lt;details class="print:hidden xl:hidden" &gt;
&lt;summary&gt;Содержание&lt;/summary&gt;
&lt;div class="text-sm"&gt;
&lt;nav id="TableOfContents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#менеджер-паролей-pass"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Менеджер паролей pass&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#основные-свойства"&gt;&lt;span class="section-num"&gt;1.1&lt;/span&gt; Основные свойства&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#структура-базы-паролей"&gt;&lt;span class="section-num"&gt;1.2&lt;/span&gt; Структура базы паролей&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#семантическая-структура-базы-паролей"&gt;&lt;span class="section-num"&gt;1.2.1&lt;/span&gt; Семантическая структура базы паролей&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#реализации"&gt;&lt;span class="section-num"&gt;1.3&lt;/span&gt; Реализации&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#утилиты-командной-строки"&gt;&lt;span class="section-num"&gt;1.3.1&lt;/span&gt; Утилиты командной строки&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#графические-интерфейсы"&gt;&lt;span class="section-num"&gt;1.3.2&lt;/span&gt; Графические интерфейсы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#приложения-для-android"&gt;&lt;span class="section-num"&gt;1.3.3&lt;/span&gt; Приложения для Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#пакеты-для-emacs"&gt;&lt;span class="section-num"&gt;1.3.4&lt;/span&gt; Пакеты для Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#управление-файлами-конфигурации"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Управление файлами конфигурации&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#общая-информация"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Общая информация&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#конфигурация-chezmoi"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Конфигурация &lt;code&gt;chezmoi&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#рабочие-файлы"&gt;&lt;span class="section-num"&gt;2.2.1&lt;/span&gt; Рабочие файлы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#автоматически-создавать-файл-конфигурации-на-новой-машине"&gt;&lt;span class="section-num"&gt;2.2.2&lt;/span&gt; Автоматически создавать файл конфигурации на новой машине&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#пересоздание-файл-конфигурации"&gt;&lt;span class="section-num"&gt;2.2.3&lt;/span&gt; Пересоздание файл конфигурации&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#шаблоны"&gt;&lt;span class="section-num"&gt;2.3&lt;/span&gt; Шаблоны&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#общая-информация"&gt;&lt;span class="section-num"&gt;2.3.1&lt;/span&gt; Общая информация&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#данные-шаблона"&gt;&lt;span class="section-num"&gt;2.3.2&lt;/span&gt; Данные шаблона&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#способы-создания-файла-шаблона"&gt;&lt;span class="section-num"&gt;2.3.3&lt;/span&gt; Способы создания файла шаблона&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#редактирование-файла-шаблона"&gt;&lt;span class="section-num"&gt;2.3.4&lt;/span&gt; Редактирование файла шаблона&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#тестирование-шаблонов"&gt;&lt;span class="section-num"&gt;2.3.5&lt;/span&gt; Тестирование шаблонов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#синтаксис-шаблона"&gt;&lt;span class="section-num"&gt;2.3.6&lt;/span&gt; Синтаксис шаблона&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#переменные-шаблона"&gt;&lt;span class="section-num"&gt;2.3.7&lt;/span&gt; Переменные шаблона&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#выполнение-лабораторной-работы"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Выполнение лабораторной работы&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#менеджер-паролей-pass"&gt;&lt;span class="section-num"&gt;3.1&lt;/span&gt; Менеджер паролей pass&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#установка"&gt;&lt;span class="section-num"&gt;3.1.1&lt;/span&gt; Установка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#настройка"&gt;&lt;span class="section-num"&gt;3.1.2&lt;/span&gt; Настройка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#настройка-интерфейса-с-броузером"&gt;&lt;span class="section-num"&gt;3.1.3&lt;/span&gt; Настройка интерфейса с броузером&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#сохранение-пароля"&gt;&lt;span class="section-num"&gt;3.1.4&lt;/span&gt; Сохранение пароля&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#управление-файлами-конфигурации"&gt;&lt;span class="section-num"&gt;3.2&lt;/span&gt; Управление файлами конфигурации&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#установка"&gt;&lt;span class="section-num"&gt;3.2.1&lt;/span&gt; Установка&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#дополнительное-программное-обеспечение"&gt;&lt;span class="section-num"&gt;3.3&lt;/span&gt; Дополнительное программное обеспечение&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#установка"&gt;&lt;span class="section-num"&gt;3.3.1&lt;/span&gt; Установка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#создание-собственного-репозитория-с-помощью-утилит"&gt;&lt;span class="section-num"&gt;3.3.2&lt;/span&gt; Создание собственного репозитория с помощью утилит&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#подключение-репозитория-к-своей-системе"&gt;&lt;span class="section-num"&gt;3.3.3&lt;/span&gt; Подключение репозитория к своей системе&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#использование-chezmoi-на-нескольких-машинах"&gt;&lt;span class="section-num"&gt;3.3.4&lt;/span&gt; Использование chezmoi на нескольких машинах&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#настройка-новой-машины-с-помощью-одной-команды"&gt;&lt;span class="section-num"&gt;3.3.5&lt;/span&gt; Настройка новой машины с помощью одной команды&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ежедневные-операции-c-chezmoi"&gt;&lt;span class="section-num"&gt;3.3.6&lt;/span&gt; Ежедневные операции c &lt;code&gt;chezmoi&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id="менеджер-паролей-pass"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Менеджер паролей pass&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Менеджер паролей &lt;code&gt;pass&lt;/code&gt; &amp;mdash; программа, сделанная в рамках идеологии Unix.&lt;/li&gt;
&lt;li&gt;Также носит название стандартного менеджера паролей для Unix (&lt;em&gt;The standard Unix password manager&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="основные-свойства"&gt;&lt;span class="section-num"&gt;1.1&lt;/span&gt; Основные свойства&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Данные хранятся в файловой системе в виде каталогов и файлов.&lt;/li&gt;
&lt;li&gt;Файлы шифруются с помощью GPG-ключа.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="структура-базы-паролей"&gt;&lt;span class="section-num"&gt;1.2&lt;/span&gt; Структура базы паролей&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Структура базы может быть произвольной, если Вы собираетесь использовать её напрямую, без промежуточного программного обеспечения. Тогда семантику структуры базы данных Вы держите в своей голове.&lt;/li&gt;
&lt;li&gt;Если же необходимо использовать дополнительное программное обеспечение, необходимо семантику заложить в структуру базы паролей.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="семантическая-структура-базы-паролей"&gt;&lt;span class="section-num"&gt;1.2.1&lt;/span&gt; Семантическая структура базы паролей&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Рассмотрим пользователя &lt;code&gt;user&lt;/code&gt; в домене &lt;code&gt;example.com&lt;/code&gt;, порт &lt;code&gt;22&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Отсутствие имени пользователя или порта в имени файла означает, что любое имя пользователя и порт будут совпадать:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;example.com.pgp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Соответствующее имя пользователя может быть именем файла внутри каталога, имя которого совпадает с хостом. Это полезно, если в базе есть пароли для нескольких пользователей на одном хосте:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;example.com/user.pgp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Имя пользователя также может быть записано в виде префикса, отделенного от хоста знаком &lt;code&gt;@&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user@example.com.pgp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Соответствующий порт может быть указан после хоста, отделённый двоеточием (&lt;code&gt;:&lt;/code&gt;):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;example.com:22.pgp
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;example.com:22/user.pgp
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;user@example.com:22.pgp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Эти все записи могут быть расположены в произвольных каталогах, задающих Вашу собственную иерархию.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="реализации"&gt;&lt;span class="section-num"&gt;1.3&lt;/span&gt; Реализации&lt;/h3&gt;
&lt;h4 id="утилиты-командной-строки"&gt;&lt;span class="section-num"&gt;1.3.1&lt;/span&gt; Утилиты командной строки&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;На данный момент существует 2 основных реализации:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pass&lt;/code&gt; &amp;mdash; классическая реализация в виде shell-скриптов (
);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gopass&lt;/code&gt; &amp;mdash; реализация на go с дополнительными интегрированными функциями (
).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Дальше в тексте будет использоваться программа &lt;code&gt;pass&lt;/code&gt;, но всё то же самое можно сделать с помощью программы &lt;code&gt;gopass&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="графические-интерфейсы"&gt;&lt;span class="section-num"&gt;1.3.2&lt;/span&gt; Графические интерфейсы&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;qtpass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;qtpass&lt;/code&gt; &amp;mdash; может работать как графический интерфейс к &lt;code&gt;pass&lt;/code&gt;, так и как самостоятельная программа. В настройках можно переключаться между использованием &lt;code&gt;pass&lt;/code&gt; и &lt;code&gt;gnupg&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;gopass-ui&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gopass-ui&lt;/code&gt; &amp;mdash; интерфейс к &lt;code&gt;gopass&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;webpass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;li&gt;Веб-интерфейс к pass.&lt;/li&gt;
&lt;li&gt;Написано на golang.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="приложения-для-android"&gt;&lt;span class="section-num"&gt;1.3.3&lt;/span&gt; Приложения для Android&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Password Store&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL:
&lt;/li&gt;
&lt;li&gt;Репозиторий с кодом:
&lt;/li&gt;
&lt;li&gt;Документация:
&lt;/li&gt;
&lt;li&gt;Для синхронизации с git необходимо импортировать ssh-ключи.&lt;/li&gt;
&lt;li&gt;Поддерживает разблокировку по биометрическим данным.&lt;/li&gt;
&lt;li&gt;Для работы требует наличия &lt;em&gt;OpenKeychain: Easy PGP&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;OpenKeychain: Easy PGP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL:
&lt;/li&gt;
&lt;li&gt;Операции с ключами pgp.&lt;/li&gt;
&lt;li&gt;Необходимо будет импортировать pgp-ключи.&lt;/li&gt;
&lt;li&gt;Не поддерживает разблокировку по биометрическим данным. Необходимо набирать пароль ключа.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="пакеты-для-emacs"&gt;&lt;span class="section-num"&gt;1.3.4&lt;/span&gt; Пакеты для Emacs&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;pass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Основной режим для управления хранилищем и редактирования записей.&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;li&gt;Позволяет редактировать базу данных паролей.&lt;/li&gt;
&lt;li&gt;Запуск:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-elisp" data-lang="elisp"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;M-x&lt;/span&gt; &lt;span class="nv"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;helm-pass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Интерфейс &lt;em&gt;helm&lt;/em&gt; для &lt;em&gt;pass&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;li&gt;Запуск:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-elisp" data-lang="elisp"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;M-x&lt;/span&gt; &lt;span class="nv"&gt;helm-pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Выдаёт в минибуфере список записей из базы паролей. При нажатии &lt;code&gt;Enter&lt;/code&gt; копирует пароль в буфер.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;ivy-pass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Интерфейс &lt;em&gt;ivy&lt;/em&gt; для &lt;em&gt;pass&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="управление-файлами-конфигурации"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Управление файлами конфигурации&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Использование &lt;code&gt;chezmoi&lt;/code&gt; для управления файлами конфигурации домашнего каталога пользователя.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="общая-информация"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Общая информация&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Сайт:
&lt;/li&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="конфигурация-chezmoi"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Конфигурация &lt;code&gt;chezmoi&lt;/code&gt;&lt;/h3&gt;
&lt;h4 id="рабочие-файлы"&gt;&lt;span class="section-num"&gt;2.2.1&lt;/span&gt; Рабочие файлы&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Состояние файлов конфигурации сохраняется в каталоге
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;~/.local/share/chezmoi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Он является клоном вашего репозитория &lt;code&gt;dotfiles&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Файл конфигурации &lt;code&gt;~/.config/chezmoi/chezmoi.toml&lt;/code&gt; (можно использовать также JSON или YAML) специфичен для локальной машины.&lt;/li&gt;
&lt;li&gt;Файлы, содержимое которых одинаково на всех ваших машинах, дословно копируются из исходного каталога.&lt;/li&gt;
&lt;li&gt;Файлы, которые варьируются от машины к машине, выполняются как шаблоны, обычно с использованием данных из файла конфигурации локальной машины для настройки конечного содержимого, специфичного для локальной машины.&lt;/li&gt;
&lt;li&gt;При запуске
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;вычисляется желаемое содержимое и разрешения для каждого файла, а затем вносит необходимые изменения, чтобы ваши файлы соответствовали этому состоянию.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;По умолчанию chezmoi изменяет файлы только в рабочей копии.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="автоматически-создавать-файл-конфигурации-на-новой-машине"&gt;&lt;span class="section-num"&gt;2.2.2&lt;/span&gt; Автоматически создавать файл конфигурации на новой машине&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;При выполнении &lt;code&gt;chezmoi init&lt;/code&gt; также может автоматически создать файл конфигурации, если он еще не существует.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если ваш репозиторий содержит файл с именем &lt;code&gt;.chezmoi.$FORMAT.tmpl&lt;/code&gt;, где &lt;code&gt;$FORMAT&lt;/code&gt; есть один из поддерживаемых форматов файла конфигурации (&lt;code&gt;json&lt;/code&gt;, &lt;code&gt;toml&lt;/code&gt;, или &lt;code&gt;yaml&lt;/code&gt;), то &lt;code&gt;chezmoi init&lt;/code&gt; выполнит этот шаблон для создания исходного файла конфигурации.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Например, пусть &lt;code&gt;~/.local/share/chezmoi/.chezmoi.toml.tmpl&lt;/code&gt; выглядит так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-toml" data-lang="toml"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;-&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;promptStringOnce&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;email&amp;#34;&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Email address&amp;#34;&lt;/span&gt; &lt;span class="nx"&gt;-&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="err"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;quote&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;При выполнении &lt;code&gt;chezmoi init&lt;/code&gt; будет создан конфигурационный файл &lt;code&gt;~/.config/chezmoi/chezmoi.toml&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;promptStringOnce&lt;/code&gt; &amp;mdash; это специальная функция, которая запрашивает у пользователя значение, если оно еще не установлено в разделе &lt;code&gt;data&lt;/code&gt; конфигурационного файла.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Чтобы протестировать этот шаблон, используйте &lt;code&gt;chezmoi execute-template&lt;/code&gt; с флагами &lt;code&gt;--init&lt;/code&gt; и &lt;code&gt;--promptString&lt;/code&gt;, например:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi execute-template --init --promptString &lt;span class="nv"&gt;email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;me@home.org &amp;lt; ~/.local/share/chezmoi/.chezmoi.toml.tmpl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="пересоздание-файл-конфигурации"&gt;&lt;span class="section-num"&gt;2.2.3&lt;/span&gt; Пересоздание файл конфигурации&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Если вы измените шаблон файла конфигурации, &lt;code&gt;chezmoi&lt;/code&gt; предупредит вас, если ваш текущий файл конфигурации не был сгенерирован из этого шаблона.&lt;/li&gt;
&lt;li&gt;Вы можете повторно сгенерировать файл конфигурации, запустив:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="шаблоны"&gt;&lt;span class="section-num"&gt;2.3&lt;/span&gt; Шаблоны&lt;/h3&gt;
&lt;h4 id="общая-информация"&gt;&lt;span class="section-num"&gt;2.3.1&lt;/span&gt; Общая информация&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Шаблоны используются для изменения содержимого файла в зависимости от среды.&lt;/li&gt;
&lt;li&gt;Используется синтаксис шаблонов Go.&lt;/li&gt;
&lt;li&gt;Файл интерпретируется как шаблон, если выполняется одно из следующих условий:
&lt;ul&gt;
&lt;li&gt;имя файла имеет суффикс &lt;code&gt;.tmpl&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;файл находится в каталоге &lt;code&gt;.chezmoitemplates&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="данные-шаблона"&gt;&lt;span class="section-num"&gt;2.3.2&lt;/span&gt; Данные шаблона&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Полный список переменных шаблона:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Источники переменных:
&lt;ul&gt;
&lt;li&gt;файлы &lt;code&gt;.chezmoi&lt;/code&gt;, например, &lt;code&gt;.chezmoi.os&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;файлы конфигурации &lt;code&gt;.chezmoidata.$FORMAT&lt;/code&gt;. Форматы (&lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsonc&lt;/code&gt;, &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;) читаются в алфавитном порядке;&lt;/li&gt;
&lt;li&gt;раздел &lt;code&gt;data&lt;/code&gt; конфигурационного файла.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="способы-создания-файла-шаблона"&gt;&lt;span class="section-num"&gt;2.3.3&lt;/span&gt; Способы создания файла шаблона&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;При первом добавлении файла передайте аргумент &lt;code&gt;--template&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi add --template ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Если файл уже контролируется &lt;em&gt;chezmoi&lt;/em&gt;, но не является шаблоном, можно сделать его шаблоном:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi chattr +template ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Можно создать шаблон вручную в исходном каталоге, присвоив ему расширение &lt;code&gt;.tmpl&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi &lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$EDITOR&lt;/span&gt; dot_zshrc.tmpl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Шаблоны в каталоге &lt;code&gt;.chezmoitemplates&lt;/code&gt; должны создаваться вручную:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi &lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;mkdir -p .chezmoitemplates
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .chezmoitemplates
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;$EDITOR&lt;/span&gt; mytemplate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="редактирование-файла-шаблона"&gt;&lt;span class="section-num"&gt;2.3.4&lt;/span&gt; Редактирование файла шаблона&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Используйте &lt;code&gt;chezmoi edit&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi edit ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Чтобы сделанные вами изменения сразу же применялись после выхода из редактора, используйте опцию &lt;code&gt;--apply&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi edit --apply ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="тестирование-шаблонов"&gt;&lt;span class="section-num"&gt;2.3.5&lt;/span&gt; Тестирование шаблонов&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Тестирование с помощью команды &lt;code&gt;chezmoi execute-template&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Тестирование небольших фрагментов шаблонов:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi execute-template &lt;span class="s1"&gt;&amp;#39;{{ .chezmoi.hostname }}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Тестирование целых файлов:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi &lt;span class="nb"&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi execute-template &amp;lt; dot_zshrc.tmpl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="синтаксис-шаблона"&gt;&lt;span class="section-num"&gt;2.3.6&lt;/span&gt; Синтаксис шаблона&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Действия шаблона записываются внутри двойных фигурных скобок, &lt;code&gt;{{ }}&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Действия могут быть переменными, конвейерами или операторами управления.&lt;/li&gt;
&lt;li&gt;Текст вне действий копируется буквально.&lt;/li&gt;
&lt;li&gt;Переменные записываются буквально:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ .chezmoi.hostname }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Условные выражения могут быть записаны с использованием &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;!--listend--&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ if eq .chezmoi.os &amp;#34;darwin&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;# darwin
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ else if eq .chezmoi.os &amp;#34;linux&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;# linux
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ else }}
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;# other operating system
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Удаление пробелов&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Для удаления проблем в шаблоне разместите знак минус и пробела рядом со скобками:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;HOSTNAME={{- .chezmoi.hostname }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;В результате получим:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nv"&gt;HOSTNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myhostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Отладка шаблона&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Используется подкоманда &lt;code&gt;execute-template&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi execute-template &lt;span class="s1"&gt;&amp;#39;{{ .chezmoi.os }}/{{ .chezmoi.arch }}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Интерпретируются любые данные, поступающие со стандартного ввода или в конце команды.&lt;/li&gt;
&lt;li&gt;Можно передать содержимое файла этой команде:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;cat foo.txt &lt;span class="p"&gt;|&lt;/span&gt; chezmoi execute-template
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Логические операции&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Возможно выполнение логических операций.&lt;/li&gt;
&lt;li&gt;Если имя хоста машины равно &lt;code&gt;work-laptop&lt;/code&gt;, текст между &lt;code&gt;if&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt; будет включён в результат:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-gdscript3" data-lang="gdscript3"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# common config&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;vi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# machine-specific configuration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chezmoi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;work-laptop&amp;#34;&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# this will only be included in ~/.bashrc on work-laptop&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Логические функции&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eq&lt;/code&gt;: возвращает &lt;code&gt;true&lt;/code&gt;, если первый аргумент равен любому из остальных аргументов, может принимать несколько аргументов;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;not&lt;/code&gt;: возвращает логическое отрицание своего единственного аргумента;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;and&lt;/code&gt;: возвращает логическое И своих аргументов, может принимать несколько аргументов;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;or&lt;/code&gt;: возвращает логическое ИЛИ своих аргументов, может принимать несколько аргументов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Целочисленные функции&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;len&lt;/code&gt;: возвращает целочисленную длину своего аргумента;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eq&lt;/code&gt;: возвращает логическую истину &lt;code&gt;arg1 == arg2&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ne&lt;/code&gt;: возвращает логическое значение &lt;code&gt;arg1 != arg2&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lt&lt;/code&gt;: возвращает логическую истину &lt;code&gt;arg1 &amp;lt; arg2&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;le&lt;/code&gt;: возвращает логическую истину &lt;code&gt;arg1 &amp;lt;= arg2&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gt&lt;/code&gt;: возвращает логическую истину &lt;code&gt;arg1 &amp;gt; arg2&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ge&lt;/code&gt;: возвращает логическую истину &lt;code&gt;arg1 &amp;gt;= arg2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="переменные-шаблона"&gt;&lt;span class="section-num"&gt;2.3.7&lt;/span&gt; Переменные шаблона&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Чтобы просмотреть переменные, доступные в вашей системе, выполните:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Чтобы получить доступ к переменной &lt;code&gt;chezmoi.kernel.osrelease&lt;/code&gt; в шаблоне, используйте:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-fallback" data-lang="fallback"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;{{ .chezmoi.kernel.osrelease }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="выполнение-лабораторной-работы"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Выполнение лабораторной работы&lt;/h2&gt;
&lt;h3 id="менеджер-паролей-pass"&gt;&lt;span class="section-num"&gt;3.1&lt;/span&gt; Менеджер паролей pass&lt;/h3&gt;
&lt;h4 id="установка"&gt;&lt;span class="section-num"&gt;3.1.1&lt;/span&gt; Установка&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fedora
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pass&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install pass pass-otp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gopass&lt;/code&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install gopass
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="настройка"&gt;&lt;span class="section-num"&gt;3.1.2&lt;/span&gt; Настройка&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ключи GPG&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Просмотр списка ключей:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --list-secret-keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Если ключа нет, нужно создать новый:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gpg --full-generate-key
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Инициализация хранилища&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Инициализируем хранилище:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass init &amp;lt;gpg-id or email&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Синхронизация с git&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Создадим структуру git:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Также можно задать адрес репозитория на хостинге (репозиторий необходимо предварительно создать):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass git remote add origin git@github.com:&amp;lt;git_username&amp;gt;/&amp;lt;git_repo&amp;gt;.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для синхронизации выполняется следующая команда:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass git pull
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Прямые изменения&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Следует заметить, что отслеживаются только изменения, сделанные через сам &lt;code&gt;gopass&lt;/code&gt; (или &lt;code&gt;pass&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Если изменения сделаны непосредственно на файловой системе, необходимо вручную закоммитить и выложить изменения:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.password-store/
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;edit manually&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Проверить статус синхронизации модно командой
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="настройка-интерфейса-с-броузером"&gt;&lt;span class="section-num"&gt;3.1.3&lt;/span&gt; Настройка интерфейса с броузером&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Для взаимодействия с броузером используется интерфейс &lt;em&gt;native messaging&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Поэтому кроме плагина к броузеру устанавливается программа, обеспечивающая интерфейс &lt;em&gt;native messaging&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Плагин
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;li&gt;Плагин для брoузера
&lt;ul&gt;
&lt;li&gt;Плагин для Firefox:
.&lt;/li&gt;
&lt;li&gt;Плагин для Chrome/Chromium:
.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Интерфейс для взаимодействия с броузером (native messaging)
&lt;ul&gt;
&lt;li&gt;Репозиторий:
&lt;/li&gt;
&lt;li&gt;Gentoo:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;emerge www-plugins/browserpass
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Fedora
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf copr &lt;span class="nb"&gt;enable&lt;/span&gt; maximbaz/browserpass
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install browserpass
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="сохранение-пароля"&gt;&lt;span class="section-num"&gt;3.1.4&lt;/span&gt; Сохранение пароля&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Добавить новый пароль&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Выполните:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass insert &lt;span class="o"&gt;[&lt;/span&gt;OPTIONAL DIR&lt;span class="o"&gt;]&lt;/span&gt;/&lt;span class="o"&gt;[&lt;/span&gt;FILENAME&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OPTIONAL DIR&lt;/code&gt;: необязательное имя каталога, определяющее файловую структуру для вашего хранилища паролей;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FILENAME&lt;/code&gt;: имя файла, который будет использоваться для хранения пароля.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отобразите пароль для указанного имени файла:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass &lt;span class="o"&gt;[&lt;/span&gt;OPTIONAL DIR&lt;span class="o"&gt;]&lt;/span&gt;/&lt;span class="o"&gt;[&lt;/span&gt;FILENAME&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Замените существующий пароль:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pass generate --in-place FILENAME
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="управление-файлами-конфигурации"&gt;&lt;span class="section-num"&gt;3.2&lt;/span&gt; Управление файлами конфигурации&lt;/h3&gt;
&lt;h4 id="установка"&gt;&lt;span class="section-num"&gt;3.2.1&lt;/span&gt; Установка&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fedora
&lt;ul&gt;
&lt;li&gt;Установка из COPR:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y copr &lt;span class="nb"&gt;enable&lt;/span&gt; lihaohong/chezmoi
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install chezmoi
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="дополнительное-программное-обеспечение"&gt;&lt;span class="section-num"&gt;3.3&lt;/span&gt; Дополнительное программное обеспечение&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Установите дополнительное программное обеспечение:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf -y install &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; dunst &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; fontawesome-fonts &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; powerline-fonts &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; light &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; fuzzel &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; swaylock &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; kitty &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; waybar swaybg &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; wl-clipboard &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; mpv &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; grim &lt;span class="se"&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="se"&gt;&lt;/span&gt; slurp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите шрифты:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf copr -y &lt;span class="nb"&gt;enable&lt;/span&gt; peterwu/iosevka
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf search iosevka
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo dnf install iosevka-fonts iosevka-aile-fonts iosevka-curly-fonts iosevka-slab-fonts iosevka-etoile-fonts iosevka-term-fonts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="установка"&gt;&lt;span class="section-num"&gt;3.3.1&lt;/span&gt; Установка&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Установка бинарного файла. Скрипт определяет архитектуру процессора и операционную систему и скачивает необходимый файл:
&lt;ul&gt;
&lt;li&gt;с помощью &lt;code&gt;wget&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sh -c &lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;wget -qO- chezmoi.io/get&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="создание-собственного-репозитория-с-помощью-утилит"&gt;&lt;span class="section-num"&gt;3.3.2&lt;/span&gt; Создание собственного репозитория с помощью утилит&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Будем использовать утилиты командной строки для работы с github (см.
).&lt;/li&gt;
&lt;li&gt;Создадим свой репозиторий для конфигурационных файлов на основе шаблона:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh repo create dotfiles --template&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;#34;yamadharma/dotfiles-template&amp;#34;&lt;/span&gt; --private
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="подключение-репозитория-к-своей-системе"&gt;&lt;span class="section-num"&gt;3.3.3&lt;/span&gt; Подключение репозитория к своей системе&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Инициализируйте &lt;code&gt;chezmoi&lt;/code&gt; с вашим репозиторием &lt;code&gt;dotfiles&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init git@github.com:&amp;lt;username&amp;gt;/dotfiles.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Проверьте, какие изменения внесёт &lt;code&gt;chezmoi&lt;/code&gt; в домашний каталог, запустив:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi diff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Если вас устраивают изменения, внесённые &lt;code&gt;chezmoi&lt;/code&gt;, запустите:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi apply -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="использование-chezmoi-на-нескольких-машинах"&gt;&lt;span class="section-num"&gt;3.3.4&lt;/span&gt; Использование chezmoi на нескольких машинах&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;На второй машине инициализируйте &lt;code&gt;chezmoi&lt;/code&gt; с вашим репозиторием &lt;code&gt;dotfiles&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init https://github.com/&amp;lt;username&amp;gt;/dotfiles.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Или через ssh:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init git@github.com:&amp;lt;username&amp;gt;/dotfiles.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Проверьте, какие изменения внесёт &lt;code&gt;chezmoi&lt;/code&gt; в домашний каталог, запустив:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi diff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Если вас устраивают изменения, внесённые &lt;code&gt;chezmoi&lt;/code&gt;, запустите:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi apply -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Если вас не устраивают изменения в файле, отредактируйте его с помощью:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi edit file_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Также можно вызвать инструмент слияния, чтобы объединить изменения между текущим содержимым файла, файлом в вашей рабочей копии и измененным содержимым файла:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi merge file_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;При существующем каталоге &lt;code&gt;chezmoi&lt;/code&gt; можно получить и применить последние изменения из вашего репозитория:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi update -v
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="настройка-новой-машины-с-помощью-одной-команды"&gt;&lt;span class="section-num"&gt;3.3.5&lt;/span&gt; Настройка новой машины с помощью одной команды&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Можно установить свои &lt;code&gt;dotfiles&lt;/code&gt; на новый компьютер с помощью одной команды:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init --apply https://github.com/&amp;lt;username&amp;gt;/dotfiles.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Через ssh:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi init --apply git@github.com:&amp;lt;username&amp;gt;/dotfiles.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="ежедневные-операции-c-chezmoi"&gt;&lt;span class="section-num"&gt;3.3.6&lt;/span&gt; Ежедневные операции c &lt;code&gt;chezmoi&lt;/code&gt;&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Извлеките последние изменения из репозитория и примените их&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Можно извлечь изменения из репозитория и применить их одной командой:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Это запускается &lt;code&gt;git pull --autostash --rebase&lt;/code&gt; в вашем исходном каталоге, а затем &lt;code&gt;chezmoi apply&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Извлеките последние изменения из своего репозитория и посмотрите, что изменится, фактически не применяя изменения&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Выполните:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi git pull -- --autostash --rebase &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chezmoi diff
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Это запускается &lt;code&gt;git pull --autostash --rebase&lt;/code&gt; в вашем исходном каталоге, а &lt;code&gt;chezmoi diff&lt;/code&gt; затем показывает разницу между целевым состоянием, вычисленным из вашего исходного каталога, и фактическим состоянием.&lt;/li&gt;
&lt;li&gt;Если вы довольны изменениями, вы можете применить их:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;chezmoi apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Автоматически фиксируйте и отправляйте изменения в репозиторий&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Можно автоматически фиксировать и отправлять изменения в исходный каталог в репозиторий.&lt;/li&gt;
&lt;li&gt;Эта функция отключена по умолчанию.&lt;/li&gt;
&lt;li&gt;Чтобы включить её, добавьте в файл конфигурации &lt;code&gt;~/.config/chezmoi/chezmoi.toml&lt;/code&gt; следующее:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="o"&gt;[&lt;/span&gt;git&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;autoCommit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="nv"&gt;autoPush&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Всякий раз, когда в исходный каталог вносятся изменения, &lt;code&gt;chezmoi&lt;/code&gt; фиксирует изменения с помощью автоматически сгенерированного сообщения фиксации и отправляет их в ваш репозиторий.&lt;/li&gt;
&lt;li&gt;Будьте осторожны при использовании &lt;code&gt;autoPush&lt;/code&gt;. Если ваш репозиторий &lt;code&gt;dotfiles&lt;/code&gt; является общедоступным, и вы случайно добавили секрет в виде обычного текста, этот секрет будет отправлен в ваш общедоступный репозиторий.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>Лабораторная работа Продвинутое использование git</title><link>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-extended-git-setup/</link><pubDate>Sat, 07 Jan 2023 17:50:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/teaching/os-intro/lab/lab-extended-git-setup/</guid><description>&lt;p&gt;Лабораторная работа Продвинутое использование git.&lt;/p&gt;
&lt;details class="print:hidden xl:hidden" &gt;
&lt;summary&gt;Содержание&lt;/summary&gt;
&lt;div class="text-sm"&gt;
&lt;nav id="TableOfContents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#цель-работы"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Цель работы&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#теоретические-сведения"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Теоретические сведения&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#рабочий-процесс-gitflow"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Рабочий процесс Gitflow&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#общая-информация"&gt;&lt;span class="section-num"&gt;2.1.1&lt;/span&gt; Общая информация&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#процесс-работы-с-gitflow"&gt;&lt;span class="section-num"&gt;2.1.2&lt;/span&gt; Процесс работы с Gitflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#семантическое-версионирование"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Семантическое версионирование&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#краткое-описание-семантического-версионирования"&gt;&lt;span class="section-num"&gt;2.2.1&lt;/span&gt; Краткое описание семантического версионирования&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#программное-обеспечение"&gt;&lt;span class="section-num"&gt;2.2.2&lt;/span&gt; Программное обеспечение&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#общепринятые-коммиты"&gt;&lt;span class="section-num"&gt;2.3&lt;/span&gt; Общепринятые коммиты&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#описание"&gt;&lt;span class="section-num"&gt;2.3.1&lt;/span&gt; Описание&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#задание"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Задание&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#последовательность-выполнения-работы"&gt;&lt;span class="section-num"&gt;4&lt;/span&gt; Последовательность выполнения работы&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#установка-программного-обеспечения"&gt;&lt;span class="section-num"&gt;4.1&lt;/span&gt; Установка программного обеспечения&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#установка-git-flow"&gt;&lt;span class="section-num"&gt;4.1.1&lt;/span&gt; Установка git-flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#установка-node-dot-js"&gt;&lt;span class="section-num"&gt;4.1.2&lt;/span&gt; Установка Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#настройка-node-dot-js"&gt;&lt;span class="section-num"&gt;4.1.3&lt;/span&gt; Настройка Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#общепринятые-коммиты"&gt;&lt;span class="section-num"&gt;4.1.4&lt;/span&gt; Общепринятые коммиты&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#практический-сценарий-использования-git"&gt;&lt;span class="section-num"&gt;4.2&lt;/span&gt; Практический сценарий использования git&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#создание-репозитория-git"&gt;&lt;span class="section-num"&gt;4.2.1&lt;/span&gt; Создание репозитория git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#работа-с-репозиторием-git"&gt;&lt;span class="section-num"&gt;4.2.2&lt;/span&gt; Работа с репозиторием git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id="цель-работы"&gt;&lt;span class="section-num"&gt;1&lt;/span&gt; Цель работы&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Получение навыков правильной работы с репозиториями git.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="теоретические-сведения"&gt;&lt;span class="section-num"&gt;2&lt;/span&gt; Теоретические сведения&lt;/h2&gt;
&lt;h3 id="рабочий-процесс-gitflow"&gt;&lt;span class="section-num"&gt;2.1&lt;/span&gt; Рабочий процесс Gitflow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Рабочий процесс &lt;em&gt;Gitflow Workflow&lt;/em&gt;. Будем описывать его с использованием пакета &lt;code&gt;git-flow&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="общая-информация"&gt;&lt;span class="section-num"&gt;2.1.1&lt;/span&gt; Общая информация&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Gitflow Workflow опубликована и популяризована Винсентом Дриссеном.&lt;/li&gt;
&lt;li&gt;Gitflow Workflow предполагает выстраивание строгой модели ветвления с учётом выпуска проекта.&lt;/li&gt;
&lt;li&gt;Данная модель отлично подходит для организации рабочего процесса на основе релизов.&lt;/li&gt;
&lt;li&gt;Работа по модели Gitflow включает создание отдельной ветки для исправлений ошибок в рабочей среде.&lt;/li&gt;
&lt;li&gt;Последовательность действий при работе по модели Gitflow:
&lt;ul&gt;
&lt;li&gt;Из ветки &lt;code&gt;master&lt;/code&gt; создаётся ветка &lt;code&gt;develop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Из ветки &lt;code&gt;develop&lt;/code&gt; создаётся ветка &lt;code&gt;release&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Из ветки &lt;code&gt;develop&lt;/code&gt; создаются ветки &lt;code&gt;feature&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Когда работа над веткой &lt;code&gt;feature&lt;/code&gt; завершена, она сливается с веткой &lt;code&gt;develop&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Когда работа над веткой релиза &lt;code&gt;release&lt;/code&gt; завершена, она сливается в ветки &lt;code&gt;develop&lt;/code&gt; и &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Если в &lt;code&gt;master&lt;/code&gt; обнаружена проблема, из &lt;code&gt;master&lt;/code&gt; создаётся ветка &lt;code&gt;hotfix&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Когда работа над веткой исправления &lt;code&gt;hotfix&lt;/code&gt; завершена, она сливается в ветки &lt;code&gt;develop&lt;/code&gt; и &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="процесс-работы-с-gitflow"&gt;&lt;span class="section-num"&gt;2.1.2&lt;/span&gt; Процесс работы с Gitflow&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Основные ветки (master) и ветки разработки (develop)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Для фиксации истории проекта в рамках этого процесса вместо одной ветки &lt;code&gt;master&lt;/code&gt; используются две ветки. В ветке &lt;code&gt;master&lt;/code&gt; хранится официальная история релиза, а ветка &lt;code&gt;develop&lt;/code&gt; предназначена для объединения всех функций. Кроме того, для удобства рекомендуется присваивать всем коммитам в ветке &lt;code&gt;master&lt;/code&gt; номер версии.&lt;/li&gt;
&lt;li&gt;При использовании библиотеки расширений &lt;code&gt;git-flow&lt;/code&gt; нужно инициализировать структуру в существующем репозитории:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для github параметр &lt;code&gt;Version tag prefix&lt;/code&gt; следует установить в &lt;code&gt;v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;После этого проверьте, на какой ветке Вы находитесь:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Функциональные ветки (feature)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Под каждую новую функцию должна быть отведена собственная ветка, которую можно отправлять в центральный репозиторий для создания резервной копии или совместной работы команды. Ветки &lt;code&gt;feature&lt;/code&gt; создаются не на основе &lt;code&gt;master&lt;/code&gt;, а на основе &lt;code&gt;develop&lt;/code&gt;. Когда работа над функцией завершается, соответствующая ветка сливается обратно с веткой &lt;code&gt;develop&lt;/code&gt;. Функции не следует отправлять напрямую в ветку &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Как правило, ветки &lt;code&gt;feature&lt;/code&gt; создаются на основе последней ветки &lt;code&gt;develop&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Создание функциональной ветки&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создадим новую функциональную ветку:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow feature start feature_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Далее работаем как обычно.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Окончание работы с функциональной веткой&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;По завершении работы над функцией следует объединить ветку &lt;code&gt;feature_branch&lt;/code&gt; с &lt;code&gt;develop&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow feature finish feature_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Ветки выпуска (release)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Когда в ветке &lt;code&gt;develop&lt;/code&gt; оказывается достаточно функций для выпуска, из ветки develop создаётся ветка &lt;code&gt;release&lt;/code&gt;. Создание этой ветки запускает следующий цикл выпуска, и с этого момента новые функции добавить больше нельзя &amp;mdash; допускается лишь отладка, создание документации и решение других задач. Когда подготовка релиза завершается, ветка &lt;code&gt;release&lt;/code&gt; сливается с &lt;code&gt;master&lt;/code&gt; и ей присваивается номер версии. После нужно выполнить слияние с веткой &lt;code&gt;develop&lt;/code&gt;, в которой с момента создания ветки релиза могли возникнуть изменения.&lt;/li&gt;
&lt;li&gt;Благодаря тому, что для подготовки выпусков используется специальная ветка, одна команда может дорабатывать текущий выпуск, в то время как другая команда продолжает работу над функциями для следующего.&lt;/li&gt;
&lt;li&gt;Создать новую ветку release можно с помощью следующей команды:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release start 1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Для завершения работы на ветке &lt;code&gt;release&lt;/code&gt; используются следующие команды:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release finish 1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;Ветки исправления (hotfix)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ветки поддержки или ветки &lt;code&gt;hotfix&lt;/code&gt; используются для быстрого внесения исправлений в рабочие релизы. Они создаются от ветки &lt;code&gt;master&lt;/code&gt;. Это единственная ветка, которая должна быть создана непосредственно от master. Как только исправление завершено, ветку следует объединить с &lt;code&gt;master&lt;/code&gt; и &lt;code&gt;develop&lt;/code&gt;. Ветка &lt;code&gt;master&lt;/code&gt; должна быть помечена обновлённым номером версии.&lt;/li&gt;
&lt;li&gt;Наличие специальной ветки для исправления ошибок позволяет команде решать проблемы, не прерывая остальную часть рабочего процесса и не ожидая следующего цикла релиза.&lt;/li&gt;
&lt;li&gt;Ветку &lt;code&gt;hotfix&lt;/code&gt; можно создать с помощью следующих команд:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow hotfix start hotfix_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;По завершении работы ветка &lt;code&gt;hotfix&lt;/code&gt; объединяется с &lt;code&gt;master&lt;/code&gt; и &lt;code&gt;develop&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow hotfix finish hotfix_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="семантическое-версионирование"&gt;&lt;span class="section-num"&gt;2.2&lt;/span&gt; Семантическое версионирование&lt;/h3&gt;
&lt;p&gt;Семантический подход в версионированию программного обеспечения.&lt;/p&gt;
&lt;h4 id="краткое-описание-семантического-версионирования"&gt;&lt;span class="section-num"&gt;2.2.1&lt;/span&gt; Краткое описание семантического версионирования&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Семантическое версионирование описывается в
.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Кратко его можно описать следующим образом:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Версия задаётся в виде кортежа &lt;code&gt;МАЖОРНАЯ_ВЕРСИЯ.МИНОРНАЯ_ВЕРСИЯ.ПАТЧ&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Номер версии следует увеличивать:
&lt;ul&gt;
&lt;li&gt;МАЖОРНУЮ версию, когда сделаны обратно несовместимые изменения API.&lt;/li&gt;
&lt;li&gt;МИНОРНУЮ версию, когда вы добавляете новую функциональность, не нарушая обратной совместимости.&lt;/li&gt;
&lt;li&gt;ПАТЧ-версию, когда вы делаете обратно совместимые исправления.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Дополнительные обозначения для предрелизных и билд-метаданных возможны как дополнения к МАЖОРНАЯ.МИНОРНАЯ.ПАТЧ формату.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="программное-обеспечение"&gt;&lt;span class="section-num"&gt;2.2.2&lt;/span&gt; Программное обеспечение&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Для реализации семантического версионирования создано несколько программных продуктов.&lt;/li&gt;
&lt;li&gt;При этом лучше всего использовать комплексные продукты, которые используют информацию из коммитов системы версионирования.&lt;/li&gt;
&lt;li&gt;Коммиты должны иметь стандартизованный вид.&lt;/li&gt;
&lt;li&gt;В семантическое версионирование применяется вместе с &lt;em&gt;общепринятыми коммитами&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Пакет Conventional Changelog&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Пакет
является комплексным решением по управлению коммитами и генерации журнала изменений.&lt;/li&gt;
&lt;li&gt;Содержит набор утилит, которые можно использовать по-отдельности.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="общепринятые-коммиты"&gt;&lt;span class="section-num"&gt;2.3&lt;/span&gt; Общепринятые коммиты&lt;/h3&gt;
&lt;p&gt;Использование спецификации &lt;em&gt;Conventional Commits&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id="описание"&gt;&lt;span class="section-num"&gt;2.3.1&lt;/span&gt; Описание&lt;/h4&gt;
&lt;p&gt;Спецификация
:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Соглашение о том, как нужно писать сообщения commit&amp;rsquo;ов.&lt;/li&gt;
&lt;li&gt;Совместимо с
. Даже вернее сказать, сильно связано с семантическим версионированием.&lt;/li&gt;
&lt;li&gt;Регламентирует структуру и основные типы коммитов.&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Структура коммита&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-text" data-lang="text"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;BLANK LINE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;BLANK LINE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;footer&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Или, по-русски:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-text" data-lang="text"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;тип&amp;gt;(&amp;lt;область&amp;gt;): &amp;lt;описание изменения&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;пустая линия&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;[необязательное тело]
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&amp;lt;пустая линия&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;[необязательный нижний колонтитул]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Заголовок является обязательным.&lt;/li&gt;
&lt;li&gt;Любая строка сообщения о фиксации не может быть длиннее 100 символов.&lt;/li&gt;
&lt;li&gt;Тема (subject) содержит краткое описание изменения.
&lt;ul&gt;
&lt;li&gt;Используйте повелительное наклонение в настоящем времени: «изменить» (&amp;ldquo;change&amp;rdquo; not &amp;ldquo;changed&amp;rdquo; nor &amp;ldquo;changes&amp;rdquo;).&lt;/li&gt;
&lt;li&gt;Не используйте заглавную первую букву.&lt;/li&gt;
&lt;li&gt;Не ставьте точку в конце.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Тело (body) должно включать мотивацию к изменению и противопоставлять это предыдущему поведению.
&lt;ul&gt;
&lt;li&gt;Как и в теме, используйте повелительное наклонение в настоящем времени.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Нижний колонтитул (footer) должен содержать любую информацию о критических изменениях.
&lt;ul&gt;
&lt;li&gt;Следует использовать для указания внешних ссылок, контекста коммита или другой мета информации.&lt;/li&gt;
&lt;li&gt;Также содержит ссылку на issue (например, на github), который закрывает эта фиксация.&lt;/li&gt;
&lt;li&gt;Критические изменения должны начинаться со слова &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; с пробела или двух символов новой строки. Затем для этого используется остальная часть сообщения фиксации.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Типы коммитов&lt;/p&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Базовые типы коммитов&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; коммит типа fix исправляет ошибку (bug) в вашем коде (он соответствует PATCH в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; коммит типа feat добавляет новую функцию (feature) в ваш код (он соответствует MINOR в SemVer).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BREAKING CHANGE:&lt;/code&gt; &amp;mdash; коммит, который содержит текст &lt;code&gt;BREAKING CHANGE:&lt;/code&gt; в начале своего не обязательного тела сообщения (body) или в
подвале (footer), добавляет изменения, нарушающие обратную
совместимость вашего API (он соответствует MAJOR в SemVer). BREAKING CHANGE может быть частью коммита любого типа.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revert:&lt;/code&gt; &amp;mdash; если фиксация отменяет предыдущую фиксацию. Начинается с &lt;code&gt;revert:&lt;/code&gt;, за которым следует заголовок отменённой фиксации. В теле должно быть написано: Это отменяет фиксацию &lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt; (это SHA-хэш отменяемой фиксации).&lt;/li&gt;
&lt;li&gt;Другое: коммиты с типами, которые отличаются от &lt;code&gt;fix:&lt;/code&gt; и &lt;code&gt;feat:&lt;/code&gt;,
также разрешены. Например, @commitlint/config-conventional
(основанный на The Angular convention) рекомендует: chore:, docs:,
style:, refactor:, perf:, test:, и другие.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Соглашения The Angular convention&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Одно из популярных соглашений о поддержке исходных кодов &amp;mdash; конвенция Angular (
).&lt;/li&gt;
&lt;/ul&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Типы коммитов The Angular convention&lt;/p&gt;
&lt;p&gt;Конвенция Angular (
) требует следующие типы коммитов:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;build:&lt;/code&gt; &amp;mdash; изменения, влияющие на систему сборки или внешние зависимости (примеры областей (scope): gulp, broccoli, npm).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ci:&lt;/code&gt; &amp;mdash; изменения в файлах конфигурации и скриптах CI (примеры областей: Travis, Circle, BrowserStack, SauceLabs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs:&lt;/code&gt; &amp;mdash; изменения только в документации.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feat:&lt;/code&gt; &amp;mdash; новая функция.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix:&lt;/code&gt; &amp;mdash; исправление ошибок.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perf:&lt;/code&gt; &amp;mdash; изменение кода, улучшающее производительность.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor:&lt;/code&gt; &amp;mdash; Изменение кода, которое не исправляет ошибку и не добавляет функции (рефакторинг кода).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style:&lt;/code&gt; &amp;mdash; изменения, не влияющие на смысл кода (пробелы, форматирование, отсутствие точек с запятой и т. д.).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test:&lt;/code&gt; &amp;mdash; добавление недостающих тестов или исправление существующих тестов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Области действия (scope)&lt;/p&gt;
&lt;p&gt;Областью действия должно быть имя затронутого пакета npm (как его воспринимает человек, читающий журнал изменений, созданный из сообщений фиксации).&lt;/p&gt;
&lt;p&gt;Есть несколько исключений из правила «использовать имя пакета»:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;packaging&lt;/code&gt; &amp;mdash; используется для изменений, которые изменяют структуру пакета, например, изменения общедоступного пути.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;changelog&lt;/code&gt; &amp;mdash; используется для обновления примечаний к выпуску в CHANGELOG.md.&lt;/li&gt;
&lt;li&gt;отсутствует область действия &amp;mdash; полезно для изменений стиля, тестирования и рефакторинга, которые выполняются во всех пакетах (например, style: добавить отсутствующие точки с запятой).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Соглашения @commitlint/config-conventional&lt;/p&gt;
&lt;p&gt;Соглашение
входит в пакет
. В целом в этом соглашении придерживаются соглашения Angular.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="задание"&gt;&lt;span class="section-num"&gt;3&lt;/span&gt; Задание&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Выполнить работу для тестового репозитория.&lt;/li&gt;
&lt;li&gt;Преобразовать рабочий репозиторий в репозиторий с git-flow и conventional commits.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="последовательность-выполнения-работы"&gt;&lt;span class="section-num"&gt;4&lt;/span&gt; Последовательность выполнения работы&lt;/h2&gt;
&lt;h3 id="установка-программного-обеспечения"&gt;&lt;span class="section-num"&gt;4.1&lt;/span&gt; Установка программного обеспечения&lt;/h3&gt;
&lt;h4 id="установка-git-flow"&gt;&lt;span class="section-num"&gt;4.1.1&lt;/span&gt; Установка git-flow&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Linux
&lt;ul&gt;
&lt;li&gt;Fedora
&lt;ul&gt;
&lt;li&gt;Установка из коллекции репозиториев &lt;em&gt;Copr&lt;/em&gt; (
):
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Enable the copr repository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf copr &lt;span class="nb"&gt;enable&lt;/span&gt; elegos/gitflow
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="c1"&gt;# Install gitflow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install gitflow
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="установка-node-dot-js"&gt;&lt;span class="section-num"&gt;4.1.2&lt;/span&gt; Установка Node.js&lt;/h4&gt;
&lt;p&gt;На Node.js базируется программное обеспечение для семантического версионирования и общепринятых коммитов.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fedora
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install nodejs
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dnf install pnpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="настройка-node-dot-js"&gt;&lt;span class="section-num"&gt;4.1.3&lt;/span&gt; Настройка Node.js&lt;/h4&gt;
&lt;p&gt;Для работы с Node.js добавим каталог с исполняемыми файлами, устанавливаемыми &lt;code&gt;yarn&lt;/code&gt;, в переменную &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Запустите:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pnpm setup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Перелогиньтесь, или выполните:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="общепринятые-коммиты"&gt;&lt;span class="section-num"&gt;4.1.4&lt;/span&gt; Общепринятые коммиты&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;commitizen&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Данная программа используется для помощи в форматировании коммитов.
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pnpm add -g commitizen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;При этом устанавливается скрипт &lt;code&gt;git-cz&lt;/code&gt;, который мы и будем использовать для коммитов.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;standard-changelog&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Данная программа используется для помощи в создании логов.
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pnpm add -g standard-changelog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="практический-сценарий-использования-git"&gt;&lt;span class="section-num"&gt;4.2&lt;/span&gt; Практический сценарий использования git&lt;/h3&gt;
&lt;h4 id="создание-репозитория-git"&gt;&lt;span class="section-num"&gt;4.2.1&lt;/span&gt; Создание репозитория git&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Подключение репозитория к github&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Создайте репозиторий на GitHub. Для примера назовём его &lt;code&gt;git-extended&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Делаем первый коммит и выкладываем на github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -m &lt;span class="s2"&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git remote add origin git@github.com:&amp;lt;username&amp;gt;/git-extended.git
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Конфигурация общепринятых коммитов&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Конфигурация для пакетов Node.js&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;pnpm init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Необходимо заполнить несколько параметров пакета.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Название пакета.&lt;/li&gt;
&lt;li&gt;Лицензия пакета. Список лицензий для npm:
. Предлагается выбирать лицензию &lt;code&gt;CC-BY-4.0&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Сконфигурим формат коммитов. Для этого добавим в файл &lt;code&gt;package.json&lt;/code&gt; команду для формирования коммитов:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s2"&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;commitizen&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;cz-conventional-changelog&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Таким образом, файл &lt;code&gt;package.json&lt;/code&gt; приобретает вид:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-js" data-lang="js"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;git-extended&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Git repo for educational purposes&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;index.js&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;repository&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;git@github.com:username/git-extended.git&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;Name Surname &amp;lt;username@gmail.com&amp;gt;&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;license&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;CC-BY-4.0&amp;#34;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;commitizen&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="s2"&gt;&amp;#34;path&amp;#34;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;#34;cz-conventional-changelog&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Добавим новые файлы:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Выполним коммит:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git cz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Отправим на github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="3"&gt;
&lt;li&gt;
&lt;p&gt;Конфигурация git-flow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Инициализируем git-flow
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;Префикс для ярлыков установим в &lt;code&gt;v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Проверьте, что Вы на ветке &lt;code&gt;develop&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Загрузите весь репозиторий в хранилище:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push --all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Установите внешнюю ветку как вышестоящую для этой ветки:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git branch --set-upstream-to&lt;span class="o"&gt;=&lt;/span&gt;origin/develop develop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создадим релиз с версией 1.0.0
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release start 1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создадим журнал изменений
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;standard-changelog --first-release
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Добавим журнал изменений в индекс
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add CHANGELOG.md
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;chore(site): add changelog&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Зальём релизную ветку в основную ветку
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release finish 1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Отправим данные на github
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push --all
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push --tags
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создадим релиз на github. Для этого будем использовать утилиты работы с github:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh release create v1.0.0 -F CHANGELOG.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id="работа-с-репозиторием-git"&gt;&lt;span class="section-num"&gt;4.2.2&lt;/span&gt; Работа с репозиторием git&lt;/h4&gt;
&lt;!--list-separator--&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Разработка новой функциональности&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Создадим ветку для новой функциональности:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow feature start feature_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Далее, продолжаем работу c git как обычно.&lt;/li&gt;
&lt;li&gt;По окончании разработки новой функциональности следующим шагом следует объединить ветку &lt;code&gt;feature_branch&lt;/code&gt; c &lt;code&gt;develop&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow feature finish feature_branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!--list-separator--&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Создание релиза git-flow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Создадим релиз с версией &lt;code&gt;1.2.3&lt;/code&gt;:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release start 1.2.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Обновите номер версии в файле &lt;code&gt;package.json&lt;/code&gt;. Установите её в &lt;code&gt;1.2.3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Создадим журнал изменений
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;standard-changelog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Добавим журнал изменений в индекс
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git add CHANGELOG.md
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git commit -am &lt;span class="s1"&gt;&amp;#39;chore(site): update changelog&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Зальём релизную ветку в основную ветку
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git flow release finish 1.2.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Отправим данные на github
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push --all
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;git push --tags
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Создадим релиз на github с комментарием из журнала изменений:
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;gh release create v1.2.3 -F CHANGELOG.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item></channel></rss>