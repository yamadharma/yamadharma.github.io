<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming | Д. С. Кулябов</title><link>https://yamadharma.github.io/ru/tag/programming/</link><atom:link href="https://yamadharma.github.io/ru/tag/programming/index.xml" rel="self" type="application/rss+xml"/><description>programming</description><generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><copyright>© 2023 Dmitry S. Kulyabov</copyright><lastBuildDate>Fri, 23 Dec 2022 15:11:00 +0300</lastBuildDate><image><url>https://yamadharma.github.io/media/icon_hu0a661dd90139895e92e2f18ae9404407_611148_512x512_fill_lanczos_center_3.png</url><title>programming</title><link>https://yamadharma.github.io/ru/tag/programming/</link></image><item><title>Emacs. Устаревшая библиотека cl</title><link>https://yamadharma.github.io/ru/post/2022/12/23/emacs-deprecated-cl/</link><pubDate>Fri, 23 Dec 2022 15:11:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/12/23/emacs-deprecated-cl/</guid><description>&lt;p>Как локализовать пакеты, использующие устаревшую библиотеку &lt;code>cl&lt;/code>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#симптомы">&lt;span class="section-num">1&lt;/span> Симптомы&lt;/a>&lt;/li>
&lt;li>&lt;a href="#устранение">&lt;span class="section-num">2&lt;/span> Устранение&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="симптомы">&lt;span class="section-num">1&lt;/span> Симптомы&lt;/h2>
&lt;ul>
&lt;li>При запуске Emacs выдаётся предупреждение: &lt;em>Package cl is deprecated&lt;/em>.&lt;/li>
&lt;/ul>
&lt;h2 id="устранение">&lt;span class="section-num">2&lt;/span> Устранение&lt;/h2>
&lt;ul>
&lt;li>Необходимо обнаружить пакеты, использующие библиотеку &lt;code>cl&lt;/code>.&lt;/li>
&lt;li>По возможности следует удалить (или заменить) эти пакеты.&lt;/li>
&lt;li>Для этого в буфер &lt;code>*scratch*&lt;/code> добавьте следующий код:
&lt;pre>&lt;code class="language-emacs-lisp">(require 'loadhist)
(file-dependents (feature-file 'cl))
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Выполнить команды:
&lt;ul>
&lt;li>исполнить каждую строчку (комбинацией клавиш &lt;code>C-j&lt;/code>): результаты будут отображаться в этом же буфере;&lt;/li>
&lt;li>исполнить каждую строчку (команда &lt;code>eval-last-sexp&lt;/code>; соответствующая комбинация клавиш &lt;code>C-x C-e&lt;/code>): результаты будут отображаться в минибуфере.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>В результате мы получим список файлов, использующих библиотеку &lt;code>cl&lt;/code>.&lt;/li>
&lt;/ul></description></item><item><title>Виды комментариев в Emacs Lisp</title><link>https://yamadharma.github.io/ru/post/2022/07/12/emacs-lisp-comments/</link><pubDate>Tue, 12 Jul 2022 18:45:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/07/12/emacs-lisp-comments/</guid><description>&lt;p>Виды комментариев в Emacs Lisp.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#соглашения-для-комментариев">&lt;span class="section-num">2&lt;/span> Соглашения для комментариев&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#09a0a0">&lt;span class="section-num">2.1&lt;/span> &lt;code>;&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#189c88">&lt;span class="section-num">2.2&lt;/span> &lt;code>;;&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ec58a0">&lt;span class="section-num">2.3&lt;/span> &lt;code>;;;&lt;/code>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Есть три типа комментариев:&lt;/p>
&lt;ul>
&lt;li>&lt;code>;&lt;/code> комментарии в одной строке с кодом;&lt;/li>
&lt;li>&lt;code>;;&lt;/code> комментарии, которые не находятся на одной строке с кодом;&lt;/li>
&lt;li>&lt;code>;;;&lt;/code> Комментарий, используемый в качестве заголовков.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Пример использования всех типов комментариев:&lt;/p>
&lt;pre>&lt;code class="language-emacs-lisp">;;; My heading
;; A function that greets people
(defun greet (&amp;amp;optional name)
&amp;quot;My function&amp;quot;
(message
(concat &amp;quot;Hello &amp;quot;
(if name ; check if nil
name
&amp;quot;World&amp;quot;))))
(greet)
;; This prints Hello World
(greet &amp;quot;Gene&amp;quot;)
;; This prints Hello Gene
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Команда &lt;code>M-;&lt;/code> (&lt;code>comment-dwim&lt;/code>) автоматически создаёт комментарий соответствующего типа или смещает существующий комментарий в нужное место, в зависимости от количества точек с запятой.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Литература&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html" target="_blank" rel="noopener">https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html&lt;/a>;&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Comments.html" target="_blank" rel="noopener">https://www.gnu.org/software/emacs/manual/html_node/elisp/Comments.html&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="соглашения-для-комментариев">&lt;span class="section-num">2&lt;/span> Соглашения для комментариев&lt;/h2>
&lt;h3 id="09a0a0">&lt;span class="section-num">2.1&lt;/span> &lt;code>;&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>Комментарии, начинающиеся с одной точки с запятой &lt;code>;&lt;/code>, должны быть выровнены по одному и тому же столбцу справа от исходного кода.&lt;/li>
&lt;li>Такие комментарии обычно объясняют, как код в этой строке выполняет свою работу:
&lt;pre>&lt;code class="language-emacs-lisp">(setq base-version-list ; There was a base
(assoc (substring fn 0 start-vn) ; version to which
file-version-assoc-list)) ; this looks like
; a subversion.
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="189c88">&lt;span class="section-num">2.2&lt;/span> &lt;code>;;&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>Комментарии, начинающиеся с двух точек с запятой &lt;code>;;&lt;/code>, должны быть выровнены по тому же уровню отступа, что и код.&lt;/li>
&lt;li>Такие комментарии обычно описывают назначение следующих строк или состояние программы в этот момент:
&lt;pre>&lt;code class="language-emacs-lisp">(prog1 (setq auto-fill-function
…
…
;; Update mode line.
(force-mode-line-update)))
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Также этот тип комментария используется для комментариев вне функций:
&lt;pre>&lt;code class="language-emacs-lisp">;; This Lisp code is run in Emacs when it is to operate as
;; a server for other processes.
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Если у функции нет строки документации, вместо этого она должна иметь комментарий с двумя точками с запятой прямо перед функцией, объясняющий, что делает функция и как ее правильно вызывать.&lt;/li>
&lt;li>Следует объяснить, что означает каждый аргумент и как функция интерпретирует его возможные значения.&lt;/li>
&lt;/ul>
&lt;h3 id="ec58a0">&lt;span class="section-num">2.3&lt;/span> &lt;code>;;;&lt;/code>&lt;/h3>
&lt;ul>
&lt;li>Комментарии, начинающиеся с трех (или более) точек с запятой &lt;code>;;;&lt;/code>, должен начинаться с левого края.&lt;/li>
&lt;li>Используется для комментариев, которые должны считаться заголовком.&lt;/li>
&lt;li>По умолчанию комментарии, начинающиеся как минимум с трех точек с запятой (за которыми следует один пробел и символ, не являющийся пробелом), считаются заголовками разделов, а комментарии, начинающиеся с двух или менее, &amp;mdash; нет.&lt;/li>
&lt;li>Три точки с запятой используются для разделов верхнего уровня, четыре для подразделов, пять для подразделов и так далее:
&lt;pre>&lt;code class="language-emacs-lisp">;;; backquote.el --- implement the ` Lisp construct...
;;; Commentary:...
;;; Code:...
;;; backquote.el ends here
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul></description></item><item><title>Диаграммы. PlantUML</title><link>https://yamadharma.github.io/ru/post/2022/02/01/diagrams-plantuml/</link><pubDate>Tue, 01 Feb 2022 19:06:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/02/01/diagrams-plantuml/</guid><description>&lt;p>Язык рисования диаграмм PlantUML. PlantUML реализует концепцию &lt;em>Diagram as Code&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#введение">&lt;span class="section-num">1&lt;/span> Введение&lt;/a>&lt;/li>
&lt;li>&lt;a href="#поддерживаемые-типы-диаграмм">&lt;span class="section-num">2&lt;/span> Поддерживаемые типы диаграмм&lt;/a>&lt;/li>
&lt;li>&lt;a href="#поддержка-редактирования-plantuml">&lt;span class="section-num">3&lt;/span> Поддержка редактирования plantuml&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="введение">&lt;span class="section-num">1&lt;/span> Введение&lt;/h2>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://plantuml.com/" target="_blank" rel="noopener">https://plantuml.com/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/plantuml/plantuml" target="_blank" rel="noopener">https://github.com/plantuml/plantuml&lt;/a>&lt;/li>
&lt;li>Список официальных тем: &lt;a href="https://the-lum.github.io/puml-themes-gallery/" target="_blank" rel="noopener">https://the-lum.github.io/puml-themes-gallery/&lt;/a>&lt;/li>
&lt;li>Язык реализации: Java.&lt;/li>
&lt;li>В качестве бекэнда использует GraphViz.&lt;/li>
&lt;/ul>
&lt;h2 id="поддерживаемые-типы-диаграмм">&lt;span class="section-num">2&lt;/span> Поддерживаемые типы диаграмм&lt;/h2>
&lt;ul>
&lt;li>UML диаграммы
&lt;ul>
&lt;li>Диаграммы последовательности&lt;/li>
&lt;li>Диаграммы использования (прецедентов)&lt;/li>
&lt;li>Диаграммы классов&lt;/li>
&lt;li>Диаграммы объектов&lt;/li>
&lt;li>Диаграммы активности&lt;/li>
&lt;li>Диаграммы компонентов&lt;/li>
&lt;li>Диаграммы развёртывания&lt;/li>
&lt;li>Диаграммы состояний&lt;/li>
&lt;li>Диаграммы синхронизации&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Не-UML диаграммы
&lt;ul>
&lt;li>JSON данные&lt;/li>
&lt;li>Данные в формате YAML&lt;/li>
&lt;li>Диаграммы сети (nwdiag)&lt;/li>
&lt;li>Каркасный графический интерфейс&lt;/li>
&lt;li>Диаграммы ArchiMate&lt;/li>
&lt;li>Язык описания и спецификации (SDL)&lt;/li>
&lt;li>Диаграммы Ditaa&lt;/li>
&lt;li>Диаграммы Gantt&lt;/li>
&lt;li>Диаграммы MindMap&lt;/li>
&lt;li>Диаграммы иерархической структуры работ (WBS)&lt;/li>
&lt;li>Математика в нотации AsciiMath или JLaTeXMath&lt;/li>
&lt;li>Диаграммы типа сущность - связь (ER)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="поддержка-редактирования-plantuml">&lt;span class="section-num">3&lt;/span> Поддержка редактирования plantuml&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/10/20/emacs-plantuml/">Emacs. Plantuml&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Emacs. Julia. Julia-repl</title><link>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-repl/</link><pubDate>Fri, 21 Jan 2022 18:03:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-repl/</guid><description>&lt;p>Реализация REPL для &lt;em>Julia&lt;/em> в &lt;em>Emacs&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#сочетания-клавиш">&lt;span class="section-num">2&lt;/span> Сочетания клавиш&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Репозиторий: &lt;a href="https://github.com/tpapp/julia-repl" target="_blank" rel="noopener">https://github.com/tpapp/julia-repl&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="сочетания-клавиш">&lt;span class="section-num">2&lt;/span> Сочетания клавиш&lt;/h2>
&lt;div class="table-caption">
&lt;span class="table-number">&amp;#1058;&amp;#1072;&amp;#1073;&amp;#1083;&amp;#1080;&amp;#1094;&amp;#1072; 1&lt;/span>:
Сочетание клавишь при работе с julia-repl
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Сочетание&lt;/th>
&lt;th>Действие&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-a&lt;/code>&lt;/td>
&lt;td>активировать, если в родительских каталогах есть &lt;code>Project.toml&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-u&lt;/code> &lt;code>C-c&lt;/code> &lt;code>C-a&lt;/code>&lt;/td>
&lt;td>активировать домашний проект&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-b&lt;/code>&lt;/td>
&lt;td>отправить весь буфер в REPL (используя &lt;code>include&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-u&lt;/code> &lt;code>C-c&lt;/code> &lt;code>C-b&lt;/code>&lt;/td>
&lt;td>отправить весь буфер в REPL (напрямую)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-c&lt;/code>&lt;/td>
&lt;td>отправить регион (если применимо) или строку в REPL&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-d&lt;/code>&lt;/td>
&lt;td>вызвать &lt;code>@doc&lt;/code> для символа&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-e&lt;/code>&lt;/td>
&lt;td>вызвать &lt;code>@edit&lt;/code> для региона (если применимо) или строки&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-l&lt;/code>&lt;/td>
&lt;td>список методов функции&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-m&lt;/code>&lt;/td>
&lt;td>развернуть макрос&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-p&lt;/code>&lt;/td>
&lt;td>изменить каталог на каталог буфера&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-s&lt;/code>&lt;/td>
&lt;td>запрашивать суффикс имени буфера&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-t&lt;/code>&lt;/td>
&lt;td>отправить весь буфер в REPL (используя &lt;code>Revise.includet&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-v&lt;/code>&lt;/td>
&lt;td>запрос исполняемого файла Julia&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-c&lt;/code> &lt;code>C-z&lt;/code>&lt;/td>
&lt;td>показать REPL или создать новый (или переключиться обратно на REPL &amp;mdash; только в бэкэнде &lt;code>vterm&lt;/code>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>C-RET&lt;/code>&lt;/td>
&lt;td>отправить строку в REPL (без bracketed вставки)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Emacs. Julia. Julia-mode</title><link>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-mode/</link><pubDate>Fri, 21 Jan 2022 17:26:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-mode/</guid><description>&lt;p>Базовый минимальный режим поддержки языка программирования &lt;em>Julia&lt;/em>&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Репозиторий: &lt;a href="https://github.com/JuliaEditorSupport/julia-emacs" target="_blank" rel="noopener">https://github.com/JuliaEditorSupport/julia-emacs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Emacs. Julia</title><link>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia/</link><pubDate>Fri, 21 Jan 2022 17:13:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia/</guid><description>&lt;p>Поддержка редактором &lt;em>Emacs&lt;/em> языка научного программирования &lt;em>Julia&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#базовые-режимы">&lt;span class="section-num">1&lt;/span> Базовые режимы&lt;/a>&lt;/li>
&lt;li>&lt;a href="#режим-repl">&lt;span class="section-num">2&lt;/span> Режим REPL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="базовые-режимы">&lt;span class="section-num">1&lt;/span> Базовые режимы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-mode/">Emacs. Julia. Julia-mode&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="режим-repl">&lt;span class="section-num">2&lt;/span> Режим REPL&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia-julia-repl/">Emacs. Julia. Julia-repl&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Язык программирования Julia</title><link>https://yamadharma.github.io/ru/post/2022/01/21/julia-programming-language/</link><pubDate>Fri, 21 Jan 2022 16:52:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2022/01/21/julia-programming-language/</guid><description>&lt;p>Язык научного программирования &lt;em>Julia&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#поддержка-редакторами">&lt;span class="section-num">2&lt;/span> Поддержка редакторами&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#vscode">&lt;span class="section-num">2.1&lt;/span> VSCode&lt;/a>&lt;/li>
&lt;li>&lt;a href="#emacs">&lt;span class="section-num">2.2&lt;/span> Emacs&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#пакеты">&lt;span class="section-num">3&lt;/span> Пакеты&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#дифференциальные-уравнения">&lt;span class="section-num">3.1&lt;/span> Дифференциальные уравнения&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://julialang.org/" target="_blank" rel="noopener">https://julialang.org/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/JuliaLang/julia" target="_blank" rel="noopener">https://github.com/JuliaLang/julia&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="поддержка-редакторами">&lt;span class="section-num">2&lt;/span> Поддержка редакторами&lt;/h2>
&lt;h3 id="vscode">&lt;span class="section-num">2.1&lt;/span> VSCode&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/05/vscode-julia/">VSCode. Julia&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="emacs">&lt;span class="section-num">2.2&lt;/span> Emacs&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/01/21/emacs-julia/">Emacs. Julia&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="пакеты">&lt;span class="section-num">3&lt;/span> Пакеты&lt;/h2>
&lt;h3 id="дифференциальные-уравнения">&lt;span class="section-num">3.1&lt;/span> Дифференциальные уравнения&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/02/julia-differentialequations-callback-functions/">Julia. DifferentialEquations.jl. Callback functions&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Языки разметки</title><link>https://yamadharma.github.io/ru/post/2021/10/14/markup-languages/</link><pubDate>Thu, 14 Oct 2021 18:02:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/10/14/markup-languages/</guid><description>&lt;p>Языки разметки.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#виды-языков-разметки">&lt;span class="section-num">2&lt;/span> Виды языков разметки&lt;/a>&lt;/li>
&lt;li>&lt;a href="#системы-рендеринга">&lt;span class="section-num">3&lt;/span> Системы рендеринга&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Обычно язык разметки неполон по Тьюрингу, не считается языком программирования.&lt;/li>
&lt;/ul>
&lt;h2 id="виды-языков-разметки">&lt;span class="section-num">2&lt;/span> Виды языков разметки&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/28/lightweight-markup-languages/">Легковесные языки разметки&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/04/23/tex/">Система TeX&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="системы-рендеринга">&lt;span class="section-num">3&lt;/span> Системы рендеринга&lt;/h2>
&lt;ul>
&lt;li>Обычно системы рендеринга привязаны к определённому языку.&lt;/li>
&lt;li>Но существуют и сторонние (относительно языка) системы рендеринга.
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/28/pandoc/">Pandoc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/03/26/mathjax/">MathJax&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Octave. Установка пакетов</title><link>https://yamadharma.github.io/ru/post/2021/08/26/octave-install-packages/</link><pubDate>Thu, 26 Aug 2021 16:51:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/08/26/octave-install-packages/</guid><description>&lt;p>Установка пакетов расширения в системе &lt;em>Octave&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#установка-пакета">&lt;span class="section-num">2&lt;/span> Установка пакета&lt;/a>&lt;/li>
&lt;li>&lt;a href="#видео">&lt;span class="section-num">3&lt;/span> Видео&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Список пакетов расширения:
&lt;ul>
&lt;li>&lt;a href="https://gnu-octave.github.io/packages/" target="_blank" rel="noopener">https://gnu-octave.github.io/packages/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://octave.sourceforge.io/packages.php" target="_blank" rel="noopener">https://octave.sourceforge.io/packages.php&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="установка-пакета">&lt;span class="section-num">2&lt;/span> Установка пакета&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Определим место установки пакета:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>глобально на уровне системы:&lt;/p>
&lt;pre>&lt;code class="language-octave">pkg prefix -global
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>локально в каталоге пользователя:&lt;/p>
&lt;pre>&lt;code class="language-octave">pkg prefix -local
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Будем устанавливать из центрального репозитория пакетов &lt;em>Octave Forge&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Просмотрим список пакетов в репозитории:&lt;/p>
&lt;pre>&lt;code class="language-octave">pkg list -forge
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>На всякий случай посмотрим список локальных пакетов:&lt;/p>
&lt;pre>&lt;code class="language-octave">pkg list
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Установим нужный пакет:&lt;/p>
&lt;pre>&lt;code class="language-octave">pkg install &amp;lt;package_name&amp;gt; -forge
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="видео">&lt;span class="section-num">3&lt;/span> Видео&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/Xcn3f2bh7mc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>Язык программирования Octave</title><link>https://yamadharma.github.io/ru/post/2021/08/26/octave-programming-language/</link><pubDate>Thu, 26 Aug 2021 16:47:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/08/26/octave-programming-language/</guid><description>&lt;p>Язык программирования &lt;em>Octave&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#разное">&lt;span class="section-num">2&lt;/span> Разное&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Клон языка Matlab.&lt;/li>
&lt;li>Сайт: &lt;a href="https://www.gnu.org/software/octave" target="_blank" rel="noopener">https://www.gnu.org/software/octave&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="разное">&lt;span class="section-num">2&lt;/span> Разное&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/26/octave-install-packages/">Octave. Установка пакетов&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Научное программирование</title><link>https://yamadharma.github.io/ru/post/2021/08/26/scientific-programming/</link><pubDate>Thu, 26 Aug 2021 16:44:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/08/26/scientific-programming/</guid><description>&lt;p>Научное программирование.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общие-вопросы">&lt;span class="section-num">1&lt;/span> Общие вопросы&lt;/a>&lt;/li>
&lt;li>&lt;a href="#языки-научного-программирования">&lt;span class="section-num">2&lt;/span> Языки научного программирования&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общие-вопросы">&lt;span class="section-num">1&lt;/span> Общие вопросы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/25/scientific-software/">Научное программное обеспечение&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="языки-научного-программирования">&lt;span class="section-num">2&lt;/span> Языки научного программирования&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/26/octave-programming-language/">Язык программирования Octave&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>github: утилиты командной строки</title><link>https://yamadharma.github.io/ru/post/2021/08/04/github-command-line-utilities/</link><pubDate>Wed, 04 Aug 2021 14:40:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/08/04/github-command-line-utilities/</guid><description>&lt;p>Утилиты работы с &lt;em>github&lt;/em> из командной строки.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#установка-программного-обеспечения">&lt;span class="section-num">2&lt;/span> Установка программного обеспечения&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#linux">&lt;span class="section-num">2.1&lt;/span> Linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="#windows">&lt;span class="section-num">2.2&lt;/span> Windows&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#порядок-работы">&lt;span class="section-num">3&lt;/span> Порядок работы&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#начало-работы">&lt;span class="section-num">3.1&lt;/span> Начало работы&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#основные-задачи">&lt;span class="section-num">4&lt;/span> Основные задачи&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#релизы--releases">&lt;span class="section-num">4.1&lt;/span> Релизы (releases)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#список-релизов">&lt;span class="section-num">4.1.1&lt;/span> Список релизов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#информация-о-релизе">&lt;span class="section-num">4.1.2&lt;/span> Информация о релизе&lt;/a>&lt;/li>
&lt;li>&lt;a href="#создание-релиза">&lt;span class="section-num">4.1.3&lt;/span> Создание релиза&lt;/a>&lt;/li>
&lt;li>&lt;a href="#загрузка-ресурсов-в-выпуск">&lt;span class="section-num">4.1.4&lt;/span> Загрузка ресурсов в выпуск&lt;/a>&lt;/li>
&lt;li>&lt;a href="#скачать-ресурсы-выпуска">&lt;span class="section-num">4.1.5&lt;/span> Скачать ресурсы выпуска&lt;/a>&lt;/li>
&lt;li>&lt;a href="#удаление-выпуска">&lt;span class="section-num">4.1.6&lt;/span> Удаление выпуска&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#проблемы--issues">&lt;span class="section-num">4.2&lt;/span> Проблемы (issues)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Репозиторий: &lt;a href="https://github.com/cli/cli" target="_blank" rel="noopener">https://github.com/cli/cli&lt;/a>&lt;/li>
&lt;li>Документация: &lt;a href="https://cli.github.com/manual/" target="_blank" rel="noopener">https://cli.github.com/manual/&lt;/a>&lt;/li>
&lt;li>Ранее для этих же целей разрабатывалась программа &lt;em>Hub&lt;/em> (&lt;a href="https://hub.github.com/" target="_blank" rel="noopener">https://hub.github.com/&lt;/a>), но её забросили (см. &lt;a href="https://mislav.net/2020/01/github-cli/" target="_blank" rel="noopener">https://mislav.net/2020/01/github-cli/&lt;/a>).&lt;/li>
&lt;/ul>
&lt;h2 id="установка-программного-обеспечения">&lt;span class="section-num">2&lt;/span> Установка программного обеспечения&lt;/h2>
&lt;h3 id="linux">&lt;span class="section-num">2.1&lt;/span> Linux&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Gentoo:&lt;/p>
&lt;pre>&lt;code class="language-shell">emerge dev-util/github-cli
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Fedora:&lt;/p>
&lt;pre>&lt;code class="language-shell">sudo dnf install gh
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="windows">&lt;span class="section-num">2.2&lt;/span> Windows&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Chocolatey&lt;/p>
&lt;pre>&lt;code class="language-shell">choco install gh
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="порядок-работы">&lt;span class="section-num">3&lt;/span> Порядок работы&lt;/h2>
&lt;h3 id="начало-работы">&lt;span class="section-num">3.1&lt;/span> Начало работы&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Для начала необходимо авторизоваться&lt;/p>
&lt;pre>&lt;code class="language-shell">gh auth login
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Утилита задаст несколько наводящих вопросов.&lt;/li>
&lt;li>Авторизоваться можно через броузер.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="основные-задачи">&lt;span class="section-num">4&lt;/span> Основные задачи&lt;/h2>
&lt;h3 id="релизы--releases">&lt;span class="section-num">4.1&lt;/span> Релизы (releases)&lt;/h3>
&lt;h4 id="список-релизов">&lt;span class="section-num">4.1.1&lt;/span> Список релизов&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release list [flags]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-L&lt;/code>, &lt;code>--limit int&lt;/code>: максимальное количество элементов для выборки (по умолчанию 30).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="информация-о-релизе">&lt;span class="section-num">4.1.2&lt;/span> Информация о релизе&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release view [&amp;lt;tag&amp;gt;] [flags]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-q&lt;/code>, &lt;code>--jq expression&lt;/code>: фильтровать вывод JSON с использованием выражения &lt;em>jq&lt;/em>;&lt;/li>
&lt;li>&lt;code>--json fields&lt;/code>: выводить JSON с указанными полями;&lt;/li>
&lt;li>&lt;code>-t&lt;/code>, &lt;code>--template string&lt;/code>: форматировать вывод JSON с использованием шаблона &lt;em>Go&lt;/em>;&lt;/li>
&lt;li>&lt;code>-w&lt;/code>, &lt;code>--web&lt;/code>: открыть выпуск в броузере.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="создание-релиза">&lt;span class="section-num">4.1.3&lt;/span> Создание релиза&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create &amp;lt;tag&amp;gt; [&amp;lt;files&amp;gt;...]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-d&lt;/code>, &lt;code>--draft&lt;/code>: сохранить релиз как черновик вместо его публикации;&lt;/li>
&lt;li>&lt;code>-n&lt;/code>, &lt;code>--notes string&lt;/code>: примечания к выпуску;&lt;/li>
&lt;li>&lt;code>-F&lt;/code>, &lt;code>--notes-file file&lt;/code>: взять примечания к выпуску из файла;&lt;/li>
&lt;li>&lt;code>-p&lt;/code>, &lt;code>--prerelease&lt;/code>: отметить выпуск как предварительный;&lt;/li>
&lt;li>&lt;code>--target branch&lt;/code>: задать целевую ветку;&lt;/li>
&lt;li>&lt;code>-t&lt;/code>, &lt;code>--title string&lt;/code>: задать название выпуска.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Примеры:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Интерактивное создание выпуска:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Создание релиза в неинтерактивном режиме:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3 --notes &amp;quot;bugfix release&amp;quot;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Использовать примечания к выпуску из файла:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3 -F CHANGELOG.md
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="загрузка-ресурсов-в-выпуск">&lt;span class="section-num">4.1.4&lt;/span> Загрузка ресурсов в выпуск&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release upload &amp;lt;tag&amp;gt; &amp;lt;files&amp;gt;... [flags]
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Чтобы задать отображаемую метку для ресурса, добавьте текст, начинающийся с символа &lt;code>#&lt;/code>, после имени файла.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--clobber&lt;/code>: перезаписать существующие ресурсы с тем же именем.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Загрузить ресурсные файлы можно и при создании релиза.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Загрузите все архивы из каталога как ресурсы выпуска:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3 ./dist/*.tar.gz
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Загрузить ресурс выпуска с отображаемой меткой:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3 '/path/to/asset.zip#My display label'
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="скачать-ресурсы-выпуска">&lt;span class="section-num">4.1.5&lt;/span> Скачать ресурсы выпуска&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release download [&amp;lt;tag&amp;gt;] [flags]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-p&lt;/code>, &lt;code>--pattern&lt;/code>: задать шаблон имени файла.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Примеры.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Скачать все ресурсы из определенного выпуска:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release download v1.2.3
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Скачать файлы по шаблону из последнего релиза:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release download -p '*.deb' -p '*.rpm'
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="удаление-выпуска">&lt;span class="section-num">4.1.6&lt;/span> Удаление выпуска&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Команда:&lt;/p>
&lt;pre>&lt;code class="language-shell">gh release delete &amp;lt;tag&amp;gt; [flags]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Параметры:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-y&lt;/code>, &lt;code>--yes&lt;/code>: пропустить запрос на подтверждение.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="проблемы--issues">&lt;span class="section-num">4.2&lt;/span> Проблемы (issues)&lt;/h3></description></item><item><title>Моноширинные шрифты</title><link>https://yamadharma.github.io/ru/post/2021/05/21/monospace-fonts/</link><pubDate>Fri, 21 May 2021 13:25:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/05/21/monospace-fonts/</guid><description>&lt;p>Для программирования и описания программ в статьях необходим шрифт с большим количеством символов. Стандартный буквенный набор поддерживает большинство шрифтов (но не все поддерживают кириллицу), но с дополнительными символами могут возникнуть проблемы. Особенно часто дополнительные символы используются в программах на языке &lt;em>Julia&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#основные-определения">&lt;span class="section-num">1&lt;/span> Основные определения&lt;/a>&lt;/li>
&lt;li>&lt;a href="#сравнение-шрифтов">&lt;span class="section-num">2&lt;/span> Сравнение шрифтов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#применимость">&lt;span class="section-num">3&lt;/span> Применимость&lt;/a>&lt;/li>
&lt;li>&lt;a href="#активация-лигатур-в-шрифтах">&lt;span class="section-num">4&lt;/span> Активация лигатур в шрифтах&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#latex">&lt;span class="section-num">4.1&lt;/span> LaTeX&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#шрифты-с-лигатурами">&lt;span class="section-num">5&lt;/span> Шрифты с лигатурами&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#fira-code">&lt;span class="section-num">5.1&lt;/span> Fira Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="#iosevka">&lt;span class="section-num">5.2&lt;/span> Iosevka&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">5.2.1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#варианты">&lt;span class="section-num">5.2.2&lt;/span> Варианты&lt;/a>&lt;/li>
&lt;li>&lt;a href="#начертания">&lt;span class="section-num">5.2.3&lt;/span> Начертания&lt;/a>&lt;/li>
&lt;li>&lt;a href="#установка">&lt;span class="section-num">5.2.4&lt;/span> Установка&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#jetbrains-mono">&lt;span class="section-num">5.3&lt;/span> JetBrains Mono&lt;/a>&lt;/li>
&lt;li>&lt;a href="#juliamono">&lt;span class="section-num">5.4&lt;/span> JuliaMono&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hasklig">&lt;span class="section-num">5.5&lt;/span> Hasklig&lt;/a>&lt;/li>
&lt;li>&lt;a href="#cascadia-code">&lt;span class="section-num">5.6&lt;/span> Cascadia Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="#victor-mono">&lt;span class="section-num">5.7&lt;/span> Victor Mono&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#шрифты-с-иконками">&lt;span class="section-num">6&lt;/span> Шрифты с иконками&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#font-awesome">&lt;span class="section-num">6.1&lt;/span> Font Awesome&lt;/a>&lt;/li>
&lt;li>&lt;a href="#nerd-fonts">&lt;span class="section-num">6.2&lt;/span> Nerd fonts&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#шрифты">&lt;span class="section-num">7&lt;/span> Шрифты&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#source-code-pro">&lt;span class="section-num">7.1&lt;/span> Source Code Pro&lt;/a>&lt;/li>
&lt;li>&lt;a href="#anonymous-pro">&lt;span class="section-num">7.2&lt;/span> Anonymous Pro&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hack">&lt;span class="section-num">7.3&lt;/span> Hack&lt;/a>&lt;/li>
&lt;li>&lt;a href="#hermit">&lt;span class="section-num">7.4&lt;/span> Hermit&lt;/a>&lt;/li>
&lt;li>&lt;a href="#ibm-plex-mono">&lt;span class="section-num">7.5&lt;/span> IBM Plex Mono&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="основные-определения">&lt;span class="section-num">1&lt;/span> Основные определения&lt;/h2>
&lt;ul>
&lt;li>Моноширинный (непропорциональный) шрифт &amp;mdash; это шрифт, в котором все знаки (кегельные площадки знаков) имеют одинаковую ширину.&lt;/li>
&lt;/ul>
&lt;h2 id="сравнение-шрифтов">&lt;span class="section-num">2&lt;/span> Сравнение шрифтов&lt;/h2>
&lt;ul>
&lt;li>Есть несколько сайтов, на которых сравниваются шрифты для программирования на предмет широты охвата разных символов.
&lt;ul>
&lt;li>&lt;a href="https://mono-math.netlify.app/" target="_blank" rel="noopener">https://mono-math.netlify.app/&lt;/a> &amp;mdash; математические символы в моноширинных шрифтах.&lt;/li>
&lt;li>&lt;a href="https://devfonts.gafi.dev/" target="_blank" rel="noopener">https://devfonts.gafi.dev/&lt;/a> &amp;mdash; шрифты для программирования.&lt;/li>
&lt;li>&lt;a href="https://www.programmingfonts.org/" target="_blank" rel="noopener">https://www.programmingfonts.org/&lt;/a> &amp;mdash; шрифты для программирования.&lt;/li>
&lt;li>&lt;a href="https://coding-fonts.css-tricks.com/" target="_blank" rel="noopener">https://coding-fonts.css-tricks.com/&lt;/a> &amp;mdash; шрифты для программирования.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>На данный момент наибольшее количество математических символов содержит шрифт &lt;em>JuliaMono&lt;/em>.&lt;/li>
&lt;/ul>
&lt;h2 id="применимость">&lt;span class="section-num">3&lt;/span> Применимость&lt;/h2>
&lt;ul>
&lt;li>Шрифт для редактора (например, emacs) желательно выбирать с курсивом. Иначе, теряется определённый набор выделений текста.&lt;/li>
&lt;li>Также для семантического выделения курсив используют разные программы с текстовым интерфейсам (например, эмулятор терминала &lt;em>kitty&lt;/em>).&lt;/li>
&lt;li>Если шрифт имеет переменную ширину знаков, то едут таблицы.&lt;/li>
&lt;/ul>
&lt;h2 id="активация-лигатур-в-шрифтах">&lt;span class="section-num">4&lt;/span> Активация лигатур в шрифтах&lt;/h2>
&lt;h3 id="latex">&lt;span class="section-num">4.1&lt;/span> LaTeX&lt;/h3>
&lt;ul>
&lt;li>При использовании LuaTeX и XeTeX лигатуры включаются опцией &lt;code>Contextuals=Alternate&lt;/code> пакета &lt;code>fontspec&lt;/code>:
&lt;pre>&lt;code class="language-latex">\usepackage{fontspec}
\setmonofont{FontName}[Contextuals=Alternate]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="шрифты-с-лигатурами">&lt;span class="section-num">5&lt;/span> Шрифты с лигатурами&lt;/h2>
&lt;ul>
&lt;li>Часть шрифтов для программирования содержит лигатуры.&lt;/li>
&lt;/ul>
&lt;h3 id="fira-code">&lt;span class="section-num">5.1&lt;/span> Fira Code&lt;/h3>
&lt;ul>
&lt;li>Шрифт сделан на базе Fira Mono.&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/tonsky/FiraCode" target="_blank" rel="noopener">https://github.com/tonsky/FiraCode&lt;/a>&lt;/li>
&lt;li>Автор: Никита Прокопов
&lt;ul>
&lt;li>Блог в livejournal (на русском): &lt;a href="https://tonsky.livejournal.com/" target="_blank" rel="noopener">https://tonsky.livejournal.com/&lt;/a>&lt;/li>
&lt;li>Блог на английском: &lt;a href="https://tonsky.me/" target="_blank" rel="noopener">https://tonsky.me/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: нет&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/fira-code
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="iosevka">&lt;span class="section-num">5.2&lt;/span> Iosevka&lt;/h3>
&lt;h4 id="общая-информация">&lt;span class="section-num">5.2.1&lt;/span> Общая информация&lt;/h4>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://typeof.net/Iosevka/" target="_blank" rel="noopener">https://typeof.net/Iosevka/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/be5invis/Iosevka/" target="_blank" rel="noopener">https://github.com/be5invis/Iosevka/&lt;/a>&lt;/li>
&lt;li>Дизайн на основе:
&lt;ul>
&lt;li>PragmataPro,&lt;/li>
&lt;li>PF DIN Mono.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Первая версия называлась &lt;em>codexHW&lt;/em>:
&lt;ul>
&lt;li>была создана 19 июля 2015 года,&lt;/li>
&lt;li>через три дня шрифт был переименован в Iosevka.&lt;/li>
&lt;li>Создал китайский типограф Renzhi Li, использующий романизированный псевдоним Belleve Invis.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;del>Шрифт псевдопропорциональный, поэтому таблицы, оформленные этим шрифтом, разъезжаются.&lt;/del> (Исправлено в версии 10).&lt;/li>
&lt;li>Имеет узкий дизайн.&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="варианты">&lt;span class="section-num">5.2.2&lt;/span> Варианты&lt;/h4>
&lt;ul>
&lt;li>Для всех вариантов пакеты содержат три варианта интервалов.
&lt;ul>
&lt;li>&lt;em>Default&lt;/em>: вариант по умолчанию с лигатурами. Также содержит широкие (2 столбца) символы (например, стрелки).&lt;/li>
&lt;li>&lt;em>Terminal (Term)&lt;/em>: более узкий вариант для терминала. Стрелки и геометрические символы будут узкими.&lt;/li>
&lt;li>&lt;em>Fixed&lt;/em>: моноширинный шрифт без лигатур и широких глифов.
&lt;ul>
&lt;li>Некоторые среды не воспринимают &lt;em>Iosevka&lt;/em> или &lt;em>Iosevka Term&lt;/em> как моноширинные шрифты и не могут работать с лигатурами.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="начертания">&lt;span class="section-num">5.2.3&lt;/span> Начертания&lt;/h4>
&lt;ul>
&lt;li>&lt;em>Iosevka&lt;/em>: Monospace, Default.&lt;/li>
&lt;li>&lt;em>Iosevka Slab&lt;/em>: Monospace, Slab-serif.&lt;/li>
&lt;li>&lt;em>Iosevka Curly&lt;/em>: Monospace, Curly Style.&lt;/li>
&lt;li>&lt;em>Iosevka Curly Slab&lt;/em>: Monospace, Curly Style, Slab-serif.&lt;/li>
&lt;li>&lt;em>Iosevka Aile&lt;/em>: Quasi-proportional, Sans-serif.&lt;/li>
&lt;li>&lt;em>Iosevka Etoile&lt;/em>: Quasi-proportional, Slab-serif.&lt;/li>
&lt;/ul>
&lt;h4 id="установка">&lt;span class="section-num">5.2.4&lt;/span> Установка&lt;/h4>
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/iosevka
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="jetbrains-mono">&lt;span class="section-num">5.3&lt;/span> JetBrains Mono&lt;/h3>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://www.jetbrains.com/lp/mono/" target="_blank" rel="noopener">https://www.jetbrains.com/lp/mono/&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/jetbrains-mono
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="juliamono">&lt;span class="section-num">5.4&lt;/span> JuliaMono&lt;/h3>
&lt;ul>
&lt;li>Достаточно полный набор математических символов:
&lt;ul>
&lt;li>&lt;a href="https://mono-math.netlify.app/#JuliaMono" target="_blank" rel="noopener">https://mono-math.netlify.app/#JuliaMono&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://coding-fonts.css-tricks.com/fonts/juliamono/?language=charmap" target="_blank" rel="noopener">https://coding-fonts.css-tricks.com/fonts/juliamono/?language=charmap&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Сайт: &lt;a href="https://juliamono.netlify.app/" target="_blank" rel="noopener">https://juliamono.netlify.app/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/cormullion/juliamono" target="_blank" rel="noopener">https://github.com/cormullion/juliamono&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: нет&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>LaTeX
&lt;ul>
&lt;li>
&lt;p>Использование в LuaLaTeX и XeLaTeX:&lt;/p>
&lt;pre>&lt;code class="language-latex">\usepackage{fontspec}
\newfontfamily\JuliaMono{JuliaMono}[
Path=./fonts/,
UprightFont=*-Regular,
BoldFont=*-Bold,
Extension=.ttf]
\newfontface\JuliaMonoRegular{JuliaMono-Regular}
\newfontface\JuliaMonoBold{JuliaMono-Bold}
\setmonofont{JuliaMono-Medium}[
Contextuals=Alternate,
Scale=0.8]
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Здесь шрифты расположены в локальном каталоге &lt;code>./fonts&lt;/code>.&lt;/li>
&lt;li>В зависимости от гарнитуры основного текста для кода можно использовать вместо гарнитуры &lt;code>JuliaMono-Medium&lt;/code> гарнитуру &lt;code>JuliaMono-Light&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Стиль для &lt;code>listings&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/mossr/julia-mono-listings" target="_blank" rel="noopener">https://github.com/mossr/julia-mono-listings&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="hasklig">&lt;span class="section-num">5.5&lt;/span> Hasklig&lt;/h3>
&lt;ul>
&lt;li>Сделан на основе Source Code Pro с добавлением лигатур.&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/i-tu/Hasklig" target="_blank" rel="noopener">https://github.com/i-tu/Hasklig&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: нет&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="cascadia-code">&lt;span class="section-num">5.6&lt;/span> Cascadia Code&lt;/h3>
&lt;ul>
&lt;li>Разработан для Windows Terminal.&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/microsoft/cascadia-code" target="_blank" rel="noopener">https://github.com/microsoft/cascadia-code&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: нет&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/cascadia-code
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="victor-mono">&lt;span class="section-num">5.7&lt;/span> Victor Mono&lt;/h3>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://rubjo.github.io/victor-mono/" target="_blank" rel="noopener">https://rubjo.github.io/victor-mono/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/rubjo/victor-mono" target="_blank" rel="noopener">https://github.com/rubjo/victor-mono&lt;/a>&lt;/li>
&lt;li>Таблицы, оформленные этим шрифтом, разъезжаются.&lt;/li>
&lt;li>Имеет узкий дизайн.&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: MIT&lt;/li>
&lt;li>Лигатуры: есть&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;ul>
&lt;li>Можно найти в оверлее:
&lt;ul>
&lt;li>&lt;em>4nykey&lt;/em>: &lt;a href="https://gpo.zugaina.org/Overlays/4nykey" target="_blank" rel="noopener">https://gpo.zugaina.org/Overlays/4nykey&lt;/a>&lt;/li>
&lt;li>karma: &lt;a href="https://github.com/yamadharma/gentoo-portage-local" target="_blank" rel="noopener">https://github.com/yamadharma/gentoo-portage-local&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка
&lt;pre>&lt;code class="language-shell">emerge media-fonts/victor-mono
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="шрифты-с-иконками">&lt;span class="section-num">6&lt;/span> Шрифты с иконками&lt;/h2>
&lt;h3 id="font-awesome">&lt;span class="section-num">6.1&lt;/span> Font Awesome&lt;/h3>
&lt;ul>
&lt;li>Наиболее известный шрифт с иконками.&lt;/li>
&lt;li>&lt;a href="https://fontawesome.com/" target="_blank" rel="noopener">https://fontawesome.com/&lt;/a>&lt;/li>
&lt;li>Font Awesome Pro
&lt;ul>
&lt;li>&lt;a href="https://fontawesome.com/pro" target="_blank" rel="noopener">https://fontawesome.com/pro&lt;/a>&lt;/li>
&lt;li>Распространяется по платной подписке.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Font Awesome Free
&lt;ul>
&lt;li>&lt;a href="https://github.com/FortAwesome/Font-Awesome" target="_blank" rel="noopener">https://github.com/FortAwesome/Font-Awesome&lt;/a>&lt;/li>
&lt;li>Лицензия:
&lt;ul>
&lt;li>Иконки: CC BY 4.0&lt;/li>
&lt;li>Шрифты: SIL Open Font licence&lt;/li>
&lt;li>Программный код: MIT&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Для использования шрифта можно использовать список кодов для иконок &lt;a href="https://fontawesome.com/cheatsheet" target="_blank" rel="noopener">https://fontawesome.com/cheatsheet&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка
&lt;ul>
&lt;li>Gentoo
&lt;pre>&lt;code class="language-shell">emerge media-fonts/fontawesome
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="nerd-fonts">&lt;span class="section-num">6.2&lt;/span> Nerd fonts&lt;/h3>
&lt;ul>
&lt;li>Проект по добавлению ы разные шрифты дополнительных глифов (в основном иконок).&lt;/li>
&lt;li>Сайт: &lt;a href="https://www.nerdfonts.com/" target="_blank" rel="noopener">https://www.nerdfonts.com/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/ryanoasis/nerd-fonts/" target="_blank" rel="noopener">https://github.com/ryanoasis/nerd-fonts/&lt;/a>&lt;/li>
&lt;li>Поиск глифа: &lt;a href="https://www.nerdfonts.com/cheat-sheet" target="_blank" rel="noopener">https://www.nerdfonts.com/cheat-sheet&lt;/a>&lt;/li>
&lt;li>Установка
&lt;ul>
&lt;li>
&lt;p>Gentoo&lt;/p>
&lt;pre>&lt;code class="language-shell">USE=&amp;quot;iosevka&amp;quot; emerge nerd-fonts
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>При установке следует указать, какой конкретно шрифт следует устанавливать.&lt;/li>
&lt;li>Ebuild находится не в основном репозитории.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="шрифты">&lt;span class="section-num">7&lt;/span> Шрифты&lt;/h2>
&lt;h3 id="source-code-pro">&lt;span class="section-num">7.1&lt;/span> Source Code Pro&lt;/h3>
&lt;ul>
&lt;li>Часть набора Source Pro.&lt;/li>
&lt;li>Сайт: &lt;a href="http://adobe-fonts.github.io/source-code-pro/" target="_blank" rel="noopener">http://adobe-fonts.github.io/source-code-pro/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="noopener">https://github.com/adobe-fonts/source-code-pro&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: нет&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/source-pro
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="anonymous-pro">&lt;span class="section-num">7.2&lt;/span> Anonymous Pro&lt;/h3>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://www.marksimonson.com/fonts/view/anonymous-pro" target="_blank" rel="noopener">https://www.marksimonson.com/fonts/view/anonymous-pro&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: нет&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/anonymous-pro
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="hack">&lt;span class="section-num">7.3&lt;/span> Hack&lt;/h3>
&lt;ul>
&lt;li>Репозиторий: &lt;a href="https://github.com/source-foundry/Hack" target="_blank" rel="noopener">https://github.com/source-foundry/Hack&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: MIT&lt;/li>
&lt;li>Лигатуры: нет&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/hack
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="hermit">&lt;span class="section-num">7.4&lt;/span> Hermit&lt;/h3>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://pcaro.es/p/hermit/" target="_blank" rel="noopener">https://pcaro.es/p/hermit/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/pcaro90/hermit" target="_blank" rel="noopener">https://github.com/pcaro90/hermit&lt;/a>&lt;/li>
&lt;li>Таблицы, оформленные им, разъезжаются.&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: нет&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/hermit
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="ibm-plex-mono">&lt;span class="section-num">7.5&lt;/span> IBM Plex Mono&lt;/h3>
&lt;ul>
&lt;li>Сайт: &lt;a href="https://www.ibm.com/plex/" target="_blank" rel="noopener">https://www.ibm.com/plex/&lt;/a>&lt;/li>
&lt;li>Репозиторий: &lt;a href="https://github.com/IBM/plex" target="_blank" rel="noopener">https://github.com/IBM/plex&lt;/a>&lt;/li>
&lt;li>Свойства
&lt;ul>
&lt;li>Лицензия: SIL Open Font licence&lt;/li>
&lt;li>Лигатуры: нет&lt;/li>
&lt;li>Курсив: есть&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка.
&lt;ul>
&lt;li>Gentoo:
&lt;pre>&lt;code class="language-shell">emerge media-fonts/ibm-plex
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Варианты Git Workflow</title><link>https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/</link><pubDate>Sun, 18 Apr 2021 20:16:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/</guid><description>&lt;p>Варианты построения рабочего процесса на базе git.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#github-flow">Github flow&lt;/a>&lt;/li>
&lt;li>&lt;a href="#git-flow">Git flow&lt;/a>&lt;/li>
&lt;li>&lt;a href="#backlinks">Backlinks&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="github-flow">Github flow&lt;/h2>
&lt;p>Есть мастер. Когда необходимо что-то добавить, делается новая ветка: `feature branch`, `bugfix branch` etc.&lt;/p>
&lt;h2 id="git-flow">Git flow&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/04/18/gitflow-workflow/">Рабочий процесс Gitflow&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="backlinks">Backlinks&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/">Система контроля версий git&lt;/a>&lt;/li>
&lt;/ul>
&lt;!--listend-->
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/">Практический сценарий использования git&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>git. Несколько удалённых репозиториев</title><link>https://yamadharma.github.io/ru/post/2021/03/27/git-multiple-remote-repositories/</link><pubDate>Sat, 27 Mar 2021 14:08:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/03/27/git-multiple-remote-repositories/</guid><description>&lt;p>Я использую несколько серверов репозиториев: github, gitlab, bitbucket. Возникает необходимость использовать несколько удалённых репозиториев в проекте.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#несколько-удалённых-репозиториев">&lt;span class="section-num">2&lt;/span> Несколько удалённых репозиториев&lt;/a>&lt;/li>
&lt;li>&lt;a href="#замена-репозитория-по-умолчанию">&lt;span class="section-num">3&lt;/span> Замена репозитория по умолчанию&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Локальный репозиторий можно связать с несколькими удалёнными репозиториями. Однако только одна из этих ссылок может называться &lt;code>origin&lt;/code>. Остальные ссылки должны иметь другие имена.&lt;/li>
&lt;li>Команда &lt;code>git remote -v&lt;/code> отображает все удалённые репозитории, связанные с вашим локальным репозиторием.&lt;/li>
&lt;li>Для отправки или получения кода из вашего удалённого репозитория по умолчанию используется короткое имя &lt;code>origin&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="несколько-удалённых-репозиториев">&lt;span class="section-num">2&lt;/span> Несколько удалённых репозиториев&lt;/h2>
&lt;ul>
&lt;li>Можно добавить несколько удалённых репозиториев по &lt;code>https&lt;/code>:
&lt;pre>&lt;code class="language-shell">git remote add github https://github.com/your_name/repository_name.git
git remote add gitlab https://gitlab.com/your_name/repository_name.git
git remote add bitbucket https://bitbucket.org/your_name/repository_name.git
&lt;/code>&lt;/pre>
или по &lt;code>ssh&lt;/code>:
&lt;pre>&lt;code class="language-shell">git remote add github git@github.com:your_name/repository_name.git
git remote add gitlab git@gitlab.com:your_name/repository_name.git
git remote add bitbucket git@bitbucket.org:your_name/repository_name.git
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>По команде &lt;code>git remote -v&lt;/code> получим список репозиториев:
&lt;pre>&lt;code class="language-shell">github git@github.com:your_name/repository_name.git (fetch)
github git@github.com:your_name/repository_name.git (push)
gitlab git@gitlab.com:your_name/repository_name.git (fetch)
gitlab git@gitlab.com:your_name/repository_name.git (push)
bitbucket git@bitbucket.org:your_name/repository_name.git (fetch)
bitbucket git@bitbucket.org:your_name/repository_name.git (push)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Для отправки кода в репозиторий необходимо указать его имя:
&lt;pre>&lt;code class="language-shell">git push github
git push gitlab
git push bitbucket
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="замена-репозитория-по-умолчанию">&lt;span class="section-num">3&lt;/span> Замена репозитория по умолчанию&lt;/h2>
&lt;ul>
&lt;li>Любой из репозиториев можно назвать &lt;code>origin&lt;/code>, тогда он будет репозиторием по умолчанию.&lt;/li>
&lt;li>Также можно заменить текущий удалённый репозиторий:
&lt;pre>&lt;code class="language-shell">git remote set-url &amp;lt;remote_name&amp;gt; &amp;lt;remote_url&amp;gt;
&lt;/code>&lt;/pre>
Например:
&lt;pre>&lt;code class="language-shell">git remote set-url origin https://github.com/your_name/repository_name.git
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul></description></item><item><title>Верификация коммитов git с помощью GPG</title><link>https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/</link><pubDate>Thu, 28 Jan 2021 18:47:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/</guid><description>&lt;p>Настроим верификацию коммитов git с помощью GPG.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#верификация-коммитов-с-помощью-pgp">&lt;span class="section-num">2&lt;/span> Верификация коммитов с помощью &lt;em>PGP&lt;/em>&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#создание-ключа">&lt;span class="section-num">2.1&lt;/span> Создание ключа&lt;/a>&lt;/li>
&lt;li>&lt;a href="#экспорт-ключа">&lt;span class="section-num">2.2&lt;/span> Экспорт ключа&lt;/a>&lt;/li>
&lt;li>&lt;a href="#добавление-gpg-ключа-в-github">&lt;span class="section-num">2.3&lt;/span> Добавление GPG ключа в GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="#подписывание-коммитов-git">&lt;span class="section-num">2.4&lt;/span> Подписывание коммитов git&lt;/a>&lt;/li>
&lt;li>&lt;a href="#настройка-автоматических-подписей-коммитов-git">&lt;span class="section-num">2.5&lt;/span> Настройка автоматических подписей коммитов git&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#использование-keybase">&lt;span class="section-num">3&lt;/span> Использование Keybase&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#генерация-gpg-ключа">&lt;span class="section-num">3.1&lt;/span> Генерация GPG ключа&lt;/a>&lt;/li>
&lt;li>&lt;a href="#добавление-gpg-ключа-в-github">&lt;span class="section-num">3.2&lt;/span> Добавление GPG ключа в GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#проверка-коммитов-в-git">&lt;span class="section-num">4&lt;/span> Проверка коммитов в Git&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#режим-бдительности--vigilant-mode">&lt;span class="section-num">4.1&lt;/span> Режим бдительности (vigilant mode)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Коммиты имеют следующие свойства:
&lt;ul>
&lt;li>author (автор) &amp;mdash; контрибьютор, выполнивший работу (указывается для справки);&lt;/li>
&lt;li>committer (коммитер) &amp;mdash; пользователь, который закоммитил изменения.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Эти свойства можно переопределить при совершении коммита.&lt;/li>
&lt;li>Авторство коммита можно подделать.&lt;/li>
&lt;li>В git есть функция подписи коммитов.&lt;/li>
&lt;li>Для подписывания коммитов используется технология PGP (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/">Работа с PGP&lt;/a>).&lt;/li>
&lt;li>Подпись коммита позволяет удостовериться в том, кто является коммитером. Авторство не проверяется.&lt;/li>
&lt;/ul>
&lt;h2 id="верификация-коммитов-с-помощью-pgp">&lt;span class="section-num">2&lt;/span> Верификация коммитов с помощью &lt;em>PGP&lt;/em>&lt;/h2>
&lt;ul>
&lt;li>Как настроить PGP-подпись коммитов с помощью &lt;code>gpg&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="создание-ключа">&lt;span class="section-num">2.1&lt;/span> Создание ключа&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Генерируем ключ&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --full-generate-key
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Из предложенных опций выбираем:
&lt;ul>
&lt;li>тип &lt;em>RSA and RSA&lt;/em>;&lt;/li>
&lt;li>размер 4096;&lt;/li>
&lt;li>выберите срок действия; значение по умолчанию &amp;mdash; 0 (срок действия не истекает никогда).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GPG запросит личную информацию, которая сохранится в ключе:
&lt;ul>
&lt;li>Имя (не менее 5 символов).&lt;/li>
&lt;li>Адрес электронной почты.
&lt;ul>
&lt;li>При вводе email убедитесь, что он соответствует адресу, используемому на GitHub.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Комментарий. Можно ввести что угодно или нажать клавишу ввода, чтобы оставить это поле пустым.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="экспорт-ключа">&lt;span class="section-num">2.2&lt;/span> Экспорт ключа&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Выводим список ключей и копируем отпечаток приватного ключа:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --list-secret-keys --keyid-format LONG
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>Отпечаток ключа &amp;mdash; это последовательность байтов, используемая для идентификации более длинного, по сравнению с самим отпечатком ключа.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Формат строки:&lt;/p>
&lt;pre>&lt;code class="language-text">sec Алгоритм/Отпечаток_ключа Дата_создания [Флаги] [Годен_до]
ID_ключа
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Экспортируем ключ в формате ASCII по его отпечатку:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="добавление-gpg-ключа-в-github">&lt;span class="section-num">2.3&lt;/span> Добавление GPG ключа в GitHub&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Копируем ключ и добавляем его в настройках профиля на GitHub (или GitLab).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cкопируйте ваш сгенерированный PGP ключ в буфер обмена:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --armor --export &amp;lt;PGP Fingerprint&amp;gt; | xclip -sel clip
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Перейдите в настройки GitHub (&lt;a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys&lt;/a>), нажмите на кнопку &lt;em>New GPG key&lt;/em> и вставьте полученный ключ в поле ввода.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="подписывание-коммитов-git">&lt;span class="section-num">2.4&lt;/span> Подписывание коммитов git&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Подпись коммитов при работе через терминал:&lt;/p>
&lt;pre>&lt;code class="language-shell">git commit -a -S -m 'your commit message'
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Флаг &lt;code>-S&lt;/code> означает создание подписанного коммита. При этом может потребоваться ввод кодовой фразы, заданной при генерации GPG-ключа.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="настройка-автоматических-подписей-коммитов-git">&lt;span class="section-num">2.5&lt;/span> Настройка автоматических подписей коммитов git&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Используя введёный email, укажите Git применять его при подписи коммитов:&lt;/p>
&lt;pre>&lt;code class="language-shell">git config --global user.signingkey &amp;lt;PGP Fingerprint&amp;gt;
git config --global commit.gpgsign true
git config --global gpg.program $(which gpg2)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="использование-keybase">&lt;span class="section-num">3&lt;/span> Использование Keybase&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Для генерации и хранения GPG ключей можно использовать Keybase &lt;a href="https://keybase.io/" target="_blank" rel="noopener">https://keybase.io/&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>После того, как вы зарегистрируетесь в Keybase, зайдите в терминал и запустите следующие команды:&lt;/p>
&lt;pre>&lt;code class="language-shell">keybase login
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="генерация-gpg-ключа">&lt;span class="section-num">3.1&lt;/span> Генерация GPG ключа&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Создайте новый GPG ключ, используя ваше настоящее имя и email, сохраненный в GitHub:&lt;/p>
&lt;pre>&lt;code class="language-shell">keybase pgp gen
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Просмотр списка ключей:&lt;/p>
&lt;pre>&lt;code class="language-shell">keybase pgp list
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="добавление-gpg-ключа-в-github">&lt;span class="section-num">3.2&lt;/span> Добавление GPG ключа в GitHub&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Cкопируйте ваш сгенерированный PGP ключ:&lt;/p>
&lt;pre>&lt;code class="language-shell">keybase pgp export | xclip -i
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Перейдите в настройки GitHub (&lt;a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys&lt;/a>), нажмите на кнопку &lt;em>New GPG key&lt;/em> и вставьте полученный ключ в поле ввода.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="проверка-коммитов-в-git">&lt;span class="section-num">4&lt;/span> Проверка коммитов в Git&lt;/h2>
&lt;ul>
&lt;li>GitHub и GitLab будут показывать значок &lt;em>Verified&lt;/em> рядом с вашими новыми коммитами.&lt;/li>
&lt;/ul>
&lt;h3 id="режим-бдительности--vigilant-mode">&lt;span class="section-num">4.1&lt;/span> Режим бдительности (vigilant mode)&lt;/h3>
&lt;ul>
&lt;li>На GitHub есть настройка &lt;a href="https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/displaying-verification-statuses-for-all-of-your-commits" target="_blank" rel="noopener">vigilant mode&lt;/a>.&lt;/li>
&lt;li>Все неподписанные коммиты будут явно помечены как &lt;em>Unverified&lt;/em>.&lt;/li>
&lt;li>Включается это в настройках в разделе &lt;em>SSH and GPG keys&lt;/em>. Установите метку на &lt;em>Flag unsigned commits as unverified&lt;/em>.&lt;/li>
&lt;/ul></description></item><item><title>Практический сценарий использования git</title><link>https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/</link><pubDate>Sun, 17 Jan 2021 20:06:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/</guid><description>&lt;p>Предлагается следующий практический сценарий использование git. В нём мы используем стратегию &lt;em>git flow&lt;/em>, скрипты для генерации общепринятых коммитов, журнала изменений.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#используемые-стандарты-и-программные-продукты">&lt;span class="section-num">1&lt;/span> Используемые стандарты и программные продукты&lt;/a>&lt;/li>
&lt;li>&lt;a href="#установка-программного-обеспечения">&lt;span class="section-num">2&lt;/span> Установка программного обеспечения&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка-node-dot-js">&lt;span class="section-num">2.1&lt;/span> Установка Node.js&lt;/a>&lt;/li>
&lt;li>&lt;a href="#настройка-node-dot-js">&lt;span class="section-num">2.2&lt;/span> Настройка Node.js&lt;/a>&lt;/li>
&lt;li>&lt;a href="#установка-git-flow">&lt;span class="section-num">2.3&lt;/span> Установка git-flow&lt;/a>&lt;/li>
&lt;li>&lt;a href="#общепринятые-коммиты">&lt;span class="section-num">2.4&lt;/span> Общепринятые коммиты&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#commitizen">&lt;span class="section-num">2.4.1&lt;/span> commitizen&lt;/a>&lt;/li>
&lt;li>&lt;a href="#standard-version">&lt;span class="section-num">2.4.2&lt;/span> standard-version&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#настройка-git">&lt;span class="section-num">3&lt;/span> Настройка git&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#первичная-настройка-параметров-git">&lt;span class="section-num">3.1&lt;/span> Первичная настройка параметров git&lt;/a>&lt;/li>
&lt;li>&lt;a href="#дополнительные-настройки">&lt;span class="section-num">3.2&lt;/span> Дополнительные настройки&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#работа-с-переносами-строк">&lt;span class="section-num">3.2.1&lt;/span> Работа с переносами строк&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#практический-сценарий-использования-git">&lt;span class="section-num">4&lt;/span> Практический сценарий использования git&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#создание-репозитория-git">&lt;span class="section-num">4.1&lt;/span> Создание репозитория git&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#подготовка-каталога">&lt;span class="section-num">4.1.1&lt;/span> Подготовка каталога&lt;/a>&lt;/li>
&lt;li>&lt;a href="#подключение-репозитория-к-github">&lt;span class="section-num">4.1.2&lt;/span> Подключение репозитория к github&lt;/a>&lt;/li>
&lt;li>&lt;a href="#конфигурация-общепринятых-коммитов">&lt;span class="section-num">4.1.3&lt;/span> Конфигурация общепринятых коммитов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#конфигурация-git-flow">&lt;span class="section-num">4.1.4&lt;/span> Конфигурация git-flow&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#работа-с-репозиторием-git">&lt;span class="section-num">4.2&lt;/span> Работа с репозиторием git&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#разработка-новой-функциональности">&lt;span class="section-num">4.2.1&lt;/span> Разработка новой функциональности&lt;/a>&lt;/li>
&lt;li>&lt;a href="#создание-релиза-git-flow">&lt;span class="section-num">4.2.2&lt;/span> Создание релиза git-flow&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="используемые-стандарты-и-программные-продукты">&lt;span class="section-num">1&lt;/span> Используемые стандарты и программные продукты&lt;/h2>
&lt;ul>
&lt;li>Стандарт Git Flow (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/">Варианты Git Workflow&lt;/a>).&lt;/li>
&lt;li>Стандарт &lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>.&lt;/li>
&lt;li>Стандарт &lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятые коммиты&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="установка-программного-обеспечения">&lt;span class="section-num">2&lt;/span> Установка программного обеспечения&lt;/h2>
&lt;ul>
&lt;li>Для Windows используется пакетный менеджер Chocolatey (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/01/18/package-manager-windows-chocolatey/">Пакетный менеджер для Windows. Chocolatey&lt;/a>).&lt;/li>
&lt;li>Для MacOS используется пакетный менеджер &lt;a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h3 id="установка-node-dot-js">&lt;span class="section-num">2.1&lt;/span> Установка Node.js&lt;/h3>
&lt;p>На Node.js базируется программное обеспечение для семантического версионирования и общепринятых коммитов.&lt;/p>
&lt;ul>
&lt;li>Gentoo
&lt;pre>&lt;code class="language-shell">emerge nodejs
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Ubuntu
&lt;pre>&lt;code class="language-shell">apt-get install nodejs
apt-get install yarn
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Windows
&lt;pre>&lt;code class="language-shell">choco install nodejs
choco install yarn
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>MacOS
&lt;pre>&lt;code class="language-shell">brew install node
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="настройка-node-dot-js">&lt;span class="section-num">2.2&lt;/span> Настройка Node.js&lt;/h3>
&lt;p>Для работы с Node.js добавим каталог с исполняемыми файлами, устанавливаемыми &lt;code>yarn&lt;/code>, в переменную &lt;code>PATH&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>Linux
В файле &lt;code>~/.bashrc&lt;/code> добавьте к переменной &lt;code>PATH&lt;/code>:
&lt;pre>&lt;code class="language-conf-unix">PATH=~/.yarn/bin:$PATH
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="установка-git-flow">&lt;span class="section-num">2.3&lt;/span> Установка git-flow&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Linux&lt;/p>
&lt;ul>
&lt;li>Gentoo
&lt;pre>&lt;code class="language-shell">emerge dev-vcs/git-flow
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Ubuntu
&lt;pre>&lt;code class="language-shell">apt-get install git-flow
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Centos
&lt;ul>
&lt;li>Первоначально нужно установить репозиторий &lt;em>epel&lt;/em> (&lt;a href="https://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">https://fedoraproject.org/wiki/EPEL&lt;/a>):
&lt;pre>&lt;code class="language-shell">yum install epel-release
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Затем, собственно, установить git-flow:
&lt;pre>&lt;code class="language-shell">yum install gitflow
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Fedora
&lt;ul>
&lt;li>Это программное обеспечение удалено из репозитория.&lt;/li>
&lt;li>Необходимо устанавливать его вручную:
&lt;pre>&lt;code class="language-shell">cd /tmp
wget --no-check-certificate -q https://raw.github.com/petervanderdoes/gitflow/develop/contrib/gitflow-installer.sh
chmod +x gitflow-installer.sh
sudo ./gitflow-installer.sh install stable
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Windows
Git-flow входит в состав пакета git.&lt;/p>
&lt;pre>&lt;code class="language-shell">choco install git
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>MacOS&lt;/p>
&lt;pre>&lt;code class="language-shell">brew install git-flow
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="общепринятые-коммиты">&lt;span class="section-num">2.4&lt;/span> Общепринятые коммиты&lt;/h3>
&lt;h4 id="commitizen">&lt;span class="section-num">2.4.1&lt;/span> commitizen&lt;/h4>
&lt;ul>
&lt;li>Данная программа используется для помощи в форматировании коммитов.
&lt;pre>&lt;code class="language-shell">yarn global add commitizen
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>При этом устанавливается скрипт &lt;code>git-cz&lt;/code>, который мы и будем использовать для коммитов.&lt;/li>
&lt;/ul>
&lt;h4 id="standard-version">&lt;span class="section-num">2.4.2&lt;/span> standard-version&lt;/h4>
&lt;ul>
&lt;li>Данная программа автоматизирует изменение номера версии.
&lt;pre>&lt;code class="language-shell">yarn global add standard-version
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="настройка-git">&lt;span class="section-num">3&lt;/span> Настройка git&lt;/h2>
&lt;h3 id="первичная-настройка-параметров-git">&lt;span class="section-num">3.1&lt;/span> Первичная настройка параметров git&lt;/h3>
&lt;ul>
&lt;li>Зададим имя и email владельца репозитория:
&lt;pre>&lt;code class="language-shell">git config --global user.name &amp;quot;Name Surname&amp;quot;
git config --global user.email &amp;quot;work@mail&amp;quot;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Настроим utf-8 в выводе сообщений git:
&lt;pre>&lt;code class="language-shell">git config --global core.quotepath false
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Настройте верификацию и подписание коммитов git (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/">Верификация коммитов git с помощью GPG&lt;/a>).&lt;/li>
&lt;li>Зададим имя начальной ветки (будем называть её &lt;code>master&lt;/code>):
&lt;pre>&lt;code class="language-shell">git config --global init.defaultBranch master
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="дополнительные-настройки">&lt;span class="section-num">3.2&lt;/span> Дополнительные настройки&lt;/h3>
&lt;h4 id="работа-с-переносами-строк">&lt;span class="section-num">3.2.1&lt;/span> Работа с переносами строк&lt;/h4>
&lt;ul>
&lt;li>В разных операционных системах приняты разные символы для перевода строк:
&lt;ul>
&lt;li>Windows: &lt;code>\r\n&lt;/code> (&lt;code>CR&lt;/code> и &lt;code>LF&lt;/code>);&lt;/li>
&lt;li>Unix: &lt;code>\n&lt;/code> (&lt;code>LF&lt;/code>);&lt;/li>
&lt;li>Mac: &lt;code>\r&lt;/code> (&lt;code>CR&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Посмотреть значения переносов строк в репозитории можно командой:
&lt;pre>&lt;code class="language-shell">git ls-files --eol
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ol>
&lt;li>
&lt;p>Параметр &lt;code>autocrlf&lt;/code>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Настройка &lt;code>core.autocrlf&lt;/code> предназначена для того, чтобы в главном репозитории все переводы строк текстовых файлах были одинаковы.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Настройка &lt;code>core.autocrlf&lt;/code> с параметрами &lt;code>true&lt;/code> и &lt;code>input&lt;/code> делает все переводы строк текстовых файлов в главном репозитории одинаковыми.&lt;/p>
&lt;ul>
&lt;li>&lt;code>core.autocrlf true&lt;/code>: конвертация &lt;code>CRLF-&amp;gt;LF&lt;/code> при коммите и обратно &lt;code>LF-&amp;gt;CRLF&lt;/code> при выгрузке кода из репозитория на файловую систему (обычно используется в Windows).&lt;/li>
&lt;li>&lt;code>core.autocrlf input&lt;/code>: конвертация &lt;code>CRLF-&amp;gt;LF&lt;/code> только при коммитах (используются в MacOS/Linux).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Варианты конвертации&lt;/p>
&lt;div class="table-caption">
&lt;span class="table-number">&amp;#1058;&amp;#1072;&amp;#1073;&amp;#1083;&amp;#1080;&amp;#1094;&amp;#1072; 1:&lt;/span>
Варианты конвертации для разных значений параметра core.autocrlf
&lt;/div>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>core.autocrlf&lt;/th>
&lt;th>false&lt;/th>
&lt;th>input&lt;/th>
&lt;th>true&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>git commit&lt;/td>
&lt;td>LF -&amp;gt; LF&lt;/td>
&lt;td>LF -&amp;gt; LF&lt;/td>
&lt;td>LF -&amp;gt; CRLF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>CRLF -&amp;gt; CRLF&lt;/td>
&lt;td>CRLF -&amp;gt; LF&lt;/td>
&lt;td>CRLF -&amp;gt; CRLF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>git checkout&lt;/td>
&lt;td>LF -&amp;gt; LF&lt;/td>
&lt;td>LF -&amp;gt; LF&lt;/td>
&lt;td>LF -&amp;gt; CRLF&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;td>CR -&amp;gt; CR&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>CRLF -&amp;gt; CRLF&lt;/td>
&lt;td>CRLF -&amp;gt; CRLF&lt;/td>
&lt;td>CRLF -&amp;gt; CRLF&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>Установка параметра:&lt;/p>
&lt;ul>
&lt;li>Для Windows
&lt;pre>&lt;code class="language-shell">git config --global core.autocrlf true
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Для Linux
&lt;pre>&lt;code class="language-shell">git config --global core.autocrlf input
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;!--list-separator-->
&lt;ol start="2">
&lt;li>
&lt;p>Параметр &lt;code>safecrlf&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Настройка &lt;code>core.safecrlf&lt;/code> предназначена для проверки, является ли окончаний строк обратимым для текущей настройки &lt;code>core.autocrlf&lt;/code>.
&lt;ul>
&lt;li>&lt;code>core.safecrlf true&lt;/code>: запрещается необратимое преобразование &lt;code>lf&amp;lt;-&amp;gt;crlf&lt;/code>. Полезно, когда существуют бинарные файлы, похожие на текстовые файлы.&lt;/li>
&lt;li>&lt;code>core.safecrlf warn&lt;/code>: печать предупреждения, но коммиты с необратимым переходом принимаются.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Установка параметра:
&lt;pre>&lt;code class="language-shell">git config --global core.safecrlf warn
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="практический-сценарий-использования-git">&lt;span class="section-num">4&lt;/span> Практический сценарий использования git&lt;/h2>
&lt;h3 id="создание-репозитория-git">&lt;span class="section-num">4.1&lt;/span> Создание репозитория git&lt;/h3>
&lt;h4 id="подготовка-каталога">&lt;span class="section-num">4.1.1&lt;/span> Подготовка каталога&lt;/h4>
&lt;ul>
&lt;li>Рабочий каталог будем обозначать как &lt;code>workdir&lt;/code>. Вначале нужно перейти в этот каталог:
&lt;pre>&lt;code class="language-shell">cd workdir
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Создаём заготовку для файла &lt;code>README.md&lt;/code>:
&lt;pre>&lt;code class="language-shell">echo &amp;quot;# test-repo&amp;quot; &amp;gt;&amp;gt; README.md
git add README.md
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Добавим шаблон игнорируемых файлов. Просмотрим список имеющихся шаблонов:
&lt;pre>&lt;code class="language-shell">curl -L -s https://www.gitignore.io/api/list
&lt;/code>&lt;/pre>
Затем скачаем шаблон, например, для C и C++:
&lt;pre>&lt;code class="language-shell">curl -L -s https://www.gitignore.io/api/c &amp;gt;&amp;gt; .gitignore
curl -L -s https://www.gitignore.io/api/c++ &amp;gt;&amp;gt; .gitignore
&lt;/code>&lt;/pre>
Можно это же сделать через web-интерфейс на сайте &lt;a href="https://www.gitignore.io/" target="_blank" rel="noopener">https://www.gitignore.io/&lt;/a>.&lt;/li>
&lt;li>Добавим файл лицензии. В данном случае мы выбираем лицензию &lt;code>CC-BY-4.0&lt;/code> (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/02/22/scientific-work-choosing-license/">Выбор лицензии для научной работы&lt;/a>):
&lt;pre>&lt;code class="language-shell">wget https://creativecommons.org/licenses/by/4.0/legalcode.txt -O LICENSE
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Инициализируем системы git:
&lt;pre>&lt;code class="language-shell">git init
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h4 id="подключение-репозитория-к-github">&lt;span class="section-num">4.1.2&lt;/span> Подключение репозитория к github&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Создайте репозиторий на GitHub. Для примера назовём его &lt;code>test-repo&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Делаем первый коммит и выкладываем на github:&lt;/p>
&lt;pre>&lt;code class="language-shell">git commit -m &amp;quot;first commit&amp;quot;
git remote add origin git@github.com:&amp;lt;username&amp;gt;/test-repo.git
git push -u origin master
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h4 id="конфигурация-общепринятых-коммитов">&lt;span class="section-num">4.1.3&lt;/span> Конфигурация общепринятых коммитов&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Конфигурация для пакетов Node.js&lt;/p>
&lt;pre>&lt;code class="language-shell">yarn init
&lt;/code>&lt;/pre>
&lt;p>Необходимо заполнить несколько параметров пакета.&lt;/p>
&lt;ul>
&lt;li>Название пакета.&lt;/li>
&lt;li>Лицензия пакета. Список лицензий для npm: &lt;a href="https://spdx.org/licenses/" target="_blank" rel="noopener">https://spdx.org/licenses/&lt;/a>. Предлагается выбирать лицензию &lt;code>CC-BY-4.0&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Сконфигурим формат коммитов. Для этого добавим в файл &lt;code>package.json&lt;/code> команду для формирования коммитов:&lt;/p>
&lt;pre>&lt;code class="language-js">&amp;quot;config&amp;quot;: {
&amp;quot;commitizen&amp;quot;: {
&amp;quot;path&amp;quot;: &amp;quot;cz-conventional-changelog&amp;quot;
}
}
&lt;/code>&lt;/pre>
&lt;p>Таким образом, файл &lt;code>package.json&lt;/code> приобретает вид:&lt;/p>
&lt;pre>&lt;code class="language-js">{
&amp;quot;name&amp;quot;: &amp;quot;test-repo&amp;quot;,
&amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,
&amp;quot;description&amp;quot;: &amp;quot;Git repo for educational purposes&amp;quot;,
&amp;quot;main&amp;quot;: &amp;quot;index.js&amp;quot;,
&amp;quot;repository&amp;quot;: &amp;quot;git@github.com:username/test-repo.git&amp;quot;,
&amp;quot;author&amp;quot;: &amp;quot;Name Surname &amp;lt;username@gmail.com&amp;gt;&amp;quot;,
&amp;quot;license&amp;quot;: &amp;quot;CC-BY-4.0&amp;quot;,
&amp;quot;config&amp;quot;: {
&amp;quot;commitizen&amp;quot;: {
&amp;quot;path&amp;quot;: &amp;quot;cz-conventional-changelog&amp;quot;
}
}
}
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Добавим новые файлы:&lt;/p>
&lt;pre>&lt;code class="language-shell">git add .
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Выполним коммит:&lt;/p>
&lt;pre>&lt;code class="language-shell">git cz
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Отправим на github:&lt;/p>
&lt;pre>&lt;code class="language-shell">git push
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h4 id="конфигурация-git-flow">&lt;span class="section-num">4.1.4&lt;/span> Конфигурация git-flow&lt;/h4>
&lt;ul>
&lt;li>Инициализируем git-flow
&lt;pre>&lt;code class="language-shell">git flow init
&lt;/code>&lt;/pre>
Префикс для ярлыков установим в &lt;code>v&lt;/code>.&lt;/li>
&lt;li>Проверьте, что Вы на ветке &lt;code>develop&lt;/code>:
&lt;pre>&lt;code class="language-shell">git branch
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Установите внешнюю ветку как вышестоящую для этой ветки:
&lt;pre>&lt;code class="language-shell">git branch --set-upstream-to=origin/develop develop
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Создадим релиз с версией 1.0.0
&lt;pre>&lt;code class="language-shell">git flow release start 1.0.0
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Создадим журнал изменений
&lt;pre>&lt;code class="language-shell">standard-changelog --first-release
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Добавим журнал изменений в индекс
&lt;pre>&lt;code class="language-shell">git add CHANGELOG.md
git commit -am 'chore(site): add changelog'
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Зальём релизную ветку в основную ветку
&lt;pre>&lt;code class="language-shell">git flow release finish 1.0.0
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Отправим данные на github
&lt;pre>&lt;code class="language-shell">git push --all
git push --tags
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Создадим релиз на github. Для этого будем использовать утилиты работы с github (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/08/04/github-command-line-utilities/">github: утилиты командной строки&lt;/a>):
&lt;pre>&lt;code class="language-shell">gh release create v1.0.0 -F CHANGELOG.md
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="работа-с-репозиторием-git">&lt;span class="section-num">4.2&lt;/span> Работа с репозиторием git&lt;/h3>
&lt;h4 id="разработка-новой-функциональности">&lt;span class="section-num">4.2.1&lt;/span> Разработка новой функциональности&lt;/h4>
&lt;ul>
&lt;li>Создадим ветку для новой функциональности:
&lt;pre>&lt;code class="language-shell">git flow feature start feature_branch
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Далее, продолжаем работу c git как обычно.&lt;/li>
&lt;li>По окончании разработки новой функциональности следующим шагом следует объединить ветку &lt;code>feature_branch&lt;/code> c &lt;code>develop&lt;/code>:
&lt;pre>&lt;code class="language-shell">git flow feature finish feature_branch
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h4 id="создание-релиза-git-flow">&lt;span class="section-num">4.2.2&lt;/span> Создание релиза git-flow&lt;/h4>
&lt;ul>
&lt;li>Создадим релиз с версией &lt;code>1.2.3&lt;/code>:
&lt;pre>&lt;code class="language-shell">git flow release start 1.2.3
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Обновите номер версии в файле &lt;code>package.json&lt;/code>. Установите её в &lt;code>1.2.3&lt;/code>.&lt;/li>
&lt;li>Создадим журнал изменений
&lt;pre>&lt;code class="language-shell">standard-changelog
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Добавим журнал изменений в индекс
&lt;pre>&lt;code class="language-shell">git add CHANGELOG.md
git commit -am 'chore(site): update changelog'
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Зальём релизную ветку в основную ветку
&lt;pre>&lt;code class="language-shell">git flow release finish 1.2.3
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Отправим данные на github
&lt;pre>&lt;code class="language-shell">git push --all
git push --tags
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Создадим релиз на github с комментарием из журнала изменений:
&lt;pre>&lt;code class="language-shell">gh release create v1.2.3 -F CHANGELOG.md
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul></description></item><item><title>Семантическое версионирование. Conventional Changelog</title><link>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</link><pubDate>Sat, 16 Jan 2021 17:41:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/</guid><description>&lt;p>Пакет &lt;em>Conventional Changelog&lt;/em> представляет собой набор утилит. Их можно использовать как вместе, так и по отдельности. Также можно задавать свой рабочий процесс.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#репозитории">Репозитории&lt;/a>&lt;/li>
&lt;li>&lt;a href="#список-утилит">Список утилит&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#основные-утилиты-проекта">Основные утилиты проекта&lt;/a>&lt;/li>
&lt;li>&lt;a href="#дополнительные-утилиты">Дополнительные утилиты&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#настройка-утилит">Настройка утилит&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#conventional-commits-detector">conventional-commits-detector&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#conventional-recommended-bump">conventional-recommended-bump&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#standard-changelog">standard-changelog&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#conventional-changelog-cli">conventional-changelog-cli&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#commitizen">commitizen&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#conventional-github-releaser">conventional-github-releaser&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#установка">Установка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#использование">Использование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#примерный-рабочий-процесс">Примерный рабочий процесс&lt;/a>&lt;/li>
&lt;li>&lt;a href="#backlinks">Backlinks&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="репозитории">Репозитории&lt;/h2>
&lt;ul>
&lt;li>Основной монорепозиторий: &lt;a href="https://github.com/conventional-changelog/conventional-changelog" target="_blank" rel="noopener">https://github.com/conventional-changelog/conventional-changelog&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="список-утилит">Список утилит&lt;/h2>
&lt;h3 id="основные-утилиты-проекта">Основные утилиты проекта&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli" target="_blank" rel="noopener">conventional-changelog-cli&lt;/a> &amp;mdash; утилита командной строки.&lt;/li>
&lt;li>&lt;a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/standard-changelog" target="_blank" rel="noopener">standard-changelog&lt;/a> &amp;mdash; утилита командной строки для формата коммитов &lt;em>angular&lt;/em>.&lt;/li>
&lt;li>conventional-github-releaser &amp;mdash; создание нового релиза на GitHub из метаданных git.&lt;/li>
&lt;li>&lt;a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-recommended-bump" target="_blank" rel="noopener">conventional-recommended-bump&lt;/a> &amp;mdash; узнать на основе коммитов, какая версия рекомендуется.&lt;/li>
&lt;li>&lt;a href="https://github.com/conventional-changelog/conventional-commits-detector" target="_blank" rel="noopener">conventional-commits-detector&lt;/a> &amp;mdash; определить, какое соглашение о коммитах использует репозиторий.&lt;/li>
&lt;li>&lt;a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noopener">commitizen&lt;/a> &amp;mdash; утилита, задающая интерфейс к написанию коммитов.&lt;/li>
&lt;li>commitlint &amp;mdash; проверка правильности текста коммита.&lt;/li>
&lt;/ul>
&lt;h3 id="дополнительные-утилиты">Дополнительные утилиты&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://github.com/leoforfree/cz-customizable" target="_blank" rel="noopener">cz-customizable&lt;/a> &amp;mdash; плагин для &lt;code>commitizen&lt;/code> для конфигурации формы ввода сообщений.&lt;/li>
&lt;li>&lt;a href="https://github.com/uglow/cz-customizable-ghooks" target="_blank" rel="noopener">cz-customizable-ghooks&lt;/a> &amp;mdash; интеграция &lt;code>cz-customizable&lt;/code> с &lt;code>ghooks&lt;/code> или &lt;code>husky&lt;/code>, чтобы использовать единую конфигурацию для генерации и проверки сообщений коммитов .&lt;/li>
&lt;/ul>
&lt;h2 id="настройка-утилит">Настройка утилит&lt;/h2>
&lt;h3 id="conventional-commits-detector">conventional-commits-detector&lt;/h3>
&lt;p>Определить, какое соглашение о коммитах используется в репозитории.&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] conventional-commits-detector
&lt;/code>&lt;/pre>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;pre>&lt;code class="language-shell">npx conventional-commits-detector
&lt;/code>&lt;/pre>
&lt;p>В результате получим возможный тип коммитов.&lt;/p>
&lt;h3 id="conventional-recommended-bump">conventional-recommended-bump&lt;/h3>
&lt;p>узнать на основе коммитов, какая версия рекомендуется.&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] conventional-recommended-bump
&lt;/code>&lt;/pre>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;pre>&lt;code class="language-shell">npx conventional-recommended-bump -p angular
&lt;/code>&lt;/pre>
&lt;p>Здесь &lt;code>angular&lt;/code> &amp;mdash; название пресета.&lt;/p>
&lt;p>В результате получим уровень, на который изменяется версия.&lt;/p>
&lt;h3 id="standard-changelog">standard-changelog&lt;/h3>
&lt;p>Генерация журнала изменений с использованием соглашений о коммитах &lt;em>angular&lt;/em>.&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] standard-changelog
&lt;/code>&lt;/pre>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;p>Параметры запуска можно посмотреть следующим образом:&lt;/p>
&lt;pre>&lt;code class="language-shell">npx standard-changelog --help
&lt;/code>&lt;/pre>
&lt;p>Генерация файла журнала выполняется следующим образом:&lt;/p>
&lt;pre>&lt;code class="language-shell">npx standard-changelog
&lt;/code>&lt;/pre>
&lt;p>или&lt;/p>
&lt;pre>&lt;code class="language-shell">npx standard-changelog -i CHANGELOG.md -s
&lt;/code>&lt;/pre>
&lt;h3 id="conventional-changelog-cli">conventional-changelog-cli&lt;/h3>
&lt;p>Создаёт журнал изменений из метаданных git (если соглашение о коммитах отлично от &lt;em>angular&lt;/em>).&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] conventional-changelog-cli
&lt;/code>&lt;/pre>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;pre>&lt;code class="language-shell">cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s
&lt;/code>&lt;/pre>
&lt;p>Если инструмент используется впервые и нужно учесть все предыдущие журналы изменений, можно выполнить команду:&lt;/p>
&lt;pre>&lt;code class="language-shell">cd my-project
npx conventional-changelog -p angular -i CHANGELOG.md -s -r 0
&lt;/code>&lt;/pre>
&lt;h3 id="commitizen">commitizen&lt;/h3>
&lt;p>Утилита, реализующая интерактивный процесс для генерации коммита.&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] commitizen
&lt;/code>&lt;/pre>
&lt;p>При этом устанавливается скрипт &lt;code>git-cz&lt;/code>, который мы и будем использовать для коммитов.&lt;/p>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Сконфигурим формат коммитов. Для этого добавим в файл &lt;code>package.json&lt;/code> команду для формирования коммитов:&lt;/p>
&lt;pre>&lt;code class="language-js">&amp;quot;config&amp;quot;: {
&amp;quot;commitizen&amp;quot;: {
&amp;quot;path&amp;quot;: &amp;quot;cz-conventional-changelog&amp;quot;
}
}
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Выполнение коммитов:&lt;/p>
&lt;pre>&lt;code class="language-shell">git cz
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="conventional-github-releaser">conventional-github-releaser&lt;/h3>
&lt;p>Утилита, создающая новый выпуск на GitHub на основе метаданных git.&lt;/p>
&lt;h4 id="установка">Установка&lt;/h4>
&lt;pre>&lt;code class="language-shell">yarn [global] add [--dev] conventional-github-releaser
&lt;/code>&lt;/pre>
&lt;h4 id="использование">Использование&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Создайте новый токен для для доступа к github&lt;/p>
&lt;ul>
&lt;li>Токен создаётся по ссылке &lt;a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener">https://github.com/settings/tokens/new&lt;/a>.&lt;/li>
&lt;li>Права для токена: &lt;code>public_repo&lt;/code> или &lt;code>repo&lt;/code>.&lt;/li>
&lt;li>Обязательно сразу скопируйте свой новый токен личного доступа. Нет возможности получить доступ к его значению ещё раз.&lt;/li>
&lt;li>Установите созданный токен как значение переменной окружения &lt;code>CONVENTIONAL_GITHUB_RELEASER_TOKEN&lt;/code>.&lt;/li>
&lt;li>Также можно указать свой токен аутентификации с помощью флага &lt;code>-t&lt;/code> или &lt;code>--token&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Создание релиза с определённым пресетом:&lt;/p>
&lt;pre>&lt;code class="language-shell">conventional-github-releaser -p angular
&lt;/code>&lt;/pre>
&lt;p>Здесь &lt;code>angular&lt;/code> &amp;mdash; один из пресетов : &lt;code>angular&lt;/code>, &lt;code>atom&lt;/code>, &lt;code>codemirror&lt;/code>, &lt;code>ember&lt;/code>, &lt;code>eslint&lt;/code>, &lt;code>express&lt;/code>, &lt;code>jquery&lt;/code>, &lt;code>jscs&lt;/code>, &lt;code>jshint&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="примерный-рабочий-процесс">Примерный рабочий процесс&lt;/h2>
&lt;ul>
&lt;li>Внести изменения.&lt;/li>
&lt;li>Зафиксировать эти изменения.&lt;/li>
&lt;li>Проверить состояние Travis CI.&lt;/li>
&lt;li>Изменить версию в &lt;code>package.json&lt;/code>.&lt;/li>
&lt;li>Закоммитить файлы: &lt;code>package.json&lt;/code>.&lt;/li>
&lt;li>Задать метку (tag).&lt;/li>
&lt;li>Выложить на удалённый репозиторий (&lt;code>push&lt;/code>).&lt;/li>
&lt;li>Сделать релиз (&lt;code>conventional-github-releaser&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>Причина, по которой вы должны зафиксировать изменения и создать метку после
выполнения &lt;code>standard-changelog&lt;/code> заключается в том, что &lt;code>CHANGELOG.md&lt;/code> должен быть
включён в новую версию.&lt;/p>
&lt;h2 id="backlinks">Backlinks&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Семантическое версионирование. Semantic-release</title><link>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</link><pubDate>Fri, 15 Jan 2021 17:33:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/</guid><description>&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#backlinks">Backlinks&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#семантическое-версионирование">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;p>&lt;a href="https://github.com/semantic-release/semantic-release" target="_blank" rel="noopener">Fully automated version management and package publishing&lt;/a>&lt;/p>
&lt;h2 id="backlinks">Backlinks&lt;/h2>
&lt;h3 id="семантическое-версионирование">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/h3>
&lt;p>Пакет &lt;a href="https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/">Semantic-release&lt;/a> автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p></description></item><item><title>Tiller M. M. - Modelica by Example</title><link>https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/</link><pubDate>Sun, 10 Jan 2021 15:14:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/</guid><description>&lt;p>Tiller M. M. Modelica by Example. &amp;mdash; URL: &lt;a href="http://libgen.li/item/index.php?md5=2795CB685C70592E3814F1E18BC62C47" target="_blank" rel="noopener">http://libgen.li/item/index.php?md5=2795CB685C70592E3814F1E18BC62C47&lt;/a>, &lt;a href="https://mbe.modelica.university/" target="_blank" rel="noopener">https://mbe.modelica.university/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Книга известного специалиста по языку Modelica.&lt;/li>
&lt;li>Книга описывает сам язык Modelica, а не применение его для моделирования.&lt;/li>
&lt;li>Представлен ряд нетривиальных особенностей языка Modelica.&lt;/li>
&lt;li>На сайте &lt;a href="https://mbe.modelica.university/" target="_blank" rel="noopener">https://mbe.modelica.university/&lt;/a> выложена html-версия книги.&lt;/li>
&lt;li>Если Вам необходима pdf-версия, вы можете купить её на этом же сайте.&lt;/li>
&lt;li>Книга не обновлялась с 2019 года.&lt;/li>
&lt;/ul>
&lt;h2 id="backlinks">Backlinks&lt;/h2>
&lt;h3 id="прочитанные-книги-dot-2021">&lt;a href="https://yamadharma.github.io/ru/post/2021/01/06/books-2021/">Прочитанные книги. 2021&lt;/a>&lt;/h3>
&lt;p>&lt;span class="timestamp-wrapper">&lt;span class="timestamp">[2021-01-09 Сб 21:39] &lt;/span>&lt;/span> &lt;a href="https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/">Tiller M. M. - Modelica by Example&lt;/a>&lt;/p>
&lt;h3 id="книги-dot-программирование">&lt;a href="https://yamadharma.github.io/ru/post/2021/01/10/books-programming/">Книги. Программирование&lt;/a>&lt;/h3>
&lt;p>&lt;span class="timestamp-wrapper">&lt;span class="timestamp">[2021-01-09 Сб 21:39] &lt;/span>&lt;/span> &lt;a href="https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/">Tiller M. M. - Modelica by Example&lt;/a>&lt;/p></description></item><item><title>Книги. Программирование</title><link>https://yamadharma.github.io/ru/post/2021/01/10/books-programming/</link><pubDate>Sun, 10 Jan 2021 15:01:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/10/books-programming/</guid><description>&lt;p>Список книг по программированию.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#book-list">Список книг&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#языки-программирования">Языки программирования&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#modelica">Modelica&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="book-list">Список книг&lt;/h2>
&lt;h3 id="языки-программирования">Языки программирования&lt;/h3>
&lt;h4 id="modelica">Modelica&lt;/h4>
&lt;ul>
&lt;li>&lt;span class="timestamp-wrapper">&lt;span class="timestamp">[2021-01-09 Сб 21:39] &lt;/span>&lt;/span> &lt;a href="https://yamadharma.github.io/ru/post/2021/01/10/tiller-modelica-by-example/">Tiller M. M. - Modelica by Example&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>VSCode. Julia</title><link>https://yamadharma.github.io/ru/post/2021/01/05/vscode-julia/</link><pubDate>Tue, 05 Jan 2021 19:48:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/05/vscode-julia/</guid><description>&lt;p>Работа с языком программирования &lt;em>Julia&lt;/em> из редактора VSCode.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#расширения-vscode">&lt;span class="section-num">1&lt;/span> Расширения VSCode&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#julia-for-vscode">&lt;span class="section-num">1.1&lt;/span> Julia for VSCode&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#сочетания-клавиш-для-repl">&lt;span class="section-num">1.1.1&lt;/span> Сочетания клавиш для REPL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="расширения-vscode">&lt;span class="section-num">1&lt;/span> Расширения VSCode&lt;/h2>
&lt;h3 id="julia-for-vscode">&lt;span class="section-num">1.1&lt;/span> Julia for VSCode&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.julia-vscode.org/" target="_blank" rel="noopener">https://www.julia-vscode.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/julia-vscode/julia-vscode" target="_blank" rel="noopener">https://github.com/julia-vscode/julia-vscode&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="сочетания-клавиш-для-repl">&lt;span class="section-num">1.1.1&lt;/span> Сочетания клавиш для REPL&lt;/h4>
&lt;!--list-separator-->
&lt;ol>
&lt;li>
&lt;p>Исполнить код &lt;em>Julia: Execute Code&lt;/em> (&lt;code>Ctrl+Enter&lt;/code>)&lt;/p>
&lt;p>Эта команда либо отправит текст, который в данный момент выбран в
активном редакторе, в Julia REPL, либо отправит всю строку, в которой
в данный момент находится курсор, когда текст не выделен. В последнем
случае он также переместит курсор на следующую строку кода.&lt;/p>
&lt;p>Эта команда работает как copy-paste: она буквально
копирует некоторый код из редактора в REPL, как если бы этот код был
набран в REPL.&lt;/p>
&lt;p>Операторы &lt;code>include&lt;/code> всегда будут пытаться
загрузить относительные пути относительно текущего рабочего каталога,
а не относительно файла, из которого они выполняются.&lt;/p>
&lt;p>Такие макросы,
как &lt;code>@__DIR__&lt;/code> и &lt;code>@__FILE__&lt;/code>, не работают должным образом. В этом случае следует
использовать команду &lt;em>Julia: Execute Code Block&lt;/em>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;!--list-separator-->
&lt;ol start="2">
&lt;li>
&lt;p>Исполнить блок кода &lt;em>Julia: Execute Code Block&lt;/em> (&lt;code>Alt+Enter&lt;/code>)&lt;/p>
&lt;p>Всякий раз, когда в текущем активном редакторе выбран какой-то код
Julia, эта команда выполнит выбранный код. Если текст не выбран,
команда определит всю языковую конструкции верхнего уровня, в
которой находится курсор (кроме модулей), и выполнит этот блок
кода.&lt;/p>
&lt;p>При выполнении связывается информацию о местоположении с выполняемым кодом,
&lt;code>include&lt;/code> будет правильно работать с относительными путями, а макросы,
такие как &lt;code>@__DIR__&lt;/code> и &lt;code>@__FILE__&lt;/code>, будут работать должным образом.&lt;/p>
&lt;p>Следует использовать как команду по умолчанию для
запуска кода Julia в REPL.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;!--list-separator-->
&lt;ol start="3">
&lt;li>
&lt;p>Исполнить ячейку кода &lt;em>Julia: Execute Code Cell&lt;/em> (&lt;code>Shift+Enter&lt;/code>)&lt;/p>
&lt;p>Расширение обеспечивает поддержку разметки ячеек кода в стандартных
файлах Julia с помощью специально отформатированного комментария:&lt;/p>
&lt;pre>&lt;code class="language-julia">##
&lt;/code>&lt;/pre>
&lt;p>Эта команда определит, в какой ячейке кода в данный момент
находится курсор в активном редакторе, а затем выполнит код в этой
ячейке. Если в текущем файле нет ячеек кода, он выполнит весь
файл. Эта команда использует те же методы выполнения кода, что и
команда &lt;em>Julia: Execute Code Block&lt;/em>.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;!--list-separator-->
&lt;ol start="4">
&lt;li>
&lt;p>Исполнить файл &lt;em>Julia: Execute File&lt;/em>&lt;/p>
&lt;p>Эта команда запускает все содержимое текущего активного файла в Julia
REPL. Он использует те же методы выполнения кода, что и команда
&lt;em>Julia: Execute Code Block&lt;/em>.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Диаграммы. Mermaid</title><link>https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/</link><pubDate>Sun, 03 Jan 2021 14:19:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/03/diagrams-mermaid/</guid><description>&lt;p>Язык рисования диаграмм Mermaid.
Mermaid реализует концепцию &lt;em>Diagram as Code&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#ресурсы">&lt;span class="section-num">1.1&lt;/span> Ресурсы&lt;/a>&lt;/li>
&lt;li>&lt;a href="#интеграция">&lt;span class="section-num">1.2&lt;/span> Интеграция&lt;/a>&lt;/li>
&lt;li>&lt;a href="#внедрение-mermaid-в-markdown">&lt;span class="section-num">1.3&lt;/span> Внедрение &lt;em>Mermaid&lt;/em> в &lt;em>Markdown&lt;/em>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#поддерживаемые-типы-диаграмм">&lt;span class="section-num">1.4&lt;/span> Поддерживаемые типы диаграмм&lt;/a>&lt;/li>
&lt;li>&lt;a href="#необходимое-программное-обеспечение">&lt;span class="section-num">1.5&lt;/span> Необходимое программное обеспечение&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">2&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#типы-диаграмм">&lt;span class="section-num">3&lt;/span> Типы диаграмм&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#блок-схемы--flowchart">&lt;span class="section-num">3.1&lt;/span> Блок-схемы (Flowchart)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.1.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.1.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#диаграммы-состояния--sequence-diagram">&lt;span class="section-num">3.2&lt;/span> Диаграммы состояния (Sequence diagram)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.2.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.2.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#диаграммы-ганта--gantt-diagram">&lt;span class="section-num">3.3&lt;/span> Диаграммы Ганта (Gantt diagram)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.3.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.3.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#uml-диаграммы-классов--class-diagram">&lt;span class="section-num">3.4&lt;/span> UML-диаграммы классов (Class diagram)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.4.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.4.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#графы-git--git-graph">&lt;span class="section-num">3.5&lt;/span> Графы git (Git graph)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.5.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.5.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#er-диаграммы--entity-relationship-diagram">&lt;span class="section-num">3.6&lt;/span> ER-диаграммы (Entity Relationship Diagram)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.6.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.6.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#диаграммы-пользовательского-пути--user-journey-diagram">&lt;span class="section-num">3.7&lt;/span> Диаграммы пользовательского пути (User Journey Diagram)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.7.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.7.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#диаграммы-последовательности--sequence-diagrams">&lt;span class="section-num">3.8&lt;/span> Диаграммы последовательности (Sequence diagrams)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.8.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.8.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#круговые-диаграммы--pie-chart">&lt;span class="section-num">3.9&lt;/span> Круговые диаграммы (Pie chart)&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#синтаксис">&lt;span class="section-num">3.9.1&lt;/span> Синтаксис&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3.9.2&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="общая-информация">&lt;span class="section-num">1&lt;/span> Общая информация&lt;/h2>
&lt;ul>
&lt;li>Mermaid &amp;mdash; язык программирования для рисования диаграмм и библиотека для визуализации.&lt;/li>
&lt;li>Инструментарий написан на javascript.&lt;/li>
&lt;/ul>
&lt;h3 id="ресурсы">&lt;span class="section-num">1.1&lt;/span> Ресурсы&lt;/h3>
&lt;ul>
&lt;li>Страница Mermaid: &lt;a href="https://mermaid-js.github.io/" target="_blank" rel="noopener">https://mermaid-js.github.io/&lt;/a>&lt;/li>
&lt;li>Страница на github: &lt;a href="https://github.com/mermaid-js/mermaid" target="_blank" rel="noopener">https://github.com/mermaid-js/mermaid&lt;/a>&lt;/li>
&lt;li>Утилита командной строки: &lt;a href="https://github.com/mermaid-js/mermaid-cli" target="_blank" rel="noopener">https://github.com/mermaid-js/mermaid-cli&lt;/a>&lt;/li>
&lt;li>HTTP сервер: &lt;a href="https://github.com/TomWright/mermaid-server" target="_blank" rel="noopener">https://github.com/TomWright/mermaid-server&lt;/a>&lt;/li>
&lt;li>Онлайн редактор: &lt;a href="https://mermaid-js.github.io/mermaid-live-editor/" target="_blank" rel="noopener">https://mermaid-js.github.io/mermaid-live-editor/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="интеграция">&lt;span class="section-num">1.2&lt;/span> Интеграция&lt;/h3>
&lt;ul>
&lt;li>Интегрирован в системы рендеринга языка Markdown
&lt;ul>
&lt;li>Pandoc: &lt;a href="https://pandoc.org/" target="_blank" rel="noopener">https://pandoc.org/&lt;/a>&lt;/li>
&lt;li>Hugo: &lt;a href="https://gohugo.io/" target="_blank" rel="noopener">https://gohugo.io/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Хостинги кода (в файлах &lt;code>README.md&lt;/code>)
&lt;ul>
&lt;li>GitHub: &lt;a href="https://github.com/" target="_blank" rel="noopener">https://github.com/&lt;/a>&lt;/li>
&lt;li>GitLab: &lt;a href="https://gitlab.com/" target="_blank" rel="noopener">https://gitlab.com/&lt;/a>&lt;/li>
&lt;li>Gitea: &lt;a href="https://gitea.io/" target="_blank" rel="noopener">https://gitea.io/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Приложения работы с текстом (markdown)
&lt;ul>
&lt;li>Joplin: &lt;a href="https://joplinapp.org/" target="_blank" rel="noopener">https://joplinapp.org/&lt;/a>&lt;/li>
&lt;li>Notion: &lt;a href="https://www.notion.so/" target="_blank" rel="noopener">https://www.notion.so/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="внедрение-mermaid-в-markdown">&lt;span class="section-num">1.3&lt;/span> Внедрение &lt;em>Mermaid&lt;/em> в &lt;em>Markdown&lt;/em>&lt;/h3>
&lt;ul>
&lt;li>Для блока кода, отмеченного как &lt;code>mermaid&lt;/code>:
&lt;ul>
&lt;li>система создаёт новый фрейм &lt;code>iframe&lt;/code>,&lt;/li>
&lt;li>необработанный код из блока передаётся его в &lt;em>Mermaid.js&lt;/em>,&lt;/li>
&lt;li>код преобразуется в диаграмму.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Пример входного кода
&lt;pre>&lt;code class="language-markdown">```mermaid
graph TD;
A--&amp;gt;B;
A--&amp;gt;C;
B--&amp;gt;D;
C--&amp;gt;D;
```
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>Результирующее изображение
&lt;pre>&lt;code class="language-mermaid">graph TD;
A--&amp;gt;B;
A--&amp;gt;C;
B--&amp;gt;D;
C--&amp;gt;D;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="поддерживаемые-типы-диаграмм">&lt;span class="section-num">1.4&lt;/span> Поддерживаемые типы диаграмм&lt;/h3>
&lt;ul>
&lt;li>Блок-схемы (Flowchart)&lt;/li>
&lt;li>Диаграммы состояния (Sequence diagram)&lt;/li>
&lt;li>Диаграммы Ганта (Gantt diagram)&lt;/li>
&lt;li>UML-диаграммы классов (Class diagram)&lt;/li>
&lt;li>Графы git (Git graph)&lt;/li>
&lt;li>ER-диаграммы (Entity Relationship Diagram)&lt;/li>
&lt;li>Диаграммы пользовательского пути (User Journey Diagram)&lt;/li>
&lt;li>Диаграммы последовательности (Sequence diagrams)&lt;/li>
&lt;li>Круговые диаграммы (Pie chart)&lt;/li>
&lt;/ul>
&lt;h3 id="необходимое-программное-обеспечение">&lt;span class="section-num">1.5&lt;/span> Необходимое программное обеспечение&lt;/h3>
&lt;ul>
&lt;li>Необходимо установить программу &lt;code>mmdc&lt;/code> из проекта &lt;a href="https://github.com/mermaid-js/mermaid-cli" target="_blank" rel="noopener">https://github.com/mermaid-js/mermaid-cli&lt;/a>.
&lt;pre>&lt;code class="language-shell">yarn global add @mermaid-js/mermaid-cli
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="синтаксис">&lt;span class="section-num">2&lt;/span> Синтаксис&lt;/h2>
&lt;ul>
&lt;li>&lt;code>%%&lt;/code>: комментарий в коде.&lt;/li>
&lt;/ul>
&lt;h2 id="типы-диаграмм">&lt;span class="section-num">3&lt;/span> Типы диаграмм&lt;/h2>
&lt;h3 id="блок-схемы--flowchart">&lt;span class="section-num">3.1&lt;/span> Блок-схемы (Flowchart)&lt;/h3>
&lt;ul>
&lt;li>Один из вариантов представления блок-схем.&lt;/li>
&lt;/ul>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.1.1&lt;/span> Синтаксис&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Ключевое слово: &lt;code>flowchart&lt;/code> и аббревиатуры для указания направления.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>subgraph &amp;lt;имя&amp;gt;&lt;/code>: задаёт поддиаграммы.&lt;/p>
&lt;ul>
&lt;li>&lt;code>end&lt;/code>: завершает описание поддиаграммы.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Основная часть диаграммы &amp;mdash; это узлы.&lt;/p>
&lt;ul>
&lt;li>Текст на диаграмме узла берётся из названия.&lt;/li>
&lt;li>Альтернативно можно указать отображаемый текст в квадратных скобках.&lt;/li>
&lt;li>Форма узлов задаётся скобочными символами вокруг текста.&lt;/li>
&lt;li>Для экранирования используют кавычки.
&lt;ul>
&lt;li>Всё содержимое в кавычках считается текстом.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>click&lt;/code>: задаёт ссылку для узла.&lt;/p>
&lt;pre>&lt;code class="language-markdown">click &amp;lt;узел&amp;gt; &amp;quot;&amp;lt;ссылка&amp;gt;&amp;quot; &amp;lt;_blank&amp;gt;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Ссылка заключается в кавычки.&lt;/li>
&lt;li>&lt;code>_blank&lt;/code>: указывает открыть ссылку в новой вкладке.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Направление диаграммы:&lt;/p>
&lt;ul>
&lt;li>&lt;code>TB&lt;/code>: сверху вниз (top to bottom);&lt;/li>
&lt;li>&lt;code>TD&lt;/code>: сверху вниз (top-down);&lt;/li>
&lt;li>&lt;code>BT&lt;/code>: снизу вверх (bottom to top);&lt;/li>
&lt;li>&lt;code>RL&lt;/code>: справа налево (right to left);&lt;/li>
&lt;li>&lt;code>LR&lt;/code>: слева направо (left to right).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>style&lt;/code>: задаёт оформление диаграммы.&lt;/p>
&lt;pre>&lt;code class="language-markdown">style &amp;lt;узел&amp;gt; &amp;lt;style_tag:значение&amp;gt;,&amp;lt;style_tag:значение&amp;gt;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>Теги стилей:&lt;/p>
&lt;ul>
&lt;li>&lt;code>fill&lt;/code>: заливка;&lt;/li>
&lt;li>&lt;code>stroke&lt;/code>: цвет границы;&lt;/li>
&lt;li>&lt;code>stroke-width&lt;/code>: толщина границы;&lt;/li>
&lt;li>&lt;code>color&lt;/code>: цвет текста;&lt;/li>
&lt;li>&lt;code>stroke-dasharray&lt;/code>: пунктирная граница.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>classDef&lt;/code>: задаёт класс, содержащий набор стилей.&lt;/p>
&lt;pre>&lt;code class="language-markdown">classDef &amp;lt;имя_класса&amp;gt; &amp;lt;style_tag:значение&amp;gt;,&amp;lt;style_tag:значение&amp;gt;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>&lt;code>:::&lt;/code> указывает класс после имени узла.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="примеры">&lt;span class="section-num">3.1.2&lt;/span> Примеры&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Блок&lt;/p>
&lt;pre>&lt;code> flowchart TB
node
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
node
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Блок с текстом&lt;/p>
&lt;pre>&lt;code> flowchart TB
node[Текст]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
node[Текст]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Формы узлов&lt;/p>
&lt;pre>&lt;code> flowchart TB
node1[Форма 1]
node2(Форма 2)
node3([Форма 3])
node4[[Форма 4]]
node5[(Форма 5)]
node6((Форма 6))
node7&amp;gt;Форма 7]
node8{Форма 8}
node9{{Форма 9}}
node10[/Форма 10/]
node11[\Форма 11\]
node12[/Форма 12\]
node13[\Форма 13/]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
node1[Форма 1]
node2(Форма 2)
node3([Форма 3])
node4[[Форма 4]]
node5[(Форма 5)]
node6((Форма 6))
node7&amp;gt;Форма 7]
node8{Форма 8}
node9{{Форма 9}}
node10[/Форма 10/]
node11[\Форма 11\]
node12[/Форма 12\]
node13[\Форма 13/]
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Стрелки&lt;/p>
&lt;pre>&lt;code> flowchart TB
А --&amp;gt; B
C --- D
E -.-&amp;gt; F
G ==&amp;gt; H
I --o J
K --x L
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
А --&amp;gt; B
C --- D
E -.-&amp;gt; F
G ==&amp;gt; H
I --o J
K --x L
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Стрелки с текстом&lt;/p>
&lt;pre>&lt;code> flowchart TD
A -- Text --- B
C --- |Text| D
E --&amp;gt; |Text| F
G -- Text --&amp;gt; H
I -. Text .-&amp;gt; J
K == Text ==&amp;gt; L
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TD
A -- Text --- B
C --- |Text| D
E --&amp;gt; |Text| F
G -- Text --&amp;gt; H
I -. Text .-&amp;gt; J
K == Text ==&amp;gt; L
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Поддиаграммы&lt;/p>
&lt;pre>&lt;code> flowchart TB
c1 --&amp;gt; a2
subgraph one
a1 --&amp;gt; a2
end
subgraph two
b1 --&amp;gt; b2
end
subgraph three
c1 --&amp;gt; c2
end
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
c1 --&amp;gt; a2
subgraph one
a1 --&amp;gt; a2
end
subgraph two
b1 --&amp;gt; b2
end
subgraph three
c1 --&amp;gt; c2
end
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Ссылки&lt;/p>
&lt;pre>&lt;code> flowchart TB
A --&amp;gt; B
click A &amp;quot;http://www.github.com&amp;quot; _blank
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart TB
A --&amp;gt; B
click A &amp;quot;http://www.github.com&amp;quot; _blank
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Стили&lt;/p>
&lt;pre>&lt;code> flowchart LR
id1(Start)--&amp;gt;id2(Stop)
style id1 fill:#3f3,stroke:#333,stroke-width:4px
style id2 fill:#ff2400,stroke:#333,stroke-width:4px,color:#fff,stroke-dasharray: 12 5
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart LR
id1(Start)--&amp;gt;id2(Stop)
style id1 fill:#3f3,stroke:#333,stroke-width:4px
style id2 fill:#ff2400,stroke:#333,stroke-width:4px,color:#fff,stroke-dasharray: 12 5
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Классы стилей&lt;/p>
&lt;pre>&lt;code> flowchart LR
classDef class1 fill:#3f3,stroke:#333,stroke-width:4px
classDef class2 fill:#ff2400,stroke:#333,stroke-width:4px,color:#fff,stroke-dasharray: 12 5
A(Start):::class1 --&amp;gt; B(Stop):::class2
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">flowchart LR
classDef class1 fill:#3f3,stroke:#333,stroke-width:4px
classDef class2 fill:#ff2400,stroke:#333,stroke-width:4px,color:#fff,stroke-dasharray: 12 5
A(Start):::class1 --&amp;gt; B(Stop):::class2
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="диаграммы-состояния--sequence-diagram">&lt;span class="section-num">3.2&lt;/span> Диаграммы состояния (Sequence diagram)&lt;/h3>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.2.1&lt;/span> Синтаксис&lt;/h4>
&lt;h4 id="примеры">&lt;span class="section-num">3.2.2&lt;/span> Примеры&lt;/h4>
&lt;h3 id="диаграммы-ганта--gantt-diagram">&lt;span class="section-num">3.3&lt;/span> Диаграммы Ганта (Gantt diagram)&lt;/h3>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.3.1&lt;/span> Синтаксис&lt;/h4>
&lt;h4 id="примеры">&lt;span class="section-num">3.3.2&lt;/span> Примеры&lt;/h4>
&lt;h3 id="uml-диаграммы-классов--class-diagram">&lt;span class="section-num">3.4&lt;/span> UML-диаграммы классов (Class diagram)&lt;/h3>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.4.1&lt;/span> Синтаксис&lt;/h4>
&lt;h4 id="примеры">&lt;span class="section-num">3.4.2&lt;/span> Примеры&lt;/h4>
&lt;h3 id="графы-git--git-graph">&lt;span class="section-num">3.5&lt;/span> Графы git (Git graph)&lt;/h3>
&lt;ul>
&lt;li>Описание стратегии ветвления &lt;em>git&lt;/em>.&lt;/li>
&lt;/ul>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.5.1&lt;/span> Синтаксис&lt;/h4>
&lt;ul>
&lt;li>Ключевое слово: &lt;code>gitGraph&lt;/code>.&lt;/li>
&lt;li>&lt;code>options&lt;/code>: задаёт параметры отображения.&lt;/li>
&lt;li>&lt;code>commit&lt;/code>: отображается кружочком с хешем.
&lt;ul>
&lt;li>Хеш коммита генерится автоматически.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>checkout &amp;lt;branch&amp;gt;&lt;/code>: переключает на новую ветку.&lt;/li>
&lt;li>&lt;code>merge &amp;lt;branch&amp;gt;&lt;/code>: сливает ветки.&lt;/li>
&lt;/ul>
&lt;h4 id="примеры">&lt;span class="section-num">3.5.2&lt;/span> Примеры&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Простое ветвление&lt;/p>
&lt;pre>&lt;code> gitGraph:
options
{
&amp;quot;nodeSpacing&amp;quot;: 100,
&amp;quot;nodeRadius&amp;quot;: 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">gitGraph:
options
{
&amp;quot;nodeSpacing&amp;quot;: 100,
&amp;quot;nodeRadius&amp;quot;: 10
}
end
commit
branch newbranch
checkout newbranch
commit
commit
checkout master
commit
commit
merge newbranch
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="er-диаграммы--entity-relationship-diagram">&lt;span class="section-num">3.6&lt;/span> ER-диаграммы (Entity Relationship Diagram)&lt;/h3>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.6.1&lt;/span> Синтаксис&lt;/h4>
&lt;h4 id="примеры">&lt;span class="section-num">3.6.2&lt;/span> Примеры&lt;/h4>
&lt;h3 id="диаграммы-пользовательского-пути--user-journey-diagram">&lt;span class="section-num">3.7&lt;/span> Диаграммы пользовательского пути (User Journey Diagram)&lt;/h3>
&lt;ul>
&lt;li>С помощью диаграммы пользовательского пути можно продемонстрировать процесс использования или реализации чего-либо.&lt;/li>
&lt;li>Указывается набор пользователей и их удовлетворение процессом.&lt;/li>
&lt;/ul>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.7.1&lt;/span> Синтаксис&lt;/h4>
&lt;ul>
&lt;li>&lt;code>journey&lt;/code>: начинает диаграмму.&lt;/li>
&lt;li>&lt;code>title&lt;/code>: название диаграммы.&lt;/li>
&lt;li>&lt;code>section&lt;/code>: раздел диаграммы.
&lt;ul>
&lt;li>В каждом разделе указываются конкретные шаги с оценкой по десятибалльной шкале и закреплённое за действием лицо.&lt;/li>
&lt;li>&lt;code>:&lt;/code> разделитель полей.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="примеры">&lt;span class="section-num">3.7.2&lt;/span> Примеры&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Простая диаграмма пользовательского пути&lt;/p>
&lt;pre>&lt;code> journey
title Процесс написания статьи
section Поиск / изучение
Поиск информации: 5: Я
Структурирование: 5: Я
section Пишем
Пишем черновик: 5: Я
Готовим картинки: 4: Я
section Редактируем
Проверяем: 3: Я, Соавтор
Финальные правки: 2: Я
section Публикация
Публикуем: 5: Я
Радуемся: 8: Я, Соавтор
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">journey
title Процесс написания статьи
section Поиск / изучение
Поиск информации: 5: Я
Структурирование: 5: Я
section Пишем
Пишем черновик: 5: Я
Готовим картинки: 4: Я
section Редактируем
Проверяем: 3: Я, Соавтор
Финальные правки: 2: Я
section Публикация
Публикуем: 5: Я
Радуемся: 8: Я, Соавтор
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="диаграммы-последовательности--sequence-diagrams">&lt;span class="section-num">3.8&lt;/span> Диаграммы последовательности (Sequence diagrams)&lt;/h3>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.8.1&lt;/span> Синтаксис&lt;/h4>
&lt;h4 id="примеры">&lt;span class="section-num">3.8.2&lt;/span> Примеры&lt;/h4>
&lt;h3 id="круговые-диаграммы--pie-chart">&lt;span class="section-num">3.9&lt;/span> Круговые диаграммы (Pie chart)&lt;/h3>
&lt;ul>
&lt;li>Показывает, какую часть от общего числа занимает отдельные части.&lt;/li>
&lt;/ul>
&lt;h4 id="синтаксис">&lt;span class="section-num">3.9.1&lt;/span> Синтаксис&lt;/h4>
&lt;ul>
&lt;li>Ключевое слово: &lt;code>pie&lt;/code>.&lt;/li>
&lt;li>Оператор &lt;code>title&lt;/code> позволяет задать название диаграммы.
&lt;ul>
&lt;li>&lt;code>title&lt;/code> можно опустить, тогда диаграмма будет безымянной.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Строки с названиями элементов.
&lt;ul>
&lt;li>Данные записываются построчно следующим образом:
&lt;ul>
&lt;li>название в кавычках;&lt;/li>
&lt;li>разделитель в виде двоеточия;&lt;/li>
&lt;li>положительное числовое значение (поддерживается до двух знаков после запятой).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="примеры">&lt;span class="section-num">3.9.2&lt;/span> Примеры&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Домашние животные&lt;/p>
&lt;pre>&lt;code> pie title Домашние животные
&amp;quot;Собаки&amp;quot; : 386
&amp;quot;Кошки&amp;quot; : 85
&amp;quot;Хомячки&amp;quot; : 15
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-mermaid">pie title Домашние животные
&amp;quot;Собаки&amp;quot; : 386
&amp;quot;Кошки&amp;quot; : 85
&amp;quot;Хомячки&amp;quot; : 15
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul></description></item><item><title>Emacs. Основы работы</title><link>https://yamadharma.github.io/ru/post/2021/01/03/emacs-basics/</link><pubDate>Sun, 03 Jan 2021 12:35:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/03/emacs-basics/</guid><description>&lt;p>Основы работы в Emacs.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#основы-работы">&lt;span class="section-num">1&lt;/span> Основы работы&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="основы-работы">&lt;span class="section-num">1&lt;/span> Основы работы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/03/emacs-basics-encoding/">Emacs. Основы. Кодировка&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2023/03/12/emacs-navigation-basics/">Emacs. Основы навигации&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Julia. DifferentialEquations.jl. Callback functions</title><link>https://yamadharma.github.io/ru/post/2021/01/02/julia-differentialequations-callback-functions/</link><pubDate>Sat, 02 Jan 2021 14:04:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2021/01/02/julia-differentialequations-callback-functions/</guid><description>&lt;p>Использование обратного вызова функций в пакете &lt;em>DifferentialEquations.jl&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#типы-обратных-вызовов">&lt;span class="section-num">1&lt;/span> Типы обратных вызовов&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#непрерывный-обратный-вызов">&lt;span class="section-num">1.1&lt;/span> Непрерывный обратный вызов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#дискретный-обратный-вызов">&lt;span class="section-num">1.2&lt;/span> Дискретный обратный вызов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#векторный-непрерывный-обратный-вызов">&lt;span class="section-num">1.3&lt;/span> Векторный непрерывный обратный вызов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#набор-обратных-вызовов">&lt;span class="section-num">1.4&lt;/span> Набор обратных вызовов&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#применение-обратных-вызовов">&lt;span class="section-num">2&lt;/span> Применение обратных вызовов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#примеры">&lt;span class="section-num">3&lt;/span> Примеры&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="типы-обратных-вызовов">&lt;span class="section-num">1&lt;/span> Типы обратных вызовов&lt;/h2>
&lt;ul>
&lt;li>&lt;code>ContinuousCallback&lt;/code> (непрерывный) - срабатывает, когда непрерывная функция условия достигает нуля. В других средствах реализуется как событие (event).&lt;/li>
&lt;li>&lt;code>DiscreteCallback&lt;/code> (дискретный) - срабатывает, когда функция условия истинна.&lt;/li>
&lt;li>&lt;code>VectorContinuousCallback&lt;/code> (векторный) - эквивалентен вектору непрерывных обратных вызовов. Позволяет указать, когда вызывается какой обратный вызов.&lt;/li>
&lt;/ul>
&lt;h3 id="непрерывный-обратный-вызов">&lt;span class="section-num">1.1&lt;/span> Непрерывный обратный вызов&lt;/h3>
&lt;pre>&lt;code class="language-julia">ContinuousCallback(condition,affect!,affect_neg!;
initialize = INITIALIZE_DEFAULT,
idxs = nothing,
rootfind=true,
save_positions=(true,true),
interp_points=10,
abstol=10eps(),reltol=0)
&lt;/code>&lt;/pre>
&lt;h3 id="дискретный-обратный-вызов">&lt;span class="section-num">1.2&lt;/span> Дискретный обратный вызов&lt;/h3>
&lt;pre>&lt;code class="language-julia">DiscreteCallback(condition,affect!;
initialize = INITIALIZE_DEFAULT,
save_positions=(true,true))
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>&lt;code>condition&lt;/code> - функция &lt;code>condition(u,t,integrator)&lt;/code>, определяющая, когда следует использовать обратный вызов. Обратный вызов инициируется, если условие истинно (&lt;code>true&lt;/code>).&lt;/li>
&lt;li>&lt;code>affect!&lt;/code> - функция &lt;code>affect!(integrator)&lt;/code>, которая может изменять текущее состояние интегратора.&lt;/li>
&lt;li>&lt;code>save_positions&lt;/code> - логический кортеж для сохранения до или после
&lt;code>affect!&lt;/code>. Это сохранение может происходить непосредственно до,
после события, во время события. Оно не зависит от таких
параметров, как &lt;code>saveat&lt;/code>, &lt;code>save_everystep&lt;/code> и т.д. (например, если
&lt;code>saveat = [1.0,2.0,3.0]&lt;/code>, то можно добавить точку сохранения в &lt;code>2.1&lt;/code>, если условие верно). Чтобы прерывистые изменения
обрабатывались правильно (без ошибок), необходимо установить &lt;code>save_positions = (true, true)&lt;/code>.&lt;/li>
&lt;li>&lt;code>initialize&lt;/code> - функция &lt;code>function(c,u,t,integrator)&lt;/code>, которая может
использоваться для инициализации состояния обратного вызова &lt;code>c&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="векторный-непрерывный-обратный-вызов">&lt;span class="section-num">1.3&lt;/span> Векторный непрерывный обратный вызов&lt;/h3>
&lt;pre>&lt;code class="language-julia">VectorContinuousCallback(condition,affect!,affect_neg!,len;
initialize = INITIALIZE_DEFAULT,
idxs = nothing,
rootfind=true,
save_positions=(true,true),
interp_points=10,
abstol=10eps(),reltol=0)
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-julia">VectorContinuousCallback(condition,affect!,len;
initialize = INITIALIZE_DEFAULT,
idxs = nothing,
rootfind=true,
save_positions=(true,true),
affect_neg! = affect!,
interp_points=10,
abstol=10eps(),reltol=0)
&lt;/code>&lt;/pre>
&lt;h3 id="набор-обратных-вызовов">&lt;span class="section-num">1.4&lt;/span> Набор обратных вызовов&lt;/h3>
&lt;p>Несколько обратных вызовов можно объединить в один набор:&lt;/p>
&lt;pre>&lt;code class="language-julia">CallbackSet(cb1,cb2,cb3)
&lt;/code>&lt;/pre>
&lt;p>Можно передать столько угодно обратных вызовов. Когда решатели обнаруживают несколько обратных вызовов, применяются следующие правила:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ContinuousCallbacks&lt;/code> и &lt;code>VectorContinuousCallbacks&lt;/code> применяются
перед &lt;code>DiscreteCallbacks&lt;/code> (потому, что они часто реализуют обнаружение событий, которое возвращает временной шаг на величину, меньшему, чем &lt;code>dt&lt;/code>).&lt;/li>
&lt;li>Для &lt;code>ContinuousCallbacks&lt;/code> и &lt;code>VectorContinuousCallbacks&lt;/code> применяется только первый из них (шаг времени рассчитывается только по первому).&lt;/li>
&lt;li>Затем по порядку применяются &lt;code>DiscreteCallbacks&lt;/code>. Порядок имеет значение только для условий: если предыдущий обратный вызов изменяет функция таким образом, что следующий обратный вызов больше не считает условие истинным, он не будет применяться.&lt;/li>
&lt;/ul>
&lt;h2 id="применение-обратных-вызовов">&lt;span class="section-num">2&lt;/span> Применение обратных вызовов&lt;/h2>
&lt;p>Обратный вызов передаётся решателю:&lt;/p>
&lt;pre>&lt;code class="language-julia">sol = solve(prob,alg,callback=cb)
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Когда используется обратный вызов, режим сохранения по умолчанию
отключён. Это потому, что в противном случае события дважды
сохраняли бы одно из значений. Чтобы снова включить стандартное
поведение при сохранении, необходимо, чтобы первое значение
&lt;code>save_positions&lt;/code> было истинным хотя бы для одного обратного вызова.&lt;/li>
&lt;li>Общая проблема обратных вызовов заключается в том, что они вызывают
большие изменения шага, поэтому после такого изменения может быть
разумным уменьшить &lt;code>dt&lt;/code>. Например, &lt;code>set_proposed_dt!&lt;/code> используется
для установки следующего шага и &lt;code>terminate!&lt;/code> используется для
остановки моделирования.&lt;/li>
&lt;/ul>
&lt;h2 id="примеры">&lt;span class="section-num">3&lt;/span> Примеры&lt;/h2></description></item><item><title>Соглашения о кодировании</title><link>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</link><pubDate>Sun, 20 Dec 2020 16:10:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/</guid><description>&lt;p>Общие положения соглашений о кодировании.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#цели-правил-кодирования">&lt;span class="section-num">1&lt;/span> Цели правил кодирования&lt;/a>&lt;/li>
&lt;li>&lt;a href="#соглашения-об-именовании">&lt;span class="section-num">2&lt;/span> Соглашения об именовании&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#именование-переменных">&lt;span class="section-num">2.1&lt;/span> Именование переменных&lt;/a>&lt;/li>
&lt;li>&lt;a href="#предикаты">&lt;span class="section-num">2.2&lt;/span> Предикаты&lt;/a>&lt;/li>
&lt;li>&lt;a href="#разное">&lt;span class="section-num">2.3&lt;/span> Разное&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#количество">&lt;span class="section-num">2.3.1&lt;/span> Количество&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#отступы">&lt;span class="section-num">3&lt;/span> Отступы&lt;/a>&lt;/li>
&lt;li>&lt;a href="#комментарии">&lt;span class="section-num">4&lt;/span> Комментарии&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="цели-правил-кодирования">&lt;span class="section-num">1&lt;/span> Цели правил кодирования&lt;/h2>
&lt;ul>
&lt;li>Единый стиль оформления кода во всем проекте.&lt;/li>
&lt;li>Визуальное выделение наиболее значимых частей.&lt;/li>
&lt;/ul>
&lt;h2 id="соглашения-об-именовании">&lt;span class="section-num">2&lt;/span> Соглашения об именовании&lt;/h2>
&lt;h3 id="именование-переменных">&lt;span class="section-num">2.1&lt;/span> Именование переменных&lt;/h3>
&lt;p>Существует несколько популярных соглашений об именования переменных:&lt;/p>
&lt;ul>
&lt;li>Верблюжья нотация (&lt;code>CamelCase&lt;/code>): &lt;code>MyClass&lt;/code>&lt;/li>
&lt;li>Змеиная нотация (&lt;code>snake_case&lt;/code>): &lt;code>my_const&lt;/code>&lt;/li>
&lt;li>Шашлычная нотация (&lt;code>kebab-case&lt;/code>): &lt;code>my-data&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://ru.wikipedia.org/wiki/%D0%92%D0%B5%D0%BD%D0%B3%D0%B5%D1%80%D1%81%D0%BA%D0%B0%D1%8F_%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F" target="_blank" rel="noopener">Венгерская нотация&lt;/a> - соглашение об именовании идентификаторов (переменных и функций), которое сводится к кодированию типов данных прямо в название: &lt;code>userArray&lt;/code>.&lt;/li>
&lt;li>Нотация Cobol: &lt;code>COBOL-CASE&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="предикаты">&lt;span class="section-num">2.2&lt;/span> Предикаты&lt;/h3>
&lt;p>Предикат - это функция-проверка, она всегда возвращает либо &lt;code>true&lt;/code>, либо &lt;code>false&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>Предваряются префиксом &lt;code>is&lt;/code>: &lt;code>isEmpty()&lt;/code>.&lt;/li>
&lt;li>Если предикат отвечает на вопрос &lt;em>есть ли?&lt;/em> (например, &lt;em>есть ли в списке чисел нечётное число?&lt;/em>), принято использовать слово &lt;code>has&lt;/code>: &lt;code>hasChildren()&lt;/code>.&lt;/li>
&lt;li>Используется знак &lt;code>?&lt;/code> в конце слова (lisp, ruby): &lt;code>empty?&lt;/code>.&lt;/li>
&lt;li>Используется буква &lt;code>p&lt;/code> в конце слова (emacs lisp): &lt;code>empty-p&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="разное">&lt;span class="section-num">2.3&lt;/span> Разное&lt;/h3>
&lt;h4 id="количество">&lt;span class="section-num">2.3.1&lt;/span> Количество&lt;/h4>
&lt;p>Если нужна переменная, в которой содержится количество чего-либо, используется комбинация: сущность во множественном числе + &lt;code>count&lt;/code>: &lt;code>symbolsCount&lt;/code>.&lt;/p>
&lt;h2 id="отступы">&lt;span class="section-num">3&lt;/span> Отступы&lt;/h2>
&lt;ul>
&lt;li>Во многих стандартах кодирования запрещается использовать табуляции - их требуют заменять пробелами.&lt;/li>
&lt;li>В различных редакторах может устанавливаться разная длина символа табуляции, поэтому при смешении табуляции с пробелами исходный код будет выглядеть по-разному в разных редакторах.&lt;/li>
&lt;/ul>
&lt;h2 id="комментарии">&lt;span class="section-num">4&lt;/span> Комментарии&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Комментарий - некомпилируемая часть исходного кода, поясняющая принцип работы программы.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Иногда в комментариях фиксируют информацию:&lt;/p>
&lt;ul>
&lt;li>о версии кода и, внесенных в ней, изменениях;&lt;/li>
&lt;li>об авторе кода или конкретных правок;&lt;/li>
&lt;li>о лицензии, по которой распространяется код;&lt;/li>
&lt;li>о неисправленных ошибках и прочих недочетах, заметки разного рода.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Комментарии должны быть коггерентны коду. При изменении кода надо менять комментарии.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Комментарии не должны пояснять очевидные моменты.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Комментарии должны быть понятны всем, а не только тем, кто их пишет.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Комментарии не должны содержать бесполезной информации.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Написание комментариев и поддержка единого стиля комментариев не должна отнимать слишком много времени.&lt;/p>
&lt;p>Использование современных инструментов разработки позволяют полностью исключить некоторые типы комментариев из программы:&lt;/p>
&lt;/li>
&lt;li>
&lt;p>информацию о версии программы, авторе изменений и ее особенностях позволяют хранить системы управления версиями;&lt;/p>
&lt;/li>
&lt;li>
&lt;p>комментарии TODO, BUG и FIXME могут быть перенесены в трекеры задач и ошибок.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Соглашение о кодировании. Emacs lisp</title><link>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</link><pubDate>Sun, 20 Dec 2020 15:51:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/20/elisp-coding-conventions/</guid><description>&lt;p>Соглашения о кодировании для elisp.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#соглашение-об-именовании">Соглашение об именовании&lt;/a>&lt;/li>
&lt;li>&lt;a href="#внешние-ссылки">Внешние ссылки&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="соглашение-об-именовании">Соглашение об именовании&lt;/h2>
&lt;p>В соглашениях об именовании emacs lisp следует обычным правилам именования (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/12/20/coding-conventions/">Соглашения о кодировании&lt;/a>).&lt;/p>
&lt;ul>
&lt;li>В названиях функций используются только дефисы (например, &lt;code>package-prefix-function-name&lt;/code>).&lt;/li>
&lt;li>Косая черта используется для разделения имени пакета и функции (например, &lt;code>package-prefix/function-name&lt;/code>), является популярным нестандартным соглашением.&lt;/li>
&lt;li>Обычно имена предикатных функций заканчиваются на &lt;code>-p&lt;/code>.&lt;/li>
&lt;li>Имена предикатных функций могут заканчиваться на &lt;code>?&lt;/code> (как в Scheme, Racket Lisp, ruby, clojure) вместо &lt;code>p&lt;/code>. Поскольку вопросительный знак более интуитивно понятен, его легче идентифицировать и его можно синтаксически проверить&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/li>
&lt;li>Двойное тире для внутренних методов (вспомогательных функций) является неявным соглашением.&lt;/li>
&lt;li>Переменная, начинающаяся с подчёркивания &lt;code>_&lt;/code> - неиспользуемая переменная&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> (неявное соглашение).&lt;/li>
&lt;li>Соглашение GNU emacs об использовании &lt;code>ALLCAPS&lt;/code> для параметров.&lt;/li>
&lt;/ul>
&lt;h2 id="внешние-ссылки">Внешние ссылки&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/bbatsov/emacs-lisp-style-guide" target="_blank" rel="noopener">A community-driven Emacs Lisp style guide&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;code>p&lt;/code> нельзя, потому что не все функции, заканчивающиеся на &lt;code>p&lt;/code>, являются предикатом.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Это пришло из современных практик на других языках (я думаю, python ruby).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Работа с PGP</title><link>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</link><pubDate>Fri, 18 Dec 2020 12:39:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/18/using-pgp/</guid><description>&lt;p>Использование набора программ GPG (GNU ревлизация PGP).&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#экспорт-ключей-pgp">&lt;span class="section-num">1&lt;/span> Экспорт ключей PGP&lt;/a>&lt;/li>
&lt;li>&lt;a href="#gpg-agent">&lt;span class="section-num">2&lt;/span> &lt;code>gpg-agent&lt;/code>&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#общая-информация">&lt;span class="section-num">2.1&lt;/span> Общая информация&lt;/a>&lt;/li>
&lt;li>&lt;a href="#запуск">&lt;span class="section-num">2.2&lt;/span> Запуск&lt;/a>&lt;/li>
&lt;li>&lt;a href="#перезапуск-агента">&lt;span class="section-num">2.3&lt;/span> Перезапуск агента&lt;/a>&lt;/li>
&lt;li>&lt;a href="#настройка">&lt;span class="section-num">2.4&lt;/span> Настройка&lt;/a>&lt;/li>
&lt;li>&lt;a href="#pinentry">&lt;span class="section-num">2.5&lt;/span> pinentry&lt;/a>&lt;/li>
&lt;li>&lt;a href="#кэширование-паролей">&lt;span class="section-num">2.6&lt;/span> Кэширование паролей&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#шифрование">&lt;span class="section-num">3&lt;/span> Шифрование&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#симметричное-шифрование">&lt;span class="section-num">3.1&lt;/span> Симметричное шифрование&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="экспорт-ключей-pgp">&lt;span class="section-num">1&lt;/span> Экспорт ключей PGP&lt;/h2>
&lt;ul>
&lt;li>Экспорт ключей
&lt;ul>
&lt;li>
&lt;p>Экспорт всех открытых ключей в текстовый файл в кодировке base64:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg -a --export &amp;gt; mypubkeys.asc
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Экспорт всех зашифрованных закрытых ключей (которые также будут включать соответствующие открытые ключи) в текстовый файл:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg -a --export-secret-keys &amp;gt; myprivatekeys.asc
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Опционально экспортируется &lt;code>trustdb&lt;/code> gpg в текстовый файл:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --export-ownertrust &amp;gt; otrust.txt
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Импорт ключей
&lt;ul>
&lt;li>
&lt;p>Выполните команды &lt;code>gpg --import&lt;/code> для двух файлов &lt;code>asc&lt;/code>, а затем проверьте наличие новых ключей с помощью &lt;code>gpg -k&lt;/code> и &lt;code>gpg -K&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --import myprivatekeys.asc
gpg --import mypubkeys.asc
gpg -K
gpg -k
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>При желании также импортируйте файл &lt;code>trustdb&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --import-ownertrust otrust.txt
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Проверьте шифрование и дешифрование с помощью команд &lt;code>gpg -er USERID&lt;/code> и &lt;code>gpg -d&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="gpg-agent">&lt;span class="section-num">2&lt;/span> &lt;code>gpg-agent&lt;/code>&lt;/h2>
&lt;h3 id="общая-информация">&lt;span class="section-num">2.1&lt;/span> Общая информация&lt;/h3>
&lt;ul>
&lt;li>Используется для временного хранения пароля.&lt;/li>
&lt;li>Предоставляются пользовательские сокеты &lt;code>systemd&lt;/code>:
&lt;ul>
&lt;li>основной сокет &lt;code>gpg-agent.socket&lt;/code> используется &lt;em>gpg&lt;/em> для подключения к демону &lt;code>gpg-agent&lt;/code>;&lt;/li>
&lt;li>сокет &lt;code>gpg-agent-extra.socket&lt;/code> на локальной системе используется для настройки переадресации Unix-сокета с удалённой системы;&lt;/li>
&lt;li>&lt;code>gpg-agent-browser.socket&lt;/code> позволяет веб-браузерам обращаться к демону &lt;code>gpg-agent&lt;/code>;&lt;/li>
&lt;li>&lt;code>gpg-agent-ssh.socket&lt;/code> может использоваться SSH для кэширования ключей SSH, добавленных программой ssh-add;&lt;/li>
&lt;li>&lt;code>dirmngr.socket&lt;/code> запускает демон GnuPG, обрабатывающий соединения с серверами ключей.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="запуск">&lt;span class="section-num">2.2&lt;/span> Запуск&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Активизируются сокеты, а не сам &lt;code>gpg-agent&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Запуск под управлением &lt;code>systemd&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-shell">systemctl --user enable --now gpg-agent.socket
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="перезапуск-агента">&lt;span class="section-num">2.3&lt;/span> Перезапуск агента&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>После обновления настроек следует перезапустить агента, передав команду &lt;code>RELOADAGENT&lt;/code> программе &lt;code>gpg-connect-agent&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg-connect-agent reloadagent /bye
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="настройка">&lt;span class="section-num">2.4&lt;/span> Настройка&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Настраивается в файле &lt;code>~/.gnupg/gpg-agent.conf&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Время жизни для ключей в кэше с момента последнего использования:&lt;/p>
&lt;pre>&lt;code class="language-conf-unix">default-cache-ttl 3600
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="pinentry">&lt;span class="section-num">2.5&lt;/span> pinentry&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>gpg-agent использует pinentry для отображения диалога запроса пароля.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Вариант диалога настраивается в файле настроек &lt;code>~/.gnupg/gpg-agent.conf&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Чтобы установить конкретный диалог, установите опцию &lt;code>pinentry-program&lt;/code> в файле &lt;code>~/.gnupg/gpg-agent.conf&lt;/code>, например:&lt;/p>
&lt;pre>&lt;code class="language-conf-unix">pinentry-program /usr/bin/pinentry-curses
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Существуют разные реализации pinentry.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Просмотр реализаций:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Gentoo:&lt;/p>
&lt;pre>&lt;code class="language-shell">eselect pinentry list
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="кэширование-паролей">&lt;span class="section-num">2.6&lt;/span> Кэширование паролей&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Время кеширования определяется параметрами &lt;code>max-cache-ttl&lt;/code> и &lt;code>default-cache-ttl&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Чтобы вводить пароль всего один раз за сеанс, нужно установить их на очень высокое значение, например:&lt;/p>
&lt;pre>&lt;code class="language-conf-unix">## gpg-agent.conf
max-cache-ttl 60480000
default-cache-ttl 60480000
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Для кэширования паролей в режиме эмуляции SSH следует установить параметры &lt;code>default-cache-ttl-ssh&lt;/code> и &lt;code>max-cache-ttl-ssh&lt;/code>, например:&lt;/p>
&lt;pre>&lt;code class="language-conf-unix">## gpg-agent.conf
default-cache-ttl-ssh 60480000
max-cache-ttl-ssh 60480000
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="шифрование">&lt;span class="section-num">3&lt;/span> Шифрование&lt;/h2>
&lt;ul>
&lt;li>Шифрование может быть симметричным и ассиметричным.&lt;/li>
&lt;li>Симметричное шифрование шифруется и расшифровывается приватным ключом или одной и той же парольной фразой.&lt;/li>
&lt;li>Ассиметричное шифрование шифруется публичным ключом, расшифровывается приватным.&lt;/li>
&lt;/ul>
&lt;h3 id="симметричное-шифрование">&lt;span class="section-num">3.1&lt;/span> Симметричное шифрование&lt;/h3>
&lt;ul>
&lt;li>Зашифровать файл:&lt;/li>
&lt;/ul>
&lt;!--listend-->
&lt;pre>&lt;code class="language-shell">gpg -c filename
&lt;/code>&lt;/pre>
&lt;p>или&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --symmetric filename
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>Расшифровать файл:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --decrypt-files filename.gpg
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Расшифровать файл с выводом на терминал:&lt;/p>
&lt;pre>&lt;code class="language-shell">gpg --decrypt filename.gpg
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul></description></item><item><title>Общепринятые коммиты</title><link>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</link><pubDate>Fri, 11 Dec 2020 19:39:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/</guid><description>&lt;p>Использование спецификации &lt;em>Conventional Commits&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#описание">Описание&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#структура-коммита">Структура коммита&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#базовые-типы-коммитов">Базовые типы коммитов&lt;/a>&lt;/li>
&lt;li>&lt;a href="#соглашения-the-angular-convention">Соглашения The Angular convention&lt;/a>&lt;/li>
&lt;li>&lt;a href="#соглашения-commitlint-config-conventional">Соглашения @commitlint/config-conventional&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#программное-обеспечение">Программное обеспечение&lt;/a>&lt;/li>
&lt;li>&lt;a href="#backlinks">Backlinks&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#система-контроля-версий-git">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/">Система контроля версий git&lt;/a>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#семантическое-версионирование">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="описание">Описание&lt;/h2>
&lt;p>Спецификация &lt;a href="https://www.conventionalcommits.org/ru/" target="_blank" rel="noopener">Conventional Commits&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Соглашение о том, как нужно писать сообщения commit&amp;rsquo;ов.&lt;/li>
&lt;li>Совместимо с &lt;a href="http://semver.org/" target="_blank" rel="noopener">SemVer&lt;/a> (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>). Даже вернее сказать, сильно связано с семантическим версионированием.&lt;/li>
&lt;li>Регламентирует структуру и основные типы коммитов.&lt;/li>
&lt;/ul>
&lt;h3 id="структура-коммита">Структура коммита&lt;/h3>
&lt;pre>&lt;code class="language-text">&amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;BLANK LINE&amp;gt;
&amp;lt;footer&amp;gt;
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Заголовок является обязательным.&lt;/li>
&lt;li>Любая строка сообщения о фиксации не может быть длиннее 100 символов.&lt;/li>
&lt;li>Тема (subject) содержит краткое описание изменения.
&lt;ul>
&lt;li>Используйте повелительное наклонение в настоящем времени: «изменить» (&amp;ldquo;change&amp;rdquo; not &amp;ldquo;changed&amp;rdquo; nor &amp;ldquo;changes&amp;rdquo;).&lt;/li>
&lt;li>Не используйте заглавную первую букву.&lt;/li>
&lt;li>Не ставьте точку в конце.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Тело (body) должно включать мотивацию к изменению и противопоставлять это предыдущему поведению.
&lt;ul>
&lt;li>Как и в теме, используйте повелительное наклонение в настоящем времени.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Нижний колонтитул (footer) должен содержать любую информацию о критических изменениях.
&lt;ul>
&lt;li>Также содержит ссылку на issue (например, на github), который закрывает эта фиксация.&lt;/li>
&lt;li>Критические изменения должны начинаться со слова &lt;code>BREAKING CHANGE:&lt;/code> с пробела или двух символов новой строки. Затем для этого используется остальная часть сообщения фиксации.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="базовые-типы-коммитов">Базовые типы коммитов&lt;/h4>
&lt;ul>
&lt;li>&lt;code>fix:&lt;/code> &amp;mdash; коммит типа fix исправляет ошибку (bug) в вашем коде (он соответствует PATCH в SemVer).&lt;/li>
&lt;li>&lt;code>feat:&lt;/code> &amp;mdash; коммит типа feat добавляет новую функцию (feature) в ваш код (он соответствует MINOR в SemVer).&lt;/li>
&lt;li>&lt;code>BREAKING CHANGE:&lt;/code> &amp;mdash; коммит, который содержит текст &lt;code>BREAKING CHANGE:&lt;/code> в начале своего не обязательного тела сообщения (body) или в
подвале (footer), добавляет изменения, нарушающие обратную
совместимость вашего API (он соответствует MAJOR в SemVer). BREAKING CHANGE может быть частью коммита любого типа.&lt;/li>
&lt;li>&lt;code>revert:&lt;/code> &amp;mdash; если фиксация отменяет предыдущую фиксацию. Начинается с &lt;code>revert:&lt;/code>, за которым следует заголовок отменённой фиксации. В теле должно быть написано: Это отменяет фиксацию &lt;code>&amp;lt;hash&amp;gt;&lt;/code> (это SHA-хэш отменяемой фиксации).&lt;/li>
&lt;li>Другое: коммиты с типами, которые отличаются от &lt;code>fix:&lt;/code> и &lt;code>feat:&lt;/code>,
также разрешены. Например, @commitlint/config-conventional
(основанный на The Angular convention) рекомендует: chore:, docs:,
style:, refactor:, perf:, test:, и другие.&lt;/li>
&lt;/ul>
&lt;h4 id="соглашения-the-angular-convention">Соглашения The Angular convention&lt;/h4>
&lt;p>Одно из популярных соглашений о поддержке исходных кодов &amp;mdash; конвенция Angular (&lt;a href="https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines" target="_blank" rel="noopener">The Angular convention&lt;/a>).&lt;/p>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Типы коммитов The Angular convention&lt;/p>
&lt;p>Конвенция Angular (&lt;a href="https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines" target="_blank" rel="noopener">The Angular convention&lt;/a>) требует следующие типы коммитов:&lt;/p>
&lt;ul>
&lt;li>&lt;code>build:&lt;/code> &amp;mdash; изменения, влияющие на систему сборки или внешние зависимости (примеры областей (scope): gulp, broccoli, npm).&lt;/li>
&lt;li>&lt;code>ci:&lt;/code> &amp;mdash; изменения в файлах конфигурации и скриптах CI (примеры областей: Travis, Circle, BrowserStack, SauceLabs).&lt;/li>
&lt;li>&lt;code>docs:&lt;/code> &amp;mdash; изменения только в документации.&lt;/li>
&lt;li>&lt;code>feat:&lt;/code> &amp;mdash; новая функция.&lt;/li>
&lt;li>&lt;code>fix:&lt;/code> &amp;mdash; исправление ошибок.&lt;/li>
&lt;li>&lt;code>perf:&lt;/code> &amp;mdash; изменение кода, улучшающее производительность.&lt;/li>
&lt;li>&lt;code>refactor:&lt;/code> &amp;mdash; Изменение кода, которое не исправляет ошибку и не добавляет функции (рефакторинг кода).&lt;/li>
&lt;li>&lt;code>style:&lt;/code> &amp;mdash; изменения, не влияющие на смысл кода (пробелы, форматирование, отсутствие точек с запятой и т. д.).&lt;/li>
&lt;li>&lt;code>test:&lt;/code> &amp;mdash; добавление недостающих тестов или исправление существующих тестов.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!--list-separator-->
&lt;ul>
&lt;li>
&lt;p>Области действия (scope)&lt;/p>
&lt;p>Областью действия должно быть имя затронутого пакета npm (как его воспринимает человек, читающий журнал изменений, созданный из сообщений фиксации).&lt;/p>
&lt;p>Есть несколько исключений из правила «использовать имя пакета»:&lt;/p>
&lt;ul>
&lt;li>&lt;code>packaging&lt;/code> &amp;mdash; используется для изменений, которые изменяют структуру пакета, например, изменения общедоступного пути.&lt;/li>
&lt;li>&lt;code>changelog&lt;/code> &amp;mdash; используется для обновления примечаний к выпуску в CHANGELOG.md.&lt;/li>
&lt;li>отсутствует область действия &amp;mdash; полезно для изменений стиля, тестирования и рефакторинга, которые выполняются во всех пакетах (например, style: добавить отсутствующие точки с запятой).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="соглашения-commitlint-config-conventional">Соглашения @commitlint/config-conventional&lt;/h4>
&lt;p>Соглашение &lt;a href="https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional" target="_blank" rel="noopener">@commitlint/config-conventional&lt;/a> входит в пакет &lt;a href="https://github.com/conventional-changelog/conventional-changelog" target="_blank" rel="noopener">Conventional Changelog&lt;/a>. В целом в этом соглашении придерживаются соглашения Angular.&lt;/p>
&lt;h2 id="программное-обеспечение">Программное обеспечение&lt;/h2>
&lt;h2 id="backlinks">Backlinks&lt;/h2>
&lt;h3 id="система-контроля-версий-git">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/">Система контроля версий git&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятые коммиты&lt;/a>&lt;/p>
&lt;h3 id="семантическое-версионирование">&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/h3>
&lt;p>Для реализации семантического версионирования создано несколько программных продуктов. При этом лучше всего использовать комплексные продукты, которые используют информацию из коммитов системы версионирования. Естественно, коммиты должны иметь стандартизованный вид. Поэтому в семантическое версионирование применяется вместе с &lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятыми коммитами&lt;/a>.&lt;/p></description></item><item><title>Семантическое версионирование</title><link>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</link><pubDate>Fri, 11 Dec 2020 19:17:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/</guid><description>&lt;p>Семантический подход в версионированию программного обеспечения.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#краткое-описание-семантического-версионирования">&lt;span class="section-num">1&lt;/span> Краткое описание семантического версионирования&lt;/a>&lt;/li>
&lt;li>&lt;a href="#программное-обеспечение">&lt;span class="section-num">2&lt;/span> Программное обеспечение&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#пакет-semantic-release">&lt;span class="section-num">2.1&lt;/span> Пакет Semantic-release&lt;/a>&lt;/li>
&lt;li>&lt;a href="#пакет-conventional-changelog">&lt;span class="section-num">2.2&lt;/span> Пакет Conventional Changelog&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#backlinks">&lt;span class="section-num">3&lt;/span> Backlinks&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="краткое-описание-семантического-версионирования">&lt;span class="section-num">1&lt;/span> Краткое описание семантического версионирования&lt;/h2>
&lt;p>Семантическое версионирование описывается в &lt;a href="https://semver.org/lang/ru/" target="_blank" rel="noopener">манифесте семантического версионирования&lt;/a>.&lt;/p>
&lt;p>Кратко его можно описать следующим образом:&lt;/p>
&lt;ul>
&lt;li>Версия задаётся в виде кортежа &lt;code>МАЖОРНАЯ_ВЕРСИЯ.МИНОРНАЯ_ВЕРСИЯ.ПАТЧ&lt;/code>.&lt;/li>
&lt;li>Номер версии следует увеличивать:
&lt;ul>
&lt;li>МАЖОРНУЮ версию, когда сделаны обратно несовместимые изменения API.&lt;/li>
&lt;li>МИНОРНУЮ версию, когда вы добавляете новую функциональность, не нарушая обратной совместимости.&lt;/li>
&lt;li>ПАТЧ-версию, когда вы делаете обратно совместимые исправления.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Дополнительные обозначения для предрелизных и билд-метаданных
возможны как дополнения к МАЖОРНАЯ.МИНОРНАЯ.ПАТЧ формату.&lt;/li>
&lt;/ul>
&lt;h2 id="программное-обеспечение">&lt;span class="section-num">2&lt;/span> Программное обеспечение&lt;/h2>
&lt;p>Для реализации семантического версионирования создано несколько
программных продуктов. При этом лучше всего использовать комплексные
продукты, которые используют информацию из коммитов системы
версионирования. Естественно, коммиты должны иметь стандартизованный
вид. Поэтому в семантическое версионирование применяется вместе с &lt;em>общепринятыми коммитами&lt;/em> (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятые коммиты&lt;/a>).&lt;/p>
&lt;h3 id="пакет-semantic-release">&lt;span class="section-num">2.1&lt;/span> Пакет Semantic-release&lt;/h3>
&lt;p>Пакет &lt;a href="https://yamadharma.github.io/ru/post/2021/01/15/semantic-versioning-semantic-release/">Semantic-release&lt;/a>
автоматизирует весь рабочий процесс выпуска программного пакета.&lt;/p>
&lt;h3 id="пакет-conventional-changelog">&lt;span class="section-num">2.2&lt;/span> Пакет Conventional Changelog&lt;/h3>
&lt;p>Пакет &lt;a href="https://yamadharma.github.io/ru/post/2021/01/16/semantic-versioning-conventional-changelog/">Conventional Changelog&lt;/a> является комплексным решением по управлению коммитами и генерации журнала изменений.
Он содержит набор утилит, которые можно использовать по-отдельности.&lt;/p>
&lt;h2 id="backlinks">&lt;span class="section-num">3&lt;/span> Backlinks&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/">Система контроля версий git&lt;/a>&lt;/li>
&lt;/ul>
&lt;!--listend-->
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятые коммиты&lt;/a>&lt;/li>
&lt;/ul>
&lt;!--listend-->
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/">Практический сценарий использования git&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Система контроля версий git</title><link>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</link><pubDate>Mon, 07 Dec 2020 15:47:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/12/07/git-cvs/</guid><description>&lt;p>Использование системы контроля версий &lt;em>git&lt;/em>.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#преподавание-git">Преподавание git&lt;/a>&lt;/li>
&lt;li>&lt;a href="#сопутствующие-темы">Сопутствующие темы&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="преподавание-git">Преподавание git&lt;/h2>
&lt;p>Предполагается вводить git в лабораторные работы начиная с 1 курса.&lt;/p>
&lt;ul>
&lt;li>1 курс
&lt;ul>
&lt;li>Операционные системы (Архитектура ЭВМ)
&lt;ul>
&lt;li>Основы работы в git.&lt;/li>
&lt;li>Создание учётной записи на Github.&lt;/li>
&lt;li>Выкладывание лабораторных работ на Git.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Операционные системы
&lt;ul>
&lt;li>Основы работы в git.&lt;/li>
&lt;li>Создание учётной записи на Github.&lt;/li>
&lt;li>Формат коммитов и версий. Даётся as is, без особых пояснений.&lt;/li>
&lt;li>Выкладывание лабораторных работ на Git.&lt;/li>
&lt;li>Использование git-flow.&lt;/li>
&lt;li>Семантическое версионирование.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Для всех курсов
&lt;ul>
&lt;li>Рабочее пространство курса располагается в git (см. &lt;a href="https://yamadharma.github.io/ru/post/2021/01/16/workspace-laboratory-work/">Рабочее пространство для лабораторной работы&lt;/a>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="сопутствующие-темы">Сопутствующие темы&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/28/verifying-git-commits-gpg/">Верификация коммитов git с помощью GPG&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/04/18/git-workflow/">Варианты Git Workflow&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/semantic-versioning/">Семантическое версионирование&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2020/12/11/conventional-commits/">Общепринятые коммиты&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/03/27/git-multiple-remote-repositories/">git. Несколько удалённых репозиториев&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/01/17/git-practical-use-case/">Практический сценарий использования git&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/04/github-command-line-utilities/">github: утилиты командной строки&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/08/23/git-submodules/">git submodules&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Языки научного программирования</title><link>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</link><pubDate>Fri, 30 Oct 2020 19:05:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/10/30/scientific-programming-languages/</guid><description>&lt;p>Специфика языков программирования для научно-инженерных расчётов.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#список-языков-научного-программирования">Список языков научного программирования&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="список-языков-научного-программирования">Список языков научного программирования&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2021/08/26/octave-programming-language/">Язык программирования Octave&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yamadharma.github.io/ru/post/2022/01/21/julia-programming-language/">Язык программирования Julia&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Синтаксис языка Markdown</title><link>https://yamadharma.github.io/ru/post/2020/10/22/markdown-syntax/</link><pubDate>Thu, 22 Oct 2020 09:48:00 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/10/22/markdown-syntax/</guid><description>&lt;p>Общая информация по языку Markdown.&lt;/p>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#варианты-языка-markdown">&lt;span class="section-num">1&lt;/span> Варианты языка Markdown&lt;/a>&lt;/li>
&lt;li>&lt;a href="#специальные-элементы">&lt;span class="section-num">2&lt;/span> Специальные элементы&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#видео-youtube">&lt;span class="section-num">2.1&lt;/span> Видео &lt;em>Youtube&lt;/em>&lt;/a>&lt;/li>
&lt;li>&lt;a href="#видео-rutube">&lt;span class="section-num">2.2&lt;/span> Видео &lt;em>Rutube&lt;/em>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="варианты-языка-markdown">&lt;span class="section-num">1&lt;/span> Варианты языка Markdown&lt;/h2>
&lt;ul>
&lt;li>Генератор статистических сайтов &lt;a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo&lt;/a> (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/12/07/hugo-site-generator/">Генератор статических сайтов Hugo&lt;/a>) использует вариант Markdown на основе библиотеки &lt;a href="https://github.com/yuin/goldmark/" target="_blank" rel="noopener">Goldmark&lt;/a> (см. &lt;a href="https://yamadharma.github.io/ru/post/2020/11/26/hugo-markdown/">Синтаксис markdown для генератора сайтов Hugo&lt;/a>).&lt;/li>
&lt;/ul>
&lt;h2 id="специальные-элементы">&lt;span class="section-num">2&lt;/span> Специальные элементы&lt;/h2>
&lt;h3 id="видео-youtube">&lt;span class="section-num">2.1&lt;/span> Видео &lt;em>Youtube&lt;/em>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Видео youtube нельзя добавить напрямую.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>В некоторых особых случаях можно добавлять непосредственно ссылку (например, в системе Moodle).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Можно добавить изображение со ссылкой на видео в виде &lt;code>html&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-html">&amp;lt;a href=&amp;quot;http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=YOUTUBE_VIDEO_ID_HERE&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg&amp;quot; alt=&amp;quot;alternative text for search engines&amp;quot; width=&amp;quot;240&amp;quot; height=&amp;quot;180&amp;quot; border=&amp;quot;10&amp;quot; /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>Можно добавить изображение со ссылкой на видео в виде &lt;code>markdown&lt;/code> (см. &lt;a href="https://yamadharma.github.io/ru/post/2022/02/05/youtube-video-thumbnail/">Миниатюры видео для youtube&lt;/a>):&lt;/p>
&lt;pre>&lt;code class="language-markdown">[![alternative text for search engines](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID)
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h3 id="видео-rutube">&lt;span class="section-num">2.2&lt;/span> Видео &lt;em>Rutube&lt;/em>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Идентификатор видео на &lt;em>Rutube&lt;/em> представляет собой шестнадцатеричное число.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>В адресе для миниатюры используются первые цифры идентификатора.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Изображение со ссылкой на видео в виде &lt;code>markdown&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-markdown">[![alternative text for search engines](https://pic.rutubelist.ru/video/12/34/RUTUBE_PIC_ID.jpg)](https://rutube.ru/video/RUTUBE_VIDEO_ID/)
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Здесь 12 &amp;mdash; первые 2 цифры &lt;code>RUTUBE_PIC_ID&lt;/code>; 34 &amp;mdash; 3 и 4 цифры &lt;code>RUTUBE_PIC_ID&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Связь &lt;code>RUTUBE_PIC_ID&lt;/code> и &lt;code>RUTUBE_VIDEO_ID&lt;/code> мне пока не понятна.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Kwong T. - Hands-On Design Patterns and Best Practices with Julia</title><link>https://yamadharma.github.io/ru/post/2020/08/28/kwong-julia/</link><pubDate>Fri, 28 Aug 2020 16:37:31 +0300</pubDate><guid>https://yamadharma.github.io/ru/post/2020/08/28/kwong-julia/</guid><description>&lt;h2 id="kwong-t---hands-on-design-patterns-and-best-practices-with-julia">Kwong T. - Hands-On Design Patterns and Best Practices with Julia&lt;/h2>
&lt;p>&lt;a href="http://libgen.li/book/index.php?md5=42BAB0AA178AA6A4CC0522CA7B2B3853" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=42BAB0AA178AA6A4CC0522CA7B2B3853&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Шаблоны проектирования через призму языка Julia.&lt;/li>
&lt;li>Или учебник языка Julia с пояснениями его структуры через шаблоны проектирования.&lt;/li>
&lt;li>Не для первоначального изучения, а для углубления понимания структуры языка.&lt;/li>
&lt;/ol></description></item><item><title>Пассиг К. - Программирование без дураков</title><link>https://yamadharma.github.io/ru/post/2017/08/28/programmirovanie-bez-durakov/</link><pubDate>Mon, 28 Aug 2017 10:23:00 +0000</pubDate><guid>https://yamadharma.github.io/ru/post/2017/08/28/programmirovanie-bez-durakov/</guid><description>&lt;h2 id="пассиг-к---программирование-без-дураков">Пассиг К. - Программирование без дураков&lt;/h2>
&lt;p>&lt;a href="http://libgen.li/book/index.php?md5=709D6B27BBEB57769CC9B1934DED2451" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=709D6B27BBEB57769CC9B1934DED2451&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Книга представляет собой обстоятельный сборник рекомендаций начинающему программисту.&lt;/li>
&lt;li>Рекомендации в основном из тех, которые передаются из рук в руки, а не пишутся в учебниках.&lt;/li>
&lt;li>Рекомендуется прочитать начинающим программистам.&lt;/li>
&lt;/ol></description></item><item><title>Сонмез Д. - Путь программиста</title><link>https://yamadharma.github.io/ru/post/2016/04/18/sonmez-putj-programmista/</link><pubDate>Mon, 18 Apr 2016 08:07:00 +0000</pubDate><guid>https://yamadharma.github.io/ru/post/2016/04/18/sonmez-putj-programmista/</guid><description>&lt;h2 id="сонмез-д---путь-программиста">Сонмез Д. - Путь программиста&lt;/h2>
&lt;p>&lt;a href="http://libgen.li/book/index.php?md5=B2BF33EDAC00871FFF29D159A0F91FBA" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=B2BF33EDAC00871FFF29D159A0F91FBA&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Книжка не про программирование. И не про программистов. Книжка про само-менеджмент.&lt;/li>
&lt;li>Ничего нового. Однако, это опыт конкретного человека. Он пишет про то, что он освоил, и что ему помогает.&lt;/li>
&lt;li>Читается очень легко и быстро.&lt;/li>
&lt;/ol></description></item><item><title>Чакон С. - Pro Git</title><link>https://yamadharma.github.io/ru/post/2013/11/20/chakon-s-pro-git/</link><pubDate>Wed, 20 Nov 2013 07:36:00 +0000</pubDate><guid>https://yamadharma.github.io/ru/post/2013/11/20/chakon-s-pro-git/</guid><description>&lt;h2 id="чакон-с---pro-git">Чакон С. -  Pro Git&lt;/h2>
&lt;ul>
&lt;li>Чакон С. -  Pro Git  &lt;a href="http://libgen.li/book/index.php?md5=02355925e241babf0cb954a4c941aaa3" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=02355925e241babf0cb954a4c941aaa3&lt;/a>&lt;/li>
&lt;li>Chacon S. - Pro Git &lt;a href="http://libgen.li/book/index.php?md5=ee21756330d9cab2fbd5f1d4b077d0ed" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=ee21756330d9cab2fbd5f1d4b077d0ed&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>Отличная книга для начинающего использовать git.&lt;/li>
&lt;li>Изложение ведётся по возникающим перед разработчиком задачам.&lt;/li>
&lt;/ol></description></item><item><title>Линн Б. - Волшебство Git</title><link>https://yamadharma.github.io/ru/post/2013/10/29/linn-volshebstvo-git/</link><pubDate>Tue, 29 Oct 2013 09:15:00 +0000</pubDate><guid>https://yamadharma.github.io/ru/post/2013/10/29/linn-volshebstvo-git/</guid><description>&lt;h2 id="линн-б---волшебство-git">Линн Б. - Волшебство Git&lt;/h2>
&lt;p>&lt;a href="http://libgen.li/book/index.php?md5=347b462d91d20779ec736d5f393645ba" target="_blank" rel="noopener">http://libgen.li/book/index.php?md5=347b462d91d20779ec736d5f393645ba&lt;/a>&lt;/p>
&lt;ol>
&lt;li>Книга для начинающих.&lt;/li>
&lt;li>Даны лишь начальные рецепты, нет ни описания концепции распределённых систем управления версиями, ни информации по продвинутым способам работы.&lt;/li>
&lt;/ol></description></item></channel></rss>